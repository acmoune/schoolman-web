{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/data/apps/school-manager-client/components/ProfileForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Alert from '../components/Alert';\nimport validator from 'validator';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Button } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Editor, EditorState, ContentState, convertToRaw, convertFromHTML, RichUtils } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\n\nfunction ProfileForm(_ref) {\n  var profile = _ref.profile,\n      submitText = _ref.submitText,\n      onSubmit = _ref.onSubmit;\n  var classes = makeStyles(function (theme) {\n    return createStyles({\n      fieldGroup: {\n        marginBottom: 25,\n        padding: 10\n      },\n      groupTitle: {\n        fontSize: '12pt',\n        color: '#808080',\n        paddingBottom: 5,\n        borderBottom: '1px solid #DFDFDF',\n        fontWeight: 'bold',\n        marginBottom: 15\n      },\n      field: {\n        marginBottom: 30\n      }\n    });\n  })();\n\n  var _useState = useState({\n    birthDateErrors: [],\n    birthPlaceErrors: [],\n    residenceErrors: [],\n    phoneNumberErrors: [],\n    nationalityErrors: []\n  }),\n      inputErrors = _useState[0],\n      setInputErrors = _useState[1];\n\n  var _useState2 = useState({\n    open: false,\n    level: 'info',\n    message: ''\n  }),\n      alertOptions = _useState2[0],\n      setAlertOptions = _useState2[1];\n\n  function contentFrom(content) {\n    if (true) {\n      var _convertFromHTML = convertFromHTML(content),\n          contentBlocks = _convertFromHTML.contentBlocks,\n          entityMap = _convertFromHTML.entityMap;\n\n      return ContentState.createFromBlockArray(contentBlocks, entityMap);\n    }\n\n    return ContentState.createFromText(content);\n  } // Fields state variables\n\n\n  var _useState3 = useState(profile && profile.birthDate ? new Date(profile.birthDate) : null),\n      birthDate = _useState3[0],\n      setBirthDate = _useState3[1];\n\n  var _useState4 = useState(profile && profile.birthPlace ? profile.birthPlace : ''),\n      birthPlace = _useState4[0],\n      setBirthPlace = _useState4[1];\n\n  var _useState5 = useState(profile && profile.residence ? profile.residence : ''),\n      residence = _useState5[0],\n      setResidence = _useState5[1];\n\n  var _useState6 = useState(profile && profile.phoneNumber ? profile.phoneNumber : ''),\n      phoneNumber = _useState6[0],\n      setPhoneNumber = _useState6[1];\n\n  var _useState7 = useState(profile && profile.nationality ? profile.nationality : ''),\n      nationality = _useState7[0],\n      setNationality = _useState7[1];\n\n  var _useState8 = useState(profile && profile.nicNumber ? profile.nicNumber : ''),\n      nicNumber = _useState8[0],\n      setNicNumber = _useState8[1];\n\n  var _useState9 = useState(profile && profile.nicDateOfIssue ? new Date(profile.nicDateOfIssue) : null),\n      nicDateOfIssue = _useState9[0],\n      setNicDateOfIssue = _useState9[1];\n\n  var _useState10 = useState(profile && profile.nicPlaceOfIssue ? profile.nicPlaceOfIssue : ''),\n      nicPlaceOfIssue = _useState10[0],\n      setNicPlaceOfIssue = _useState10[1];\n\n  var _useState11 = useState(profile && profile.highestAcademicQualification ? profile.highestAcademicQualification : ''),\n      highestAcademicQualification = _useState11[0],\n      setHighestAcademicQualification = _useState11[1];\n\n  var _useState12 = useState(profile && profile.yearOfIssue ? profile.yearOfIssue : new Date().getFullYear()),\n      yearOfIssue = _useState12[0],\n      setYearOfIssue = _useState12[1];\n\n  var _useState13 = useState(profile && profile.englishGradeInGCEOL ? profile.englishGradeInGCEOL : ''),\n      englishGradeInGCEOL = _useState13[0],\n      setEnglishGradeInGCEOL = _useState13[1];\n\n  var _useState14 = useState(profile && profile.mathematicsGradeInGCEOL ? profile.mathematicsGradeInGCEOL : ''),\n      mathematicsGradeInGCEOL = _useState14[0],\n      setMathematicsGradeInGCEOL = _useState14[1];\n\n  var _useState15 = useState(profile && profile.professionalQualification ? profile.professionalQualification : ''),\n      professionalQualification = _useState15[0],\n      setProfessionalQualification = _useState15[1];\n\n  var _useState16 = useState(profile && profile.employmentStatus ? profile.employmentStatus : 'JobSeeker'),\n      employmentStatus = _useState16[0],\n      setEmploymentStatus = _useState16[1];\n\n  var _useState17 = useState(profile && profile.jobTitle ? profile.jobTitle : ''),\n      jobTitle = _useState17[0],\n      setJobTitle = _useState17[1];\n\n  var _useState18 = useState(profile && profile.yearsOfExperience ? profile.yearsOfExperience : 0),\n      yearsOfExperience = _useState18[0],\n      setYearsOfExperience = _useState18[1];\n\n  var _useState19 = useState(profile && profile.employerName ? profile.employerName : ''),\n      employerName = _useState19[0],\n      setEmployerName = _useState19[1];\n\n  var _useState20 = useState(profile && profile.employerAddress ? profile.employerAddress : ''),\n      employerAddress = _useState20[0],\n      setEmployerAddress = _useState20[1];\n\n  var _useState21 = useState(profile && profile.otherDetails ? EditorState.createWithContent(contentFrom(profile.otherDetails)) : EditorState.createEmpty()),\n      otherDetails = _useState21[0],\n      setOtherDetails = _useState21[1];\n\n  var validateData = function validateData() {\n    var birthDateErrors = [];\n    var birthPlaceErrors = [];\n    var residenceErrors = [];\n    var phoneNumberErrors = [];\n    var nationalityErrors = [];\n    if (!birthDate) birthDateErrors.push('Your birth day is required');\n    if (validator.isEmpty(birthPlace)) birthPlaceErrors.push('Your birth place is required');\n    if (validator.isEmpty(residence)) residenceErrors.push('Your residence is required');\n    if (validator.isEmpty(phoneNumber)) phoneNumberErrors.push('Your phone number is required');\n    if (validator.isEmpty(nationality)) nationalityErrors.push('Your nationality is required');\n    var isValid = birthDateErrors.length == 0 && birthPlaceErrors.length == 0 && residenceErrors.length == 0 && phoneNumberErrors.length == 0 && nationalityErrors.length == 0;\n    var errors = {\n      birthDateErrors: birthDateErrors,\n      birthPlaceErrors: birthPlaceErrors,\n      residenceErrors: residenceErrors,\n      phoneNumberErrors: phoneNumberErrors,\n      nationalityErrors: nationalityErrors\n    };\n    return {\n      isValid: isValid,\n      errors: errors\n    };\n  };\n\n  var submit = function submit(cb) {\n    var _validateData = validateData(),\n        isValid = _validateData.isValid,\n        errors = _validateData.errors;\n\n    setInputErrors(errors);\n    if (!isValid) return cb('Please enter valid inputs');\n    return cb('', {\n      birthDate: birthDate ? birthDate.toISOString() : null,\n      birthPlace: birthPlace,\n      residence: residence,\n      phoneNumber: phoneNumber,\n      nationality: nationality,\n      nicNumber: nicNumber,\n      nicDateOfIssue: nicDateOfIssue ? nicDateOfIssue.toISOString() : null,\n      nicPlaceOfIssue: nicPlaceOfIssue,\n      highestAcademicQualification: highestAcademicQualification,\n      yearOfIssue: yearOfIssue,\n      englishGradeInGCEOL: englishGradeInGCEOL,\n      mathematicsGradeInGCEOL: mathematicsGradeInGCEOL,\n      professionalQualification: professionalQualification,\n      employmentStatus: employmentStatus,\n      jobTitle: jobTitle,\n      yearsOfExperience: yearsOfExperience,\n      employerName: employerName,\n      employerAddress: employerAddress,\n      otherDetails: draftToHtml(convertToRaw(otherDetails.getCurrentContent()))\n    });\n  };\n\n  function onChange(command, editorState) {\n    var newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      setOtherDetails(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.fieldGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.groupTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Personal Information\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(DatePicker, {\n    className: classes.field,\n    autoOk: true,\n    fullWidth: true,\n    format: \"MM/dd/yyyy\",\n    variant: \"inline\",\n    id: \"birthDate\",\n    label: \"Birthdate\",\n    value: birthDate,\n    onChange: setBirthDate,\n    error: inputErrors.birthDateErrors.length > 0,\n    helperText: inputErrors.birthDateErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), __jsx(TextField, {\n    className: classes.field,\n    id: \"birthPlace\",\n    name: \"birthPlace\",\n    label: \"Birth place\",\n    fullWidth: true,\n    value: birthPlace,\n    onChange: function onChange(e) {\n      return setBirthPlace(e.target.value);\n    },\n    error: inputErrors.birthPlaceErrors.length > 0,\n    helperText: inputErrors.birthPlaceErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"residence\",\n    name: \"residence\",\n    label: \"Residence\",\n    fullWidth: true,\n    value: residence,\n    onChange: function onChange(e) {\n      return setResidence(e.target.value);\n    },\n    error: inputErrors.residenceErrors.length > 0,\n    helperText: inputErrors.residenceErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"phoneNumber\",\n    name: \"phoneNumber\",\n    label: \"Phone number\",\n    fullWidth: true,\n    value: phoneNumber,\n    onChange: function onChange(e) {\n      return setPhoneNumber(e.target.value);\n    },\n    error: inputErrors.phoneNumberErrors.length > 0,\n    helperText: inputErrors.phoneNumberErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"nationality\",\n    name: \"nationality\",\n    label: \"Nationality\",\n    fullWidth: true,\n    value: nationality,\n    onChange: function onChange(e) {\n      return setNationality(e.target.value);\n    },\n    error: inputErrors.nationalityErrors.length > 0,\n    helperText: inputErrors.nationalityErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.groupTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Identification\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, __jsx(TextField, {\n    className: classes.field,\n    id: \"nicNumber\",\n    name: \"nicNumber\",\n    label: \"Id Card number\",\n    fullWidth: true,\n    value: nicNumber,\n    onChange: function onChange(e) {\n      return setNicNumber(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }), __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, __jsx(DatePicker, {\n    className: classes.field,\n    autoOk: true,\n    clearable: true,\n    format: \"MM/dd/yyyy\",\n    color: \"secondary\",\n    variant: \"inline\",\n    fullWidth: true,\n    id: \"nicDateOfIssue\",\n    label: \"Date of issue\",\n    value: nicDateOfIssue,\n    onChange: setNicDateOfIssue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  })), __jsx(TextField, {\n    id: \"nicPlaceOfIssue\",\n    name: \"nicPlaceOfIssue\",\n    label: \"Place of issue\",\n    fullWidth: true,\n    value: nicPlaceOfIssue,\n    onChange: function onChange(e) {\n      return setNicPlaceOfIssue(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.groupTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Academic Details\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, __jsx(TextField, {\n    className: classes.field,\n    id: \"highestAcademicQualification\",\n    name: \"highestAcademicQualification\",\n    label: \"Highest academic qualification\",\n    fullWidth: true,\n    value: highestAcademicQualification,\n    onChange: function onChange(e) {\n      return setHighestAcademicQualification(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"yearOfIssue\",\n    name: \"yearOfIssue\",\n    label: \"Year of issue\",\n    type: \"number\",\n    fullWidth: true,\n    value: yearOfIssue,\n    onChange: function onChange(e) {\n      return setYearOfIssue(_parseInt(e.target.value, 10));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"englishGradeInGCEOL\",\n    name: \"englishGradeInGCEOL\",\n    label: \"English grade in GCEOL\",\n    fullWidth: true,\n    value: englishGradeInGCEOL,\n    onChange: function onChange(e) {\n      return setEnglishGradeInGCEOL(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"mathematicsGradeInGCEOL\",\n    name: \"mathematicsGradeInGCEOL\",\n    label: \"Mathematics grade in GCEOL\",\n    fullWidth: true,\n    value: mathematicsGradeInGCEOL,\n    onChange: function onChange(e) {\n      return setMathematicsGradeInGCEOL(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.groupTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, \"Professional Details\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, __jsx(TextField, {\n    className: classes.field,\n    id: \"professionalQualification\",\n    name: \"professionalQualification\",\n    label: \"Professional qualification\",\n    fullWidth: true,\n    value: professionalQualification,\n    onChange: function onChange(e) {\n      return setProfessionalQualification(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }), __jsx(FormControl, {\n    component: \"fieldset\",\n    style: {\n      margin: '20px 0px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    style: {\n      fontSize: '9pt',\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, \"Employment status\"), __jsx(RadioGroup, {\n    \"aria-label\": \"gender\",\n    name: \"employmentStatus\",\n    value: employmentStatus,\n    onChange: function onChange(e) {\n      return setEmploymentStatus(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, __jsx(FormControlLabel, {\n    value: \"Employee\",\n    control: __jsx(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }),\n    label: \"Employee\",\n    style: {\n      marginLeft: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }), __jsx(FormControlLabel, {\n    value: \"SelfEmployed\",\n    control: __jsx(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }),\n    label: \"Self employed\",\n    style: {\n      marginLeft: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }), __jsx(FormControlLabel, {\n    value: \"JobSeeker\",\n    control: __jsx(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }),\n    label: \"Job seeker\",\n    style: {\n      marginLeft: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }))), __jsx(TextField, {\n    className: classes.field,\n    id: \"jobTitle\",\n    name: \"jobTitle\",\n    label: \"Job Title\",\n    fullWidth: true,\n    value: jobTitle,\n    onChange: function onChange(e) {\n      return setJobTitle(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"yearsOfExperience\",\n    name: \"yearsOfExperience\",\n    label: \"Years of experience\",\n    type: \"number\",\n    fullWidth: true,\n    value: yearsOfExperience,\n    onChange: function onChange(e) {\n      return setYearsOfExperience(_parseInt(e.target.value, 10));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"employerName\",\n    name: \"employerName\",\n    label: \"Employer\",\n    fullWidth: true,\n    value: employerName,\n    onChange: function onChange(e) {\n      return setEmployerName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"employerAddress\",\n    name: \"employerAddress\",\n    label: \"Employer Address\",\n    fullWidth: true,\n    value: employerAddress,\n    onChange: function onChange(e) {\n      return setEmployerAddress(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.groupTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, \"Other Details\"), __jsx(\"div\", {\n    style: {\n      fontSize: '9pt',\n      color: '#808080',\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, \"Please provide additional details here, anything that is valuable for you. For example, if you already have records with Cisco, ACCA, CIPS, or whichever program you want to apply for, kindly provide references here.\"), __jsx(\"div\", {\n    style: {\n      border: '1px solid #DFDFDF',\n      padding: 5,\n      borderRadius: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, true && __jsx(Editor, {\n    editorState: otherDetails,\n    onChange: function onChange(editorState) {\n      return setOtherDetails(editorState);\n    },\n    handleKeyCommand: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      return submit(function (errMessage, data) {\n        if (errMessage) return setAlertOptions({\n          open: true,\n          level: 'error',\n          message: errMessage\n        });\n        if (data) return onSubmit(data);\n        return;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, \"\".concat(submitText || 'Save'))), __jsx(Alert, {\n    level: alertOptions.level,\n    message: alertOptions.message,\n    open: alertOptions.open,\n    onClose: function onClose() {\n      return setAlertOptions({\n        open: false,\n        level: alertOptions.level,\n        message: alertOptions.message\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }));\n}\n\nexport default ProfileForm;","map":{"version":3,"sources":["/data/apps/school-manager-client/components/ProfileForm.tsx"],"names":["React","useState","Alert","validator","makeStyles","createStyles","Paper","TextField","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Button","DatePicker","MuiPickersUtilsProvider","DateFnsUtils","Editor","EditorState","ContentState","convertToRaw","convertFromHTML","RichUtils","draftToHtml","ProfileForm","profile","submitText","onSubmit","classes","theme","fieldGroup","marginBottom","padding","groupTitle","fontSize","color","paddingBottom","borderBottom","fontWeight","field","birthDateErrors","birthPlaceErrors","residenceErrors","phoneNumberErrors","nationalityErrors","inputErrors","setInputErrors","open","level","message","alertOptions","setAlertOptions","contentFrom","content","contentBlocks","entityMap","createFromBlockArray","createFromText","birthDate","Date","setBirthDate","birthPlace","setBirthPlace","residence","setResidence","phoneNumber","setPhoneNumber","nationality","setNationality","nicNumber","setNicNumber","nicDateOfIssue","setNicDateOfIssue","nicPlaceOfIssue","setNicPlaceOfIssue","highestAcademicQualification","setHighestAcademicQualification","yearOfIssue","getFullYear","setYearOfIssue","englishGradeInGCEOL","setEnglishGradeInGCEOL","mathematicsGradeInGCEOL","setMathematicsGradeInGCEOL","professionalQualification","setProfessionalQualification","employmentStatus","setEmploymentStatus","jobTitle","setJobTitle","yearsOfExperience","setYearsOfExperience","employerName","setEmployerName","employerAddress","setEmployerAddress","otherDetails","createWithContent","createEmpty","setOtherDetails","validateData","push","isEmpty","isValid","length","errors","submit","cb","toISOString","getCurrentContent","onChange","command","editorState","newState","handleKeyCommand","textAlign","join","e","target","value","margin","marginLeft","border","borderRadius","errMessage","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Alert, { AlertOptions } from '../components/Alert'\nimport { IProfileData } from '../server/src/models/accounts/AccountProfile'\nimport validator from 'validator'\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles'\nimport { Paper, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Button } from '@material-ui/core'\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\nimport { \n  Editor, \n  EditorState, \n  ContentState, \n  convertToRaw,\n  convertFromHTML,\n  RichUtils\n} from 'draft-js'\nimport draftToHtml from 'draftjs-to-html'\n\n\ntype InputErrors = {\n  birthDateErrors: string[],\n  birthPlaceErrors: string[],\n  residenceErrors: string[],\n  phoneNumberErrors: string[],\n  nationalityErrors: string[]\n}\n\ntype Props = {\n  profile?: IProfileData,\n  submitText?: string,\n  onSubmit: (data: IProfileData) => any\n}\n\nfunction ProfileForm({ profile, submitText, onSubmit }: Props) {\n  const classes = makeStyles((theme: Theme) => createStyles({\n    fieldGroup: {\n      marginBottom: 25,\n      padding: 10\n    },\n  \n    groupTitle: {\n      fontSize: '12pt',\n      color: '#808080',\n      paddingBottom: 5,\n      borderBottom: '1px solid #DFDFDF',\n      fontWeight: 'bold',\n      marginBottom: 15\n    },\n  \n    field: {\n      marginBottom: 30\n    }\n  }))()\n\n  const [inputErrors, setInputErrors] = useState<InputErrors>({\n    birthDateErrors: [],\n    birthPlaceErrors: [],\n    residenceErrors: [],\n    phoneNumberErrors: [],\n    nationalityErrors: []\n  })\n  const [alertOptions, setAlertOptions] = useState<AlertOptions>({ open: false, level: 'info', message: '' })\n\n  function contentFrom(content: string): ContentState {\n    if (typeof window !== 'undefined') {\n      const { contentBlocks, entityMap } = convertFromHTML(content)\n      return ContentState.createFromBlockArray(contentBlocks, entityMap)\n    }\n    return ContentState.createFromText(content)\n  }\n\n  // Fields state variables\n  const [birthDate, setBirthDate] = useState<Date | null>(profile && profile.birthDate ? new Date(profile.birthDate) :  null)\n  const [birthPlace, setBirthPlace] = useState<string>(profile && profile.birthPlace ? profile.birthPlace : '')\n  const [residence, setResidence] = useState<string>(profile && profile.residence ? profile.residence : '')\n  const [phoneNumber, setPhoneNumber] = useState<string>(profile && profile.phoneNumber ? profile.phoneNumber : '')\n  const [nationality, setNationality] = useState<string>(profile && profile.nationality ? profile.nationality : '')\n  const [nicNumber, setNicNumber] = useState<string>(profile && profile.nicNumber ? profile.nicNumber : '')\n  const [nicDateOfIssue, setNicDateOfIssue] = useState<Date | null>(profile && profile.nicDateOfIssue ? new Date(profile.nicDateOfIssue) : null)\n  const [nicPlaceOfIssue, setNicPlaceOfIssue] = useState<string>(profile && profile.nicPlaceOfIssue ? profile.nicPlaceOfIssue : '')\n  const [highestAcademicQualification, setHighestAcademicQualification] = useState<string>(profile && profile.highestAcademicQualification ? profile.highestAcademicQualification : '')\n  const [yearOfIssue, setYearOfIssue] = useState<number>(profile && profile.yearOfIssue ? profile.yearOfIssue : new Date().getFullYear())\n  const [englishGradeInGCEOL, setEnglishGradeInGCEOL] = useState<string>(profile && profile.englishGradeInGCEOL ? profile.englishGradeInGCEOL : '')\n  const [mathematicsGradeInGCEOL, setMathematicsGradeInGCEOL] = useState<string>(profile && profile.mathematicsGradeInGCEOL ? profile.mathematicsGradeInGCEOL : '')\n  const [professionalQualification, setProfessionalQualification] = useState<string>(profile && profile.professionalQualification ? profile.professionalQualification : '')\n  const [employmentStatus, setEmploymentStatus] = useState<string>(profile && profile.employmentStatus ? profile.employmentStatus : 'JobSeeker')\n  const [jobTitle, setJobTitle] = useState<string>(profile && profile.jobTitle ? profile.jobTitle : '')\n  const [yearsOfExperience, setYearsOfExperience] = useState<number>(profile && profile.yearsOfExperience ? profile.yearsOfExperience : 0)\n  const [employerName, setEmployerName] = useState<string>(profile && profile.employerName ? profile.employerName : '')\n  const [employerAddress, setEmployerAddress] = useState<string>(profile && profile.employerAddress ? profile.employerAddress : '')\n  const [otherDetails, setOtherDetails] = useState<EditorState>(profile && profile.otherDetails ? EditorState.createWithContent(contentFrom(profile.otherDetails)) : EditorState.createEmpty())\n\n  const validateData = (): { isValid: boolean, errors: InputErrors } => {\n    const birthDateErrors: string[] = []\n    const birthPlaceErrors: string[] = []\n    const residenceErrors: string[] = []\n    const phoneNumberErrors: string[] = []\n    const nationalityErrors: string[] = []\n\n    if (!birthDate) birthDateErrors.push('Your birth day is required')\n    if (validator.isEmpty(birthPlace)) birthPlaceErrors.push('Your birth place is required')\n    if (validator.isEmpty(residence)) residenceErrors.push('Your residence is required')\n    if (validator.isEmpty(phoneNumber)) phoneNumberErrors.push('Your phone number is required')\n    if (validator.isEmpty(nationality)) nationalityErrors.push('Your nationality is required')\n\n    const isValid = \n      birthDateErrors.length == 0 && \n      birthPlaceErrors.length == 0 && \n      residenceErrors.length == 0 &&\n      phoneNumberErrors.length == 0 &&\n      nationalityErrors.length == 0\n    \n    const errors = { birthDateErrors, birthPlaceErrors, residenceErrors, phoneNumberErrors, nationalityErrors }\n    \n    return ({ isValid, errors })\n  }\n\n  const submit = (cb: (errMessage: string, data?: any) => any) => {\n    const { isValid, errors } = validateData()\n    setInputErrors(errors)\n\n    if (!isValid) return cb('Please enter valid inputs')\n\n    return cb('', {\n      birthDate: birthDate ? birthDate.toISOString() : null,  \n      birthPlace, \n      residence, \n      phoneNumber, \n      nationality,\n      nicNumber, \n      nicDateOfIssue: nicDateOfIssue ? nicDateOfIssue.toISOString() : null, \n      nicPlaceOfIssue,\n      highestAcademicQualification,\n      yearOfIssue,\n      englishGradeInGCEOL,\n      mathematicsGradeInGCEOL,\n      professionalQualification,\n      employmentStatus,\n      jobTitle,\n      yearsOfExperience,\n      employerName,\n      employerAddress,\n      otherDetails: draftToHtml(convertToRaw(otherDetails.getCurrentContent()))\n    })\n  }\n\n  function onChange(command: any, editorState: EditorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command)\n    if (newState) {\n      setOtherDetails(newState)\n      return 'handled'\n    }\n    return 'not-handled'\n  }\n\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Personal Information</div>\n        <div>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              className={classes.field}\n              autoOk\n              fullWidth\n              format=\"MM/dd/yyyy\"\n              variant=\"inline\"\n              id=\"birthDate\"\n              label=\"Birthdate\"\n              value={birthDate}\n              onChange={setBirthDate}\n              error={inputErrors.birthDateErrors.length > 0}\n              helperText={inputErrors.birthDateErrors.join(', ')}\n            />\n          </MuiPickersUtilsProvider>\n\n          <TextField\n            className={classes.field}\n            id=\"birthPlace\"\n            name=\"birthPlace\"\n            label=\"Birth place\"\n            fullWidth\n            value={birthPlace}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setBirthPlace(e.target.value)}\n            error={inputErrors.birthPlaceErrors.length > 0}\n            helperText={inputErrors.birthPlaceErrors.join(', ')}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"residence\"\n            name=\"residence\"\n            label=\"Residence\"\n            fullWidth\n            value={residence}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setResidence(e.target.value)}\n            error={inputErrors.residenceErrors.length > 0}\n            helperText={inputErrors.residenceErrors.join(', ')}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            label=\"Phone number\"\n            fullWidth\n            value={phoneNumber}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPhoneNumber(e.target.value)}\n            error={inputErrors.phoneNumberErrors.length > 0}\n            helperText={inputErrors.phoneNumberErrors.join(', ')}\n          />\n\n          <TextField\n            id=\"nationality\"\n            name=\"nationality\"\n            label=\"Nationality\"\n            fullWidth\n            value={nationality}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNationality(e.target.value)}\n            error={inputErrors.nationalityErrors.length > 0}\n            helperText={inputErrors.nationalityErrors.join(', ')}\n          />\n        </div>\n      </Paper>\n\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Identification</div>\n        <div>\n          <TextField\n            className={classes.field}\n            id=\"nicNumber\"\n            name=\"nicNumber\"\n            label=\"Id Card number\"\n            fullWidth\n            value={nicNumber}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNicNumber(e.target.value)}\n          />\n\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              className={classes.field}\n              autoOk\n              clearable\n              format=\"MM/dd/yyyy\"\n              color=\"secondary\"\n              variant=\"inline\"\n              fullWidth\n              id=\"nicDateOfIssue\"\n              label=\"Date of issue\"\n              value={nicDateOfIssue}\n              onChange={setNicDateOfIssue}\n            />\n          </MuiPickersUtilsProvider>\n\n          <TextField\n            id=\"nicPlaceOfIssue\"\n            name=\"nicPlaceOfIssue\"\n            label=\"Place of issue\"\n            fullWidth\n            value={nicPlaceOfIssue}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNicPlaceOfIssue(e.target.value)}\n          />\n        </div>\n      </Paper>\n    \n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Academic Details</div>\n        <div>\n          <TextField\n            className={classes.field}\n            id=\"highestAcademicQualification\"\n            name=\"highestAcademicQualification\"\n            label=\"Highest academic qualification\"\n            fullWidth\n            value={highestAcademicQualification}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setHighestAcademicQualification(e.target.value)}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"yearOfIssue\"\n            name=\"yearOfIssue\"\n            label=\"Year of issue\"\n            type=\"number\"\n            fullWidth\n            value={yearOfIssue}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setYearOfIssue(parseInt(e.target.value, 10))}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"englishGradeInGCEOL\"\n            name=\"englishGradeInGCEOL\"\n            label=\"English grade in GCEOL\"\n            fullWidth\n            value={englishGradeInGCEOL}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEnglishGradeInGCEOL(e.target.value)}\n          />\n\n          <TextField\n            id=\"mathematicsGradeInGCEOL\"\n            name=\"mathematicsGradeInGCEOL\"\n            label=\"Mathematics grade in GCEOL\"\n            fullWidth\n            value={mathematicsGradeInGCEOL}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setMathematicsGradeInGCEOL(e.target.value)}\n          />\n        </div>\n      </Paper>\n\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Professional Details</div>\n        <div>\n          <TextField\n            className={classes.field}\n            id=\"professionalQualification\"\n            name=\"professionalQualification\"\n            label=\"Professional qualification\"\n            fullWidth\n            value={professionalQualification}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setProfessionalQualification(e.target.value)}\n          />\n\n          <FormControl component=\"fieldset\" style={{ margin: '20px 0px'}}>\n            <FormLabel component=\"legend\" style={{ fontSize: '9pt', marginBottom: 10 }}>Employment status</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\" \n              name=\"employmentStatus\" \n              value={employmentStatus} \n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmploymentStatus(e.target.value)}\n            >\n              <FormControlLabel value=\"Employee\" control={<Radio />} label=\"Employee\" style={{ marginLeft: 5 }} />\n              <FormControlLabel value=\"SelfEmployed\" control={<Radio />} label=\"Self employed\" style={{ marginLeft: 5 }} />\n              <FormControlLabel value=\"JobSeeker\" control={<Radio />} label=\"Job seeker\" style={{ marginLeft: 5 }} />\n            </RadioGroup>\n          </FormControl>\n\n          <TextField\n            className={classes.field}\n            id=\"jobTitle\"\n            name=\"jobTitle\"\n            label=\"Job Title\"\n            fullWidth\n            value={jobTitle}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setJobTitle(e.target.value)}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"yearsOfExperience\"\n            name=\"yearsOfExperience\"\n            label=\"Years of experience\"\n            type=\"number\"\n            fullWidth\n            value={yearsOfExperience}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setYearsOfExperience(parseInt(e.target.value, 10))}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"employerName\"\n            name=\"employerName\"\n            label=\"Employer\"\n            fullWidth\n            value={employerName}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmployerName(e.target.value)}\n          />\n\n          <TextField\n            id=\"employerAddress\"\n            name=\"employerAddress\"\n            label=\"Employer Address\"\n            fullWidth\n            value={employerAddress}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmployerAddress(e.target.value)}\n          />\n        </div>\n      </Paper>\n\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Other Details</div>\n        <div style={{ fontSize: '9pt', color: '#808080', marginBottom: 10 }}>\n          Please provide additional details here, anything that is valuable for you. For example, if \n          you already have records with Cisco, ACCA, CIPS, or whichever program you want to apply for, \n          kindly provide references here.\n        </div>\n\n        <div style={{ border: '1px solid #DFDFDF', padding: 5, borderRadius: 5 }}>\n          {(typeof window !== 'undefined') &&\n            <Editor\n              editorState={otherDetails}\n              onChange={(editorState: EditorState) => setOtherDetails(editorState)}\n              handleKeyCommand={onChange}\n            />\n          }\n        </div>\n      </Paper>\n    \n      <div style={{ textAlign: 'center' }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => submit((errMessage, data) => {\n            if (errMessage) return setAlertOptions({ open: true, level: 'error', message: errMessage })\n            if (data) return onSubmit(data)\n            return;\n          })}\n        >\n          {`${submitText || 'Save'}`}\n        </Button>\n      </div>\n\n      <Alert \n        level={alertOptions.level}\n        message={alertOptions.message}\n        open={alertOptions.open}\n        onClose={() => setAlertOptions({ open: false, level: alertOptions.level, message: alertOptions.message })}\n      />\n    </div>\n  )\n}\n\nexport default ProfileForm\n"]},"metadata":{},"sourceType":"module"}