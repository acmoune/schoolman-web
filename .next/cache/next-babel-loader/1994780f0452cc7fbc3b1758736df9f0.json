{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProfile($email: String!) {\\n    account(email: $email) {\\n      id\\n      email\\n      fullName\\n      profile {\\n        id birthDate birthPlace residence phoneNumber nationality\\n        nicNumber nicDateOfIssue nicPlaceOfIssue\\n        highestAcademicQualification yearOfIssue englishGradeInGCEOL mathematicsGradeInGCEOL\\n        professionalQualification employmentStatus jobTitle yearsOfExperience employerName employerAddress\\n        otherDetails\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport MainLayout from '../layouts/MainLayout';\nimport { useAuth } from '../components/AuthContext';\nimport Container from '../components/Container';\nimport { gql } from 'apollo-boost';\nimport { Paper, Typography, Button } from '@material-ui/core';\nimport Router from 'next/router';\nimport ProfileView from '../components/ProfileView';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\nimport Link from 'next/link';\nvar GET_PROFILE_QUERY = gql(_templateObject());\n\nfunction MyProfile(_ref) {\n  var profile = _ref.profile;\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser;\n\n  return __jsx(MainLayout, {\n    title: \"\".concat(currentUser ? currentUser.fullName : 'My Profile', \" - IMIT\")\n  }, __jsx(Container, null, currentUser && __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    }\n  }, __jsx(Paper, {\n    style: {\n      padding: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"secondary\"\n  }, currentUser.fullName), __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\"\n  }, currentUser.email), __jsx(\"div\", {\n    style: {\n      color: '#808080',\n      fontSize: '8pt',\n      marginTop: 5\n    }\n  }, \"If there is a mistake in your name or if you want to update your email, please contact an administrator\")), profile ? __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      marginBottom: 15,\n      borderBottom: '1px solid #DFDFDF'\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    style: {\n      flexGrow: 1\n    }\n  }, \"My Profile\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    style: {\n      fontWeight: 'bold'\n    },\n    onClick: function onClick() {\n      return Router.push('/editProfile');\n    }\n  }, \"Edit\")), __jsx(ProfileView, {\n    profile: profile\n  })) : __jsx(\"div\", {\n    style: {\n      padding: 40,\n      textAlign: 'center'\n    }\n  }, \"You do not have a profile yet. \\xA0\", __jsx(Link, {\n    href: \"/createProfile\"\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none'\n    }\n  }, \"Create Profile\"))))));\n}\n\nMyProfile.getInitialProps = function _callee(_ref2) {\n  var apolloClient, token, currentUser, profile, _ref3, account;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          apolloClient = _ref2.apolloClient, token = _ref2.token, currentUser = _ref2.currentUser;\n          profile = null;\n\n          if (!currentUser) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_PROFILE_QUERY,\n            variables: {\n              email: currentUser.email\n            },\n            context: {\n              headers: {\n                'schoolman_token': token\n              }\n            }\n          }));\n\n        case 5:\n          _ref3 = _context.sent;\n          account = _ref3.data.account;\n          profile = account.profile;\n\n        case 8:\n          return _context.abrupt(\"return\", {\n            profile: profile,\n            authRequired: true\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withApollo(withAuth(MyProfile));","map":{"version":3,"sources":["/data/apps/school-manager-client/pages/myProfile.tsx"],"names":["React","MainLayout","useAuth","Container","gql","Paper","Typography","Button","Router","ProfileView","withApollo","withAuth","Link","GET_PROFILE_QUERY","MyProfile","profile","currentUser","fullName","marginTop","padding","email","color","fontSize","display","marginBottom","borderBottom","flexGrow","fontWeight","push","textAlign","textDecoration","getInitialProps","apolloClient","token","query","variables","context","headers","account","data","authRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MainLayout from '../layouts/MainLayout'\nimport { useAuth } from '../components/AuthContext'\nimport Container from '../components/Container'\nimport { gql } from 'apollo-boost'\nimport {\n  Paper, \n  Typography, \n  Button\n} from '@material-ui/core'\nimport Router from 'next/router'\nimport ProfileView from '../components/ProfileView'\nimport withApollo from '../lib/with-apollo'\nimport withAuth from '../lib/with-auth'\nimport Link from 'next/link'\nimport IAccountProfileFields from '../server/src/models/accounts/AccountProfile'\n\nconst GET_PROFILE_QUERY = gql`\n  query getProfile($email: String!) {\n    account(email: $email) {\n      id\n      email\n      fullName\n      profile {\n        id birthDate birthPlace residence phoneNumber nationality\n        nicNumber nicDateOfIssue nicPlaceOfIssue\n        highestAcademicQualification yearOfIssue englishGradeInGCEOL mathematicsGradeInGCEOL\n        professionalQualification employmentStatus jobTitle yearsOfExperience employerName employerAddress\n        otherDetails\n      }\n    }\n  }\n`\n\nfunction MyProfile({ profile } : { profile: IAccountProfileFields }) {\n  const { currentUser } = useAuth()\n\n  return (\n    <MainLayout title={`${currentUser ? currentUser.fullName : 'My Profile'} - IMIT`}>\n      <Container>\n        {currentUser &&\n          <div style={{ marginTop: 15 }}>\n            <Paper style={{ padding: 15 }}>\n              <Typography variant=\"h5\" color=\"secondary\">{currentUser.fullName}</Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\">{currentUser.email}</Typography>\n              <div style={{ color: '#808080', fontSize: '8pt', marginTop: 5 }}>\n                If there is a mistake in your name or if you want to update your email, please contact an administrator\n              </div>\n            </Paper>\n\n            {profile ?\n              <div style={{ marginTop: 15 }}>\n                <div style={{ display: 'flex', marginBottom: 15, borderBottom: '1px solid #DFDFDF' }}>\n                  <Typography variant=\"h6\" color=\"textSecondary\" style={{ flexGrow: 1 }}>My Profile</Typography>\n\n                  <Button \n                    variant=\"contained\" \n                    color=\"secondary\" \n                    size=\"small\" \n                    style={{ fontWeight: 'bold' }}\n                    onClick={() => Router.push('/editProfile')}\n                  >\n                    Edit\n                  </Button>\n                </div>\n \n                <ProfileView profile={profile} />\n              </div> :\n\n              <div style={{ padding: 40, textAlign: 'center' }}>\n                You do not have a profile yet. &nbsp;\n                <Link href=\"/createProfile\"><a style={{ textDecoration: 'none' }}>Create Profile</a></Link>\n              </div>\n            }\n          </div>\n        }\n      </Container>\n    </MainLayout>\n  )\n}\n\nMyProfile.getInitialProps = async ({ apolloClient, token, currentUser }: any) => {\n  var profile = null\n  \n  if (currentUser) {\n    const { data: { account }} = await apolloClient.query({\n      query: GET_PROFILE_QUERY,\n      variables: { email: currentUser.email },\n      context: { headers: { 'schoolman_token': token } }\n    })\n\n    profile = account.profile\n  }\n\n  return ({ profile, authRequired: true })\n}\n\nexport default withApollo(withAuth(MyProfile))\n"]},"metadata":{},"sourceType":"module"}