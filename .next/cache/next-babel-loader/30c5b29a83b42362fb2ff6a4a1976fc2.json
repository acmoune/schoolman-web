{"ast":null,"code":"var _jsxFileName = \"/data/apps/opensource/SchoolMan/web-client/components/ProfileForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Alert from '../components/Alert';\nimport validator from 'validator';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Button } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Editor, EditorState, ContentState, convertToRaw, convertFromHTML, RichUtils } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\n\nfunction ProfileForm({\n  profile,\n  submitText,\n  onSubmit\n}) {\n  const classes = makeStyles(theme => createStyles({\n    fieldGroup: {\n      marginBottom: 25,\n      padding: 10\n    },\n    groupTitle: {\n      fontSize: '16pt',\n      color: '#808080',\n      paddingBottom: 5,\n      borderBottom: '1px solid #DFDFDF',\n      marginBottom: 15\n    },\n    field: {\n      marginBottom: 30\n    }\n  }))();\n  const {\n    0: inputErrors,\n    1: setInputErrors\n  } = useState({\n    birthDateErrors: [],\n    birthPlaceErrors: [],\n    residenceErrors: [],\n    phoneNumberErrors: [],\n    nationalityErrors: []\n  });\n  const {\n    0: alertOptions,\n    1: setAlertOptions\n  } = useState({\n    open: false,\n    level: 'info',\n    message: ''\n  });\n\n  function contentFrom(content) {\n    if (false) {\n      const {\n        contentBlocks,\n        entityMap\n      } = convertFromHTML(content);\n      return ContentState.createFromBlockArray(contentBlocks, entityMap);\n    }\n\n    return ContentState.createFromText(content);\n  } // Fields state variables\n\n\n  const {\n    0: birthDate,\n    1: setBirthDate\n  } = useState(profile && profile.birthDate ? new Date(profile.birthDate) : null);\n  const {\n    0: birthPlace,\n    1: setBirthPlace\n  } = useState(profile && profile.birthPlace ? profile.birthPlace : '');\n  const {\n    0: residence,\n    1: setResidence\n  } = useState(profile && profile.residence ? profile.residence : '');\n  const {\n    0: phoneNumber,\n    1: setPhoneNumber\n  } = useState(profile && profile.phoneNumber ? profile.phoneNumber : '');\n  const {\n    0: nationality,\n    1: setNationality\n  } = useState(profile && profile.nationality ? profile.nationality : '');\n  const {\n    0: otherDetails,\n    1: setOtherDetails\n  } = useState(profile && profile.otherDetails ? EditorState.createWithContent(contentFrom(profile.otherDetails)) : EditorState.createEmpty());\n\n  const validateData = () => {\n    const birthDateErrors = [];\n    const birthPlaceErrors = [];\n    const residenceErrors = [];\n    const phoneNumberErrors = [];\n    const nationalityErrors = [];\n    if (!birthDate) birthDateErrors.push('Your birth day is required');\n    if (validator.isEmpty(birthPlace)) birthPlaceErrors.push('Your birth place is required');\n    if (validator.isEmpty(residence)) residenceErrors.push('Your residence is required');\n    if (validator.isEmpty(phoneNumber)) phoneNumberErrors.push('Your phone number is required');\n    if (validator.isEmpty(nationality)) nationalityErrors.push('Your nationality is required');\n    const isValid = birthDateErrors.length == 0 && birthPlaceErrors.length == 0 && residenceErrors.length == 0 && phoneNumberErrors.length == 0 && nationalityErrors.length == 0;\n    const errors = {\n      birthDateErrors,\n      birthPlaceErrors,\n      residenceErrors,\n      phoneNumberErrors,\n      nationalityErrors\n    };\n    return {\n      isValid,\n      errors\n    };\n  };\n\n  const submit = cb => {\n    const {\n      isValid,\n      errors\n    } = validateData();\n    setInputErrors(errors);\n    if (!isValid) return cb('Please enter valid inputs');\n    return cb('', {\n      birthDate: birthDate ? birthDate.toISOString() : null,\n      birthPlace,\n      residence,\n      phoneNumber,\n      nationality,\n      otherDetails: draftToHtml(convertToRaw(otherDetails.getCurrentContent()))\n    });\n  };\n\n  function onChange(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      setOtherDetails(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.fieldGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.groupTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Personal Information\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(DatePicker, {\n    className: classes.field,\n    autoOk: true,\n    fullWidth: true,\n    format: \"MM/dd/yyyy\",\n    variant: \"inline\",\n    id: \"birthDate\",\n    label: \"Birthdate\",\n    value: birthDate,\n    onChange: setBirthDate,\n    error: inputErrors.birthDateErrors.length > 0,\n    helperText: inputErrors.birthDateErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), __jsx(TextField, {\n    className: classes.field,\n    id: \"birthPlace\",\n    name: \"birthPlace\",\n    label: \"Birth place\",\n    fullWidth: true,\n    value: birthPlace,\n    onChange: e => setBirthPlace(e.target.value),\n    error: inputErrors.birthPlaceErrors.length > 0,\n    helperText: inputErrors.birthPlaceErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"residence\",\n    name: \"residence\",\n    label: \"Residence\",\n    fullWidth: true,\n    value: residence,\n    onChange: e => setResidence(e.target.value),\n    error: inputErrors.residenceErrors.length > 0,\n    helperText: inputErrors.residenceErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"phoneNumber\",\n    name: \"phoneNumber\",\n    label: \"Phone number\",\n    fullWidth: true,\n    value: phoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    error: inputErrors.phoneNumberErrors.length > 0,\n    helperText: inputErrors.phoneNumberErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"nationality\",\n    name: \"nationality\",\n    label: \"Nationality\",\n    fullWidth: true,\n    value: nationality,\n    onChange: e => setNationality(e.target.value),\n    error: inputErrors.nationalityErrors.length > 0,\n    helperText: inputErrors.nationalityErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.groupTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Other Details\"), __jsx(\"div\", {\n    style: {\n      fontSize: '9pt',\n      color: '#808080',\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Please provide additional details here, anything that is valuable for you. For example, if you already have records with Cisco, ACCA, CIPS, or whichever program you want to apply for, kindly provide references here.\"), __jsx(\"div\", {\n    style: {\n      border: '1px solid #DFDFDF',\n      padding: 5,\n      borderRadius: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, false && __jsx(Editor, {\n    editorState: otherDetails,\n    onChange: editorState => setOtherDetails(editorState),\n    handleKeyCommand: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => submit((errMessage, data) => {\n      if (errMessage) return setAlertOptions({\n        open: true,\n        level: 'error',\n        message: errMessage\n      });\n      if (data) return onSubmit(data);\n      return;\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, `${submitText || 'Save'}`)), __jsx(Alert, {\n    level: alertOptions.level,\n    message: alertOptions.message,\n    open: alertOptions.open,\n    onClose: () => setAlertOptions({\n      open: false,\n      level: alertOptions.level,\n      message: alertOptions.message\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }));\n}\n\nexport default ProfileForm;","map":{"version":3,"sources":["/data/apps/opensource/SchoolMan/web-client/components/ProfileForm.tsx"],"names":["React","useState","Alert","validator","makeStyles","createStyles","Paper","TextField","Button","DatePicker","MuiPickersUtilsProvider","DateFnsUtils","Editor","EditorState","ContentState","convertToRaw","convertFromHTML","RichUtils","draftToHtml","ProfileForm","profile","submitText","onSubmit","classes","theme","fieldGroup","marginBottom","padding","groupTitle","fontSize","color","paddingBottom","borderBottom","field","inputErrors","setInputErrors","birthDateErrors","birthPlaceErrors","residenceErrors","phoneNumberErrors","nationalityErrors","alertOptions","setAlertOptions","open","level","message","contentFrom","content","contentBlocks","entityMap","createFromBlockArray","createFromText","birthDate","setBirthDate","Date","birthPlace","setBirthPlace","residence","setResidence","phoneNumber","setPhoneNumber","nationality","setNationality","otherDetails","setOtherDetails","createWithContent","createEmpty","validateData","push","isEmpty","isValid","length","errors","submit","cb","toISOString","getCurrentContent","onChange","command","editorState","newState","handleKeyCommand","textAlign","join","e","target","value","border","borderRadius","errMessage","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Alert, { AlertOptions } from '../components/Alert'\nimport { IProfileData } from '../server/src/models/accounts/AccountProfile'\nimport validator from 'validator'\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles'\nimport { Paper, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Button } from '@material-ui/core'\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\nimport { \n  Editor, \n  EditorState, \n  ContentState, \n  convertToRaw,\n  convertFromHTML,\n  RichUtils\n} from 'draft-js'\nimport draftToHtml from 'draftjs-to-html'\n\n\ntype InputErrors = {\n  birthDateErrors: string[],\n  birthPlaceErrors: string[],\n  residenceErrors: string[],\n  phoneNumberErrors: string[],\n  nationalityErrors: string[]\n}\n\ntype Props = {\n  profile?: IProfileData,\n  submitText?: string,\n  onSubmit: (data: IProfileData) => any\n}\n\nfunction ProfileForm({ profile, submitText, onSubmit }: Props) {\n  const classes = makeStyles((theme: Theme) => createStyles({\n    fieldGroup: {\n      marginBottom: 25,\n      padding: 10\n    },\n  \n    groupTitle: {\n      fontSize: '16pt',\n      color: '#808080',\n      paddingBottom: 5,\n      borderBottom: '1px solid #DFDFDF',\n      marginBottom: 15\n    },\n  \n    field: {\n      marginBottom: 30\n    }\n  }))()\n\n  const [inputErrors, setInputErrors] = useState<InputErrors>({\n    birthDateErrors: [],\n    birthPlaceErrors: [],\n    residenceErrors: [],\n    phoneNumberErrors: [],\n    nationalityErrors: []\n  })\n  const [alertOptions, setAlertOptions] = useState<AlertOptions>({ open: false, level: 'info', message: '' })\n\n  function contentFrom(content: string): ContentState {\n    if (typeof window !== 'undefined') {\n      const { contentBlocks, entityMap } = convertFromHTML(content)\n      return ContentState.createFromBlockArray(contentBlocks, entityMap)\n    }\n    return ContentState.createFromText(content)\n  }\n\n  // Fields state variables\n  const [birthDate, setBirthDate] = useState<Date | null>(profile && profile.birthDate ? new Date(profile.birthDate) :  null)\n  const [birthPlace, setBirthPlace] = useState<string>(profile && profile.birthPlace ? profile.birthPlace : '')\n  const [residence, setResidence] = useState<string>(profile && profile.residence ? profile.residence : '')\n  const [phoneNumber, setPhoneNumber] = useState<string>(profile && profile.phoneNumber ? profile.phoneNumber : '')\n  const [nationality, setNationality] = useState<string>(profile && profile.nationality ? profile.nationality : '')\n  const [otherDetails, setOtherDetails] = useState<EditorState>(profile && profile.otherDetails ? EditorState.createWithContent(contentFrom(profile.otherDetails)) : EditorState.createEmpty())\n\n  const validateData = (): { isValid: boolean, errors: InputErrors } => {\n    const birthDateErrors: string[] = []\n    const birthPlaceErrors: string[] = []\n    const residenceErrors: string[] = []\n    const phoneNumberErrors: string[] = []\n    const nationalityErrors: string[] = []\n\n    if (!birthDate) birthDateErrors.push('Your birth day is required')\n    if (validator.isEmpty(birthPlace)) birthPlaceErrors.push('Your birth place is required')\n    if (validator.isEmpty(residence)) residenceErrors.push('Your residence is required')\n    if (validator.isEmpty(phoneNumber)) phoneNumberErrors.push('Your phone number is required')\n    if (validator.isEmpty(nationality)) nationalityErrors.push('Your nationality is required')\n\n    const isValid = \n      birthDateErrors.length == 0 && \n      birthPlaceErrors.length == 0 && \n      residenceErrors.length == 0 &&\n      phoneNumberErrors.length == 0 &&\n      nationalityErrors.length == 0\n    \n    const errors = { birthDateErrors, birthPlaceErrors, residenceErrors, phoneNumberErrors, nationalityErrors }\n    \n    return ({ isValid, errors })\n  }\n\n  const submit = (cb: (errMessage: string, data?: any) => any) => {\n    const { isValid, errors } = validateData()\n    setInputErrors(errors)\n\n    if (!isValid) return cb('Please enter valid inputs')\n\n    return cb('', {\n      birthDate: birthDate ? birthDate.toISOString() : null,  \n      birthPlace, \n      residence, \n      phoneNumber, \n      nationality,\n      otherDetails: draftToHtml(convertToRaw(otherDetails.getCurrentContent()))\n    })\n  }\n\n  function onChange(command: any, editorState: EditorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command)\n    if (newState) {\n      setOtherDetails(newState)\n      return 'handled'\n    }\n    return 'not-handled'\n  }\n\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Personal Information</div>\n        <div>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              className={classes.field}\n              autoOk\n              fullWidth\n              format=\"MM/dd/yyyy\"\n              variant=\"inline\"\n              id=\"birthDate\"\n              label=\"Birthdate\"\n              value={birthDate}\n              onChange={setBirthDate}\n              error={inputErrors.birthDateErrors.length > 0}\n              helperText={inputErrors.birthDateErrors.join(', ')}\n            />\n          </MuiPickersUtilsProvider>\n\n          <TextField\n            className={classes.field}\n            id=\"birthPlace\"\n            name=\"birthPlace\"\n            label=\"Birth place\"\n            fullWidth\n            value={birthPlace}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setBirthPlace(e.target.value)}\n            error={inputErrors.birthPlaceErrors.length > 0}\n            helperText={inputErrors.birthPlaceErrors.join(', ')}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"residence\"\n            name=\"residence\"\n            label=\"Residence\"\n            fullWidth\n            value={residence}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setResidence(e.target.value)}\n            error={inputErrors.residenceErrors.length > 0}\n            helperText={inputErrors.residenceErrors.join(', ')}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            label=\"Phone number\"\n            fullWidth\n            value={phoneNumber}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPhoneNumber(e.target.value)}\n            error={inputErrors.phoneNumberErrors.length > 0}\n            helperText={inputErrors.phoneNumberErrors.join(', ')}\n          />\n\n          <TextField\n            id=\"nationality\"\n            name=\"nationality\"\n            label=\"Nationality\"\n            fullWidth\n            value={nationality}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNationality(e.target.value)}\n            error={inputErrors.nationalityErrors.length > 0}\n            helperText={inputErrors.nationalityErrors.join(', ')}\n          />\n        </div>\n      </Paper>\n\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Other Details</div>\n        <div style={{ fontSize: '9pt', color: '#808080', marginBottom: 10 }}>\n          Please provide additional details here, anything that is valuable for you. For example, if \n          you already have records with Cisco, ACCA, CIPS, or whichever program you want to apply for, \n          kindly provide references here.\n        </div>\n\n        <div style={{ border: '1px solid #DFDFDF', padding: 5, borderRadius: 5 }}>\n          {(typeof window !== 'undefined') &&\n            <Editor\n              editorState={otherDetails}\n              onChange={(editorState: EditorState) => setOtherDetails(editorState)}\n              handleKeyCommand={onChange}\n            />\n          }\n        </div>\n      </Paper>\n    \n      <div style={{ textAlign: 'center' }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => submit((errMessage, data) => {\n            if (errMessage) return setAlertOptions({ open: true, level: 'error', message: errMessage })\n            if (data) return onSubmit(data)\n            return;\n          })}\n        >\n          {`${submitText || 'Save'}`}\n        </Button>\n      </div>\n\n      <Alert \n        level={alertOptions.level}\n        message={alertOptions.message}\n        open={alertOptions.open}\n        onClose={() => setAlertOptions({ open: false, level: alertOptions.level, message: alertOptions.message })}\n      />\n    </div>\n  )\n}\n\nexport default ProfileForm\n"]},"metadata":{},"sourceType":"module"}