{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { apiServer } from '../../app.config';\nimport s3 from '../../lib/s3';\nexport default function TrainingSummary(_ref) {\n  var training = _ref.training,\n      displayLink = _ref.displayLink,\n      href = _ref.href;\n  var classes = makeStyles(function (theme) {\n    return createStyles({\n      root: {\n        marginBottom: 15,\n        '&:hover': {\n          opacity: 0.8,\n          cursor: 'pointer'\n        }\n      },\n      imgBox: {},\n      contentBox: {\n        padding: 0\n      },\n      title: {\n        fontSize: '12pt',\n        textDecoration: 'none',\n        color: '#339967',\n        fontWeight: 'bold'\n      },\n      link: {\n        textDecoration: 'none',\n        fontSize: '8pt',\n        color: '#339967',\n        display: 'inline-block',\n        marginTop: 5\n      }\n    });\n  })();\n  var router = useRouter();\n  var banner = training.banner ? s3.getFileUrl(training.banner) : \"\".concat(apiServer, \"/assets/images/trainings/no-banner.jpg\");\n  return __jsx(\"div\", {\n    className: classes.root,\n    onClick: function onClick() {\n      return href && router.push(href);\n    }\n  }, __jsx(\"div\", {\n    className: classes.imgBox\n  }, __jsx(\"img\", {\n    src: banner,\n    alt: \"\",\n    style: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", {\n    className: classes.contentBox\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(Typography, {\n    variant: \"body1\"\n  }, training.title)), __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"caption\",\n    style: {\n      color: '#000000'\n    }\n  }, training.description)), displayLink && training.link ? __jsx(\"div\", null, __jsx(\"a\", {\n    className: classes.link,\n    href: training.link\n  }, \"Official  vendor link\")) : null));\n}\nTrainingSummary.defaultProps = {\n  displayLink: false,\n  href: null\n};","map":{"version":3,"sources":["/data/apps/school-manager-client/components/catalog/TrainingSummary.tsx"],"names":["React","makeStyles","createStyles","Typography","useRouter","apiServer","s3","TrainingSummary","training","displayLink","href","classes","theme","root","marginBottom","opacity","cursor","imgBox","contentBox","padding","title","fontSize","textDecoration","color","fontWeight","link","display","marginTop","router","banner","getFileUrl","push","width","description","defaultProps"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAA8C,0BAA9C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,EAAP,MAAe,cAAf;AAIA,eAAe,SAASC,eAAT,OAAiE;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAC9E,MAAMC,OAAO,GAAGV,UAAU,CAAC,UAACW,KAAD;AAAA,WAAkBV,YAAY,CAAC;AACxDW,MAAAA,IAAI,EAAE;AACJC,QAAAA,YAAY,EAAE,EADV;AAGJ,mBAAW;AACTC,UAAAA,OAAO,EAAE,GADA;AAETC,UAAAA,MAAM,EAAE;AAFC;AAHP,OADkD;AASxDC,MAAAA,MAAM,EAAE,EATgD;AAWxDC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OAX4C;AAcxDC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,MADL;AAELC,QAAAA,cAAc,EAAE,MAFX;AAGLC,QAAAA,KAAK,EAAE,SAHF;AAILC,QAAAA,UAAU,EAAE;AAJP,OAdiD;AAoBxDC,MAAAA,IAAI,EAAE;AACJH,QAAAA,cAAc,EAAE,MADZ;AAEJD,QAAAA,QAAQ,EAAE,KAFN;AAGJE,QAAAA,KAAK,EAAE,SAHH;AAIJG,QAAAA,OAAO,EAAE,cAJL;AAKJC,QAAAA,SAAS,EAAE;AALP;AApBkD,KAAD,CAA9B;AAAA,GAAD,CAAV,EAAhB;AA6BA,MAAMC,MAAM,GAAGxB,SAAS,EAAxB;AACA,MAAMyB,MAAM,GAAGrB,QAAQ,CAACqB,MAAT,GAAkBvB,EAAE,CAACwB,UAAH,CAActB,QAAQ,CAACqB,MAAvB,CAAlB,aAAsDxB,SAAtD,2CAAf;AAEA,SACE;AAAK,IAAA,SAAS,EAAEM,OAAO,CAACE,IAAxB;AAA8B,IAAA,OAAO,EAAE;AAAA,aAAMH,IAAI,IAAIkB,MAAM,CAACG,IAAP,CAAYrB,IAAZ,CAAd;AAAA;AAAvC,KACE;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACM;AAAxB,KACE;AAAK,IAAA,GAAG,EAAEY,MAAV;AAAkB,IAAA,GAAG,EAAC,EAAtB;AAAyB,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAK,EAAE;AAAR;AAAhC,IADF,CADF,EAKE;AAAK,IAAA,SAAS,EAAErB,OAAO,CAACO;AAAxB,KACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACS;AAAxB,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KAA6BZ,QAAQ,CAACY,KAAtC,CADF,CADF,EAKE,mBACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAA8B,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAK,EAAE;AAAR;AAArC,KAA0Df,QAAQ,CAACyB,WAAnE,CADF,CALF,EASGxB,WAAW,IAAID,QAAQ,CAACiB,IAAxB,GAA+B,mBAAK;AAAG,IAAA,SAAS,EAAEd,OAAO,CAACc,IAAtB;AAA4B,IAAA,IAAI,EAAEjB,QAAQ,CAACiB;AAA3C,6BAAL,CAA/B,GAAuH,IAT1H,CALF,CADF;AAmBD;AAEDlB,eAAe,CAAC2B,YAAhB,GAA+B;AAC7BzB,EAAAA,WAAW,EAAE,KADgB;AAE7BC,EAAAA,IAAI,EAAE;AAFuB,CAA/B","sourcesContent":["import * as React from 'react'\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport { useRouter } from 'next/router'\nimport ITrainingSummary from '../../server/src/models/catalog/TrainingSummary'\nimport { apiServer } from '../../app.config'\nimport s3 from '../../lib/s3'\n\ntype Props = { training: ITrainingSummary, displayLink: boolean, href: any }\n\nexport default function TrainingSummary({ training, displayLink, href }: Props) {\n  const classes = makeStyles((theme: Theme) => createStyles({\n    root: {\n      marginBottom: 15,\n      \n      '&:hover': {\n        opacity: 0.8,\n        cursor: 'pointer'\n      }\n    },\n    imgBox: {\n    },\n    contentBox: {\n      padding: 0,\n    },\n    title: {\n      fontSize: '12pt',\n      textDecoration: 'none',\n      color: '#339967',\n      fontWeight: 'bold'\n    },\n    link: {\n      textDecoration: 'none',\n      fontSize: '8pt',\n      color: '#339967',\n      display: 'inline-block',\n      marginTop: 5\n    }\n  }))()\n\n  const router = useRouter()\n  const banner = training.banner ? s3.getFileUrl(training.banner) : `${apiServer}/assets/images/trainings/no-banner.jpg`\n\n  return (\n    <div className={classes.root} onClick={() => href && router.push(href)}>\n      <div className={classes.imgBox}>\n        <img src={banner} alt=\"\" style={{width: '100%'}} />\n      </div>\n\n      <div className={classes.contentBox}>\n        <div className={classes.title}>\n          <Typography variant=\"body1\">{training.title}</Typography>\n        </div>\n\n        <div>\n          <Typography variant=\"caption\" style={{color: '#000000'}}>{training.description}</Typography>\n        </div>\n\n        {displayLink && training.link ? <div><a className={classes.link} href={training.link}>Official  vendor link</a></div> : null}\n      </div>\n    </div>\n  )\n}\n\nTrainingSummary.defaultProps = {\n  displayLink: false,\n  href: null\n} as Props\n"]},"metadata":{},"sourceType":"module"}