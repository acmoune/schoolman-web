{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Alert from '../components/Alert';\nimport validator from 'validator';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Button } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Editor, EditorState, ContentState, convertToRaw, convertFromHTML, RichUtils } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\n\nfunction ProfileForm(_ref) {\n  var profile = _ref.profile,\n      submitText = _ref.submitText,\n      onSubmit = _ref.onSubmit;\n  var classes = makeStyles(function (theme) {\n    return createStyles({\n      fieldGroup: {\n        marginBottom: 25,\n        padding: 10\n      },\n      groupTitle: {\n        fontSize: '12pt',\n        color: '#808080',\n        paddingBottom: 5,\n        borderBottom: '1px solid #DFDFDF',\n        fontWeight: 'bold',\n        marginBottom: 15\n      },\n      field: {\n        marginBottom: 30\n      }\n    });\n  })();\n\n  var _useState = useState({\n    birthDateErrors: [],\n    birthPlaceErrors: [],\n    residenceErrors: [],\n    phoneNumberErrors: [],\n    nationalityErrors: []\n  }),\n      inputErrors = _useState[0],\n      setInputErrors = _useState[1];\n\n  var _useState2 = useState({\n    open: false,\n    level: 'info',\n    message: ''\n  }),\n      alertOptions = _useState2[0],\n      setAlertOptions = _useState2[1];\n\n  function contentFrom(content) {\n    if (true) {\n      var _convertFromHTML = convertFromHTML(content),\n          contentBlocks = _convertFromHTML.contentBlocks,\n          entityMap = _convertFromHTML.entityMap;\n\n      return ContentState.createFromBlockArray(contentBlocks, entityMap);\n    }\n\n    return ContentState.createFromText(content);\n  } // Fields state variables\n\n\n  var _useState3 = useState(profile && profile.birthDate ? new Date(profile.birthDate) : null),\n      birthDate = _useState3[0],\n      setBirthDate = _useState3[1];\n\n  var _useState4 = useState(profile && profile.birthPlace ? profile.birthPlace : ''),\n      birthPlace = _useState4[0],\n      setBirthPlace = _useState4[1];\n\n  var _useState5 = useState(profile && profile.residence ? profile.residence : ''),\n      residence = _useState5[0],\n      setResidence = _useState5[1];\n\n  var _useState6 = useState(profile && profile.phoneNumber ? profile.phoneNumber : ''),\n      phoneNumber = _useState6[0],\n      setPhoneNumber = _useState6[1];\n\n  var _useState7 = useState(profile && profile.nationality ? profile.nationality : ''),\n      nationality = _useState7[0],\n      setNationality = _useState7[1];\n\n  var _useState8 = useState(profile && profile.nicNumber ? profile.nicNumber : ''),\n      nicNumber = _useState8[0],\n      setNicNumber = _useState8[1];\n\n  var _useState9 = useState(profile && profile.nicDateOfIssue ? new Date(profile.nicDateOfIssue) : null),\n      nicDateOfIssue = _useState9[0],\n      setNicDateOfIssue = _useState9[1];\n\n  var _useState10 = useState(profile && profile.nicPlaceOfIssue ? profile.nicPlaceOfIssue : ''),\n      nicPlaceOfIssue = _useState10[0],\n      setNicPlaceOfIssue = _useState10[1];\n\n  var _useState11 = useState(profile && profile.highestAcademicQualification ? profile.highestAcademicQualification : ''),\n      highestAcademicQualification = _useState11[0],\n      setHighestAcademicQualification = _useState11[1];\n\n  var _useState12 = useState(profile && profile.yearOfIssue ? profile.yearOfIssue : new Date().getFullYear()),\n      yearOfIssue = _useState12[0],\n      setYearOfIssue = _useState12[1];\n\n  var _useState13 = useState(profile && profile.englishGradeInGCEOL ? profile.englishGradeInGCEOL : ''),\n      englishGradeInGCEOL = _useState13[0],\n      setEnglishGradeInGCEOL = _useState13[1];\n\n  var _useState14 = useState(profile && profile.mathematicsGradeInGCEOL ? profile.mathematicsGradeInGCEOL : ''),\n      mathematicsGradeInGCEOL = _useState14[0],\n      setMathematicsGradeInGCEOL = _useState14[1];\n\n  var _useState15 = useState(profile && profile.professionalQualification ? profile.professionalQualification : ''),\n      professionalQualification = _useState15[0],\n      setProfessionalQualification = _useState15[1];\n\n  var _useState16 = useState(profile && profile.employmentStatus ? profile.employmentStatus : 'JobSeeker'),\n      employmentStatus = _useState16[0],\n      setEmploymentStatus = _useState16[1];\n\n  var _useState17 = useState(profile && profile.jobTitle ? profile.jobTitle : ''),\n      jobTitle = _useState17[0],\n      setJobTitle = _useState17[1];\n\n  var _useState18 = useState(profile && profile.yearsOfExperience ? profile.yearsOfExperience : 0),\n      yearsOfExperience = _useState18[0],\n      setYearsOfExperience = _useState18[1];\n\n  var _useState19 = useState(profile && profile.employerName ? profile.employerName : ''),\n      employerName = _useState19[0],\n      setEmployerName = _useState19[1];\n\n  var _useState20 = useState(profile && profile.employerAddress ? profile.employerAddress : ''),\n      employerAddress = _useState20[0],\n      setEmployerAddress = _useState20[1];\n\n  var _useState21 = useState(profile && profile.otherDetails ? EditorState.createWithContent(contentFrom(profile.otherDetails)) : EditorState.createEmpty()),\n      otherDetails = _useState21[0],\n      setOtherDetails = _useState21[1];\n\n  var validateData = function validateData() {\n    var birthDateErrors = [];\n    var birthPlaceErrors = [];\n    var residenceErrors = [];\n    var phoneNumberErrors = [];\n    var nationalityErrors = [];\n    if (!birthDate) birthDateErrors.push('Your birth day is required');\n    if (validator.isEmpty(birthPlace)) birthPlaceErrors.push('Your birth place is required');\n    if (validator.isEmpty(residence)) residenceErrors.push('Your residence is required');\n    if (validator.isEmpty(phoneNumber)) phoneNumberErrors.push('Your phone number is required');\n    if (validator.isEmpty(nationality)) nationalityErrors.push('Your nationality is required');\n    var isValid = birthDateErrors.length == 0 && birthPlaceErrors.length == 0 && residenceErrors.length == 0 && phoneNumberErrors.length == 0 && nationalityErrors.length == 0;\n    var errors = {\n      birthDateErrors: birthDateErrors,\n      birthPlaceErrors: birthPlaceErrors,\n      residenceErrors: residenceErrors,\n      phoneNumberErrors: phoneNumberErrors,\n      nationalityErrors: nationalityErrors\n    };\n    return {\n      isValid: isValid,\n      errors: errors\n    };\n  };\n\n  var submit = function submit(cb) {\n    var _validateData = validateData(),\n        isValid = _validateData.isValid,\n        errors = _validateData.errors;\n\n    setInputErrors(errors);\n    if (!isValid) return cb('Please enter valid inputs');\n    return cb('', {\n      birthDate: birthDate ? birthDate.toISOString() : null,\n      birthPlace: birthPlace,\n      residence: residence,\n      phoneNumber: phoneNumber,\n      nationality: nationality,\n      nicNumber: nicNumber,\n      nicDateOfIssue: nicDateOfIssue ? nicDateOfIssue.toISOString() : null,\n      nicPlaceOfIssue: nicPlaceOfIssue,\n      highestAcademicQualification: highestAcademicQualification,\n      yearOfIssue: yearOfIssue,\n      englishGradeInGCEOL: englishGradeInGCEOL,\n      mathematicsGradeInGCEOL: mathematicsGradeInGCEOL,\n      professionalQualification: professionalQualification,\n      employmentStatus: employmentStatus,\n      jobTitle: jobTitle,\n      yearsOfExperience: yearsOfExperience,\n      employerName: employerName,\n      employerAddress: employerAddress,\n      otherDetails: draftToHtml(convertToRaw(otherDetails.getCurrentContent()))\n    });\n  };\n\n  function onChange(command, editorState) {\n    var newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      setOtherDetails(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      textAlign: 'left'\n    }\n  }, __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Personal Information\"), __jsx(\"div\", null, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils\n  }, __jsx(DatePicker, {\n    className: classes.field,\n    autoOk: true,\n    fullWidth: true,\n    format: \"MM/dd/yyyy\",\n    variant: \"inline\",\n    id: \"birthDate\",\n    label: \"Birthdate\",\n    value: birthDate,\n    onChange: setBirthDate,\n    error: inputErrors.birthDateErrors.length > 0,\n    helperText: inputErrors.birthDateErrors.join(', ')\n  })), __jsx(TextField, {\n    className: classes.field,\n    id: \"birthPlace\",\n    name: \"birthPlace\",\n    label: \"Birth place\",\n    fullWidth: true,\n    value: birthPlace,\n    onChange: function onChange(e) {\n      return setBirthPlace(e.target.value);\n    },\n    error: inputErrors.birthPlaceErrors.length > 0,\n    helperText: inputErrors.birthPlaceErrors.join(', ')\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"residence\",\n    name: \"residence\",\n    label: \"Residence\",\n    fullWidth: true,\n    value: residence,\n    onChange: function onChange(e) {\n      return setResidence(e.target.value);\n    },\n    error: inputErrors.residenceErrors.length > 0,\n    helperText: inputErrors.residenceErrors.join(', ')\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"phoneNumber\",\n    name: \"phoneNumber\",\n    label: \"Phone number\",\n    fullWidth: true,\n    value: phoneNumber,\n    onChange: function onChange(e) {\n      return setPhoneNumber(e.target.value);\n    },\n    error: inputErrors.phoneNumberErrors.length > 0,\n    helperText: inputErrors.phoneNumberErrors.join(', ')\n  }), __jsx(TextField, {\n    id: \"nationality\",\n    name: \"nationality\",\n    label: \"Nationality\",\n    fullWidth: true,\n    value: nationality,\n    onChange: function onChange(e) {\n      return setNationality(e.target.value);\n    },\n    error: inputErrors.nationalityErrors.length > 0,\n    helperText: inputErrors.nationalityErrors.join(', ')\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Identification\"), __jsx(\"div\", null, __jsx(TextField, {\n    className: classes.field,\n    id: \"nicNumber\",\n    name: \"nicNumber\",\n    label: \"Id Card number\",\n    fullWidth: true,\n    value: nicNumber,\n    onChange: function onChange(e) {\n      return setNicNumber(e.target.value);\n    }\n  }), __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils\n  }, __jsx(DatePicker, {\n    className: classes.field,\n    autoOk: true,\n    clearable: true,\n    format: \"MM/dd/yyyy\",\n    color: \"secondary\",\n    variant: \"inline\",\n    fullWidth: true,\n    id: \"nicDateOfIssue\",\n    label: \"Date of issue\",\n    value: nicDateOfIssue,\n    onChange: setNicDateOfIssue\n  })), __jsx(TextField, {\n    id: \"nicPlaceOfIssue\",\n    name: \"nicPlaceOfIssue\",\n    label: \"Place of issue\",\n    fullWidth: true,\n    value: nicPlaceOfIssue,\n    onChange: function onChange(e) {\n      return setNicPlaceOfIssue(e.target.value);\n    }\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Academic Details\"), __jsx(\"div\", null, __jsx(TextField, {\n    className: classes.field,\n    id: \"highestAcademicQualification\",\n    name: \"highestAcademicQualification\",\n    label: \"Highest academic qualification\",\n    fullWidth: true,\n    value: highestAcademicQualification,\n    onChange: function onChange(e) {\n      return setHighestAcademicQualification(e.target.value);\n    }\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"yearOfIssue\",\n    name: \"yearOfIssue\",\n    label: \"Year of issue\",\n    type: \"number\",\n    fullWidth: true,\n    value: yearOfIssue,\n    onChange: function onChange(e) {\n      return setYearOfIssue(_parseInt(e.target.value, 10));\n    }\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"englishGradeInGCEOL\",\n    name: \"englishGradeInGCEOL\",\n    label: \"English grade in GCEOL\",\n    fullWidth: true,\n    value: englishGradeInGCEOL,\n    onChange: function onChange(e) {\n      return setEnglishGradeInGCEOL(e.target.value);\n    }\n  }), __jsx(TextField, {\n    id: \"mathematicsGradeInGCEOL\",\n    name: \"mathematicsGradeInGCEOL\",\n    label: \"Mathematics grade in GCEOL\",\n    fullWidth: true,\n    value: mathematicsGradeInGCEOL,\n    onChange: function onChange(e) {\n      return setMathematicsGradeInGCEOL(e.target.value);\n    }\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Professional Details\"), __jsx(\"div\", null, __jsx(TextField, {\n    className: classes.field,\n    id: \"professionalQualification\",\n    name: \"professionalQualification\",\n    label: \"Professional qualification\",\n    fullWidth: true,\n    value: professionalQualification,\n    onChange: function onChange(e) {\n      return setProfessionalQualification(e.target.value);\n    }\n  }), __jsx(FormControl, {\n    component: \"fieldset\",\n    style: {\n      margin: '20px 0px'\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    style: {\n      fontSize: '9pt',\n      marginBottom: 10\n    }\n  }, \"Employment status\"), __jsx(RadioGroup, {\n    \"aria-label\": \"gender\",\n    name: \"employmentStatus\",\n    value: employmentStatus,\n    onChange: function onChange(e) {\n      return setEmploymentStatus(e.target.value);\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"Employee\",\n    control: __jsx(Radio, null),\n    label: \"Employee\",\n    style: {\n      marginLeft: 5\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"SelfEmployed\",\n    control: __jsx(Radio, null),\n    label: \"Self employed\",\n    style: {\n      marginLeft: 5\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"JobSeeker\",\n    control: __jsx(Radio, null),\n    label: \"Job seeker\",\n    style: {\n      marginLeft: 5\n    }\n  }))), __jsx(TextField, {\n    className: classes.field,\n    id: \"jobTitle\",\n    name: \"jobTitle\",\n    label: \"Job Title\",\n    fullWidth: true,\n    value: jobTitle,\n    onChange: function onChange(e) {\n      return setJobTitle(e.target.value);\n    }\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"yearsOfExperience\",\n    name: \"yearsOfExperience\",\n    label: \"Years of experience\",\n    type: \"number\",\n    fullWidth: true,\n    value: yearsOfExperience,\n    onChange: function onChange(e) {\n      return setYearsOfExperience(_parseInt(e.target.value, 10));\n    }\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"employerName\",\n    name: \"employerName\",\n    label: \"Employer\",\n    fullWidth: true,\n    value: employerName,\n    onChange: function onChange(e) {\n      return setEmployerName(e.target.value);\n    }\n  }), __jsx(TextField, {\n    id: \"employerAddress\",\n    name: \"employerAddress\",\n    label: \"Employer Address\",\n    fullWidth: true,\n    value: employerAddress,\n    onChange: function onChange(e) {\n      return setEmployerAddress(e.target.value);\n    }\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Other Details\"), __jsx(\"div\", {\n    style: {\n      fontSize: '9pt',\n      color: '#808080',\n      marginBottom: 10\n    }\n  }, \"Please provide additional details here, anything that is valuable for you. For example, if you already have records with Cisco, ACCA, CIPS, or whichever program you want to apply for, kindly provide references here.\"), __jsx(\"div\", {\n    style: {\n      border: '1px solid #DFDFDF',\n      padding: 5,\n      borderRadius: 5\n    }\n  }, true && __jsx(Editor, {\n    editorState: otherDetails,\n    onChange: function onChange(editorState) {\n      return setOtherDetails(editorState);\n    },\n    handleKeyCommand: onChange\n  }))), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      return submit(function (errMessage, data) {\n        if (errMessage) return setAlertOptions({\n          open: true,\n          level: 'error',\n          message: errMessage\n        });\n        if (data) return onSubmit(data);\n        return;\n      });\n    }\n  }, \"\".concat(submitText || 'Save'))), __jsx(Alert, {\n    level: alertOptions.level,\n    message: alertOptions.message,\n    open: alertOptions.open,\n    onClose: function onClose() {\n      return setAlertOptions({\n        open: false,\n        level: alertOptions.level,\n        message: alertOptions.message\n      });\n    }\n  }));\n}\n\nexport default ProfileForm;","map":null,"metadata":{},"sourceType":"module"}