{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProfile($email: String!) {\\n    account(email: $email) {\\n      id\\n      email\\n      fullName\\n      profile {\\n        id birthDate birthPlace residence phoneNumber nationality otherDetails\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport MainLayout from '../layouts/MainLayout';\nimport { useAuth } from '../components/AuthContext';\nimport Container from '../components/Container';\nimport { gql } from 'apollo-boost';\nimport { Paper, Typography, Button } from '@material-ui/core';\nimport Router from 'next/router';\nimport ProfileView from '../components/ProfileView';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\nimport Link from 'next/link';\nvar GET_PROFILE_QUERY = gql(_templateObject());\n\nfunction MyProfile(_ref) {\n  var profile = _ref.profile;\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser;\n\n  return __jsx(MainLayout, {\n    title: \"\".concat(currentUser ? currentUser.fullName : 'My Profile')\n  }, __jsx(Container, null, currentUser && __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    }\n  }, __jsx(Paper, {\n    style: {\n      padding: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"secondary\"\n  }, currentUser.fullName), __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\"\n  }, currentUser.email), __jsx(\"div\", {\n    style: {\n      color: '#808080',\n      fontSize: '8pt',\n      marginTop: 5\n    }\n  }, \"If there is a mistake in your name or if you want to update your email, please contact an administrator\")), profile ? __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      marginBottom: 15,\n      paddingBottom: 10,\n      borderBottom: '1px solid #DFDFDF'\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    style: {\n      flexGrow: 1\n    }\n  }, \"My Profile\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: function onClick() {\n      return Router.push('/editProfile');\n    }\n  }, \"Edit\")), __jsx(ProfileView, {\n    profile: profile\n  })) : __jsx(\"div\", {\n    style: {\n      padding: 40,\n      textAlign: 'center'\n    }\n  }, \"You do not have a profile yet. \\xA0\", __jsx(Link, {\n    href: \"/createProfile\"\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none'\n    }\n  }, \"Create Profile\"))))));\n}\n\nMyProfile.getInitialProps = function _callee(_ref2) {\n  var apolloClient, token, currentUser, profile, _ref3, account;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          apolloClient = _ref2.apolloClient, token = _ref2.token, currentUser = _ref2.currentUser;\n          profile = null;\n\n          if (!currentUser) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_PROFILE_QUERY,\n            variables: {\n              email: currentUser.email\n            },\n            context: {\n              headers: {\n                'schoolman_token': token\n              }\n            }\n          }));\n\n        case 5:\n          _ref3 = _context.sent;\n          account = _ref3.data.account;\n          profile = account.profile;\n\n        case 8:\n          return _context.abrupt(\"return\", {\n            profile: profile,\n            authRequired: true\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withApollo(withAuth(MyProfile));","map":null,"metadata":{},"sourceType":"module"}