{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/data/apps/opensource/SchoolMan/web-client/components/ApplicationStepper.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Stepper, Step, StepLabel, Button, Paper, Hidden, Typography, Table, TableHead, TableBody, TableRow, TableCell, CircularProgress } from '@material-ui/core';\nimport Container from './Container';\nimport { useAuth } from '../components/AuthContext';\nimport ProfileForm from '../components/ProfileForm';\nimport ProfileView from './ProfileView';\nimport Link from 'next/link';\nimport { gql } from 'apollo-boost';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport ApplierForm from './ApplierForm';\nimport Alert from '../components/Alert';\nimport sendMail from '../lib/send-mail';\nimport { currency } from '../lib/utilities';\nimport { applicationReceiver } from '../app.config';\nconst GET_APPLICATION_PROFILE_QUERY = gql`\n  query getApplicationProfile {\n    applicationProfile @client {\n      birthDate\n      birthPlace\n      residence\n      phoneNumber\n      nationality\n      otherDetails\n    }\n  }\n`;\nconst GET_APPLIER_QUERY = gql`\n  query getApplier {\n    applier @client {\n      name\n      email\n    }\n  }\n`;\n\nconst resetApplicationData = client => {\n  client.writeQuery({\n    query: GET_APPLIER_QUERY,\n    data: {\n      applier: {\n        __typename: 'Applier',\n        name: '',\n        email: ''\n      }\n    }\n  });\n  client.writeQuery({\n    query: GET_APPLICATION_PROFILE_QUERY,\n    data: {\n      applicationProfile: {\n        __typename: 'ProfileData',\n        birthDate: null,\n        birthPlace: '',\n        residence: '',\n        phoneNumber: '',\n        nationality: '',\n        otherDetails: null\n      }\n    }\n  });\n};\n\nexport default function ApplicationStepper(props) {\n  const classes = makeStyles(theme => createStyles({\n    root: {\n      width: '100%'\n    },\n    btnBar: {\n      display: 'flex',\n      padding: '10px 0px',\n      borderTop: '1px solid #DFDFDF'\n    },\n    btnLeft: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'flex-start'\n    },\n    btnRight: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n  }))();\n  const {\n    0: alertOptions,\n    1: setAlertOptions\n  } = useState({\n    open: false,\n    level: 'info',\n    message: ''\n  });\n  const {\n    0: sending,\n    1: setSending\n  } = useState(false);\n  const {\n    currentUser\n  } = useAuth();\n  const client = useApolloClient();\n  const {\n    applicationProfile\n  } = client.readQuery({\n    query: GET_APPLICATION_PROFILE_QUERY\n  });\n  const {\n    applier\n  } = client.readQuery({\n    query: GET_APPLIER_QUERY\n  });\n  const steps = getSteps(!!currentUser);\n  const {\n    0: step,\n    1: setStep\n  } = useState('ConfirmAccount');\n  const activeStep = step === 'ApplicationConfirmation' ? currentUser ? 3 : 4 : steps.filter(s => s.step === step)[0].id;\n\n  const idBody = data => {\n    return `\n      <div>\n        <p>Dear ${data.name}, your application is being processed; you will have a response as soon as possible. See details below:</p>\n\n        <h3>Name and Email</h3>\n        <p><strong>Name</strong><br/>${data.name}</p>\n        <p><strong>Email</strong><br/>${data.email}</p>\n        <br />\n        <br />\n      </div>\n    `;\n  };\n\n  const sessionBody = () => {\n    return `\n      <div>\n        <h3>Session details</h3>\n        <p><strong>Department</strong><br/>${props.departmentTitle}</p>\n        <p><strong>Program</strong><br/>${props.programTitle}</p>\n        <p><strong>Plan</strong><br/>${props.planTitle}</p>\n        <p><strong>Training</strong><br/>${props.trainingTitle}</p>\n        <p><strong>Session</strong><br/>${props.session.title}</p>\n        <p><strong>Start date</strong><br/>${props.session.startDate && new Date(props.session.startDate).toLocaleDateString()}</p>\n        <p><strong>Duration</strong><br/>${props.planDuration}</p>\n        <br />\n        <br />\n      </div>\n    `;\n  };\n\n  const profileBody = profile => {\n    return `\n      <div>\n        <h3>Profile details</h3>\n        <p><strong>Birthdate</strong><br/>${new Date(profile.birthDate).toLocaleDateString()}</p>\n        <p><strong>Birth place</strong><br/>${profile.birthPlace}</p>\n        <p><strong>Residence</strong><br/>${profile.residence}</p>\n        <p><strong>Phone number</strong><br/>${profile.phoneNumber}</p>\n        <p><strong>Nationality</strong><br/>${profile.nationality}</p>\n        <p><strong>Other details</strong><br/>${profile.otherDetails || '(missing)'}</p>\n        <br />\n        <br />\n      </div>\n    `;\n  };\n\n  const goToStep = nextStep => setStep(nextStep);\n\n  const handleBack = () => {\n    switch (step) {\n      case 'ConfirmAccount':\n        return;\n\n      case 'FillApplicationForm':\n        return goToStep('ConfirmAccount');\n\n      case 'ReviewProfileData':\n        if (currentUser) return goToStep('ConfirmAccount');else return goToStep('FillApplicationForm');\n\n      case 'ReviewTrainingSession':\n        return goToStep('ReviewProfileData');\n    }\n  };\n\n  function getSteps(loggedIn) {\n    const steps = [];\n    let index = 0;\n    steps.push({\n      step: 'ConfirmAccount',\n      caption: 'Confirm your account',\n      id: index\n    });\n    index += 1;\n\n    if (!loggedIn) {\n      steps.push({\n        step: 'FillApplicationForm',\n        caption: 'Fill application form',\n        id: index\n      });\n      index += 1;\n    }\n\n    steps.push({\n      step: 'ReviewProfileData',\n      caption: 'Review your profile',\n      id: index\n    });\n    index += 1;\n    steps.push({\n      step: 'ReviewTrainingSession',\n      caption: 'Review training session',\n      id: index\n    });\n    return steps;\n  }\n\n  function ConfirmAccountStep() {\n    const classes = makeStyles(theme => createStyles({\n      root: {\n        marginBottom: 40,\n        paddingTop: 30,\n        paddingBottom: 15,\n        textAlign: 'center'\n      },\n      hasAccount: {},\n      noAccount: {\n        marginBottom: 30\n      }\n    }))();\n    return __jsx(Container, {\n      maxWidth: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: 10,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Confirm your account\")), __jsx(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, currentUser ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"You are applying as\"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h4\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, currentUser.fullName)), __jsx(\"div\", {\n      style: {\n        fontSize: '10pt',\n        color: '#808080',\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"(\", currentUser.email, \")\"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, __jsx(Button, {\n      size: \"large\",\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => goToStep('ReviewProfileData'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Review your profile\")), __jsx(Container, {\n      maxWidth: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        fontSize: '9pt',\n        color: '#808080',\n        textAlign: 'center',\n        paddingTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"If you want to use a different account, sign out first, then sign in with the right account.\"))) : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.noAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        marginBottom: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Don't have an account yet ?\"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, __jsx(ApplierForm, {\n      data: applier,\n      onSubmit: data => {\n        client.writeQuery({\n          query: GET_APPLIER_QUERY,\n          data: {\n            applier: _objectSpread({\n              __typename: 'Applier'\n            }, data)\n          }\n        });\n        goToStep('FillApplicationForm');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })), __jsx(Container, {\n      maxWidth: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        fontSize: '9pt',\n        color: '#808080',\n        textAlign: 'center',\n        paddingTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"If your application is successfull, those information will be used to create your account.\"))), __jsx(\"div\", {\n      className: classes.hasAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Already have an account ? \\xA0\", __jsx(Link, {\n      href: {\n        pathname: '/signIn',\n        query: {\n          backTo: `/application?tsId=${props.session.id}`\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Sign in\"))))));\n  }\n\n  function FillApplicationFormStep(props) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: 10,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Application form\")), __jsx(Container, {\n      maxWidth: 600,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, __jsx(ProfileForm, {\n      profile: applicationProfile,\n      submitText: \"Save and Review your data\",\n      onSubmit: data => props.onSubmit(data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })));\n  }\n\n  function ReviewProfileDataStep() {\n    if (currentUser && !props.profile) return __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"You don't have a profile yet. Please \", __jsx(Link, {\n      href: \"/myProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"create your profile\")), \" and retry to apply.\");\n    return __jsx(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: 10,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Review your Profile\")), currentUser ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        fontSize: '9pt',\n        color: '#808080',\n        margin: '10px 0px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"If your profile is not up to date, please update it first then try to apply again.\"), __jsx(ProfileView, {\n      profile: currentUser.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    })) : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, __jsx(ProfileView, {\n      profile: applicationProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    })), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, (currentUser && currentUser.profile || !currentUser) && __jsx(Button, {\n      size: \"large\",\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => goToStep('ReviewTrainingSession'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Review Training Session Details\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }));\n  }\n\n  function ReviewTrainingSessionStep() {\n    const classes = makeStyles(theme => createStyles({\n      root: {\n        marginBottom: 40,\n        textAlign: 'center'\n      }\n    }))();\n    if (currentUser && !props.profile) return __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"You don't have a profile yet. Please \", __jsx(Link, {\n      href: \"/myProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, \"create your profile\")), \" and retry to apply.\");\n    return __jsx(Container, {\n      maxWidth: 600,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: 10,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Review Training Session Details\")), __jsx(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, __jsx(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, __jsx(Table, {\n      size: \"small\",\n      style: {\n        border: '1px solid #DFDFDF'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, __jsx(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, __jsx(TableRow, {\n      key: \"dep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      style: {\n        color: '#808080'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Department\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, props.departmentTitle)), __jsx(TableRow, {\n      key: \"program\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      style: {\n        color: '#808080'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Program\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, props.programTitle)), __jsx(TableRow, {\n      key: \"plan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      style: {\n        color: '#808080'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"Plan\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, props.planTitle)), __jsx(TableRow, {\n      key: \"training\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      style: {\n        color: '#808080'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"Training\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, props.trainingTitle)), __jsx(TableRow, {\n      key: \"session\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      style: {\n        color: '#808080'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"Session\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, props.session.title)), __jsx(TableRow, {\n      key: \"sdate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      style: {\n        color: '#808080'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \"Start date\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, props.session.startDate)), __jsx(TableRow, {\n      key: \"duration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      style: {\n        color: '#808080'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Duration\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, props.planDuration))))), props.session.fees.length > 0 ? __jsx(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        marginBottom: 5,\n        color: '#808080'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, \"Fees\"), __jsx(Table, {\n      size: \"small\",\n      style: {\n        border: '1px solid #DFDFDF'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, __jsx(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, __jsx(TableRow, {\n      style: {\n        backgroundColor: '#DFDFDF'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"Description\"), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"Type\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"Amount\"))), __jsx(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, props.session.fees.map(f => __jsx(TableRow, {\n      key: f.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, f.description, \" \", f.optional && __jsx(\"span\", {\n      style: {\n        color: '#808080'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, \"(Optional)\")), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, f.feeType), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, f.promotionalAmount > 0 ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      style: {\n        textDecoration: 'line-through'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, currency(f.amount)), \" \\xA0\", __jsx(\"span\", {\n      style: {\n        color: 'orange'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, currency(f.promotionalAmount))) : __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, currency(f.amount))))))), __jsx(Container, {\n      maxWidth: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        fontSize: '9pt',\n        color: '#808080',\n        textAlign: 'center',\n        paddingTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, \"Note: \"), \" These fees are the training fees at the time the session was created, they might be different from the current training fees.\"))) : __jsx(\"div\", {\n      style: {\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, \"No fees\")), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, __jsx(Button, {\n      size: \"large\",\n      variant: \"contained\",\n      color: \"secondary\",\n      style: {\n        marginTop: 15\n      },\n      disabled: sending,\n      onClick: async () => {\n        let messageBody = currentUser ? idBody({\n          name: currentUser.fullName,\n          email: currentUser.email\n        }) : idBody(applier);\n        messageBody += sessionBody();\n        if (currentUser) messageBody += '<p><h3>Profile details</h3> (Existing user)</p>';else messageBody += profileBody(applicationProfile);\n\n        try {\n          setSending(true);\n          await sendMail({\n            subject: `Application form (${currentUser ? currentUser.fullName : applier.name})`,\n            body: messageBody,\n            to: applicationReceiver\n          });\n          goToStep('ApplicationConfirmation');\n          resetApplicationData(client);\n        } catch (ex) {\n          let errorMessage = ex.message;\n          if (ex.response) errorMessage = _JSON$stringify(ex.response.data.err);\n          setAlertOptions({\n            open: true,\n            level: 'error',\n            message: `Could not send email: ${errorMessage}`\n          });\n        } finally {\n          setSending(false);\n\n          try {\n            // send an email to the applier. If an error occured, do nothing.\n            await sendMail({\n              subject: `Application form received (${currentUser ? currentUser.fullName : applier.name})`,\n              body: messageBody,\n              to: applier.email\n            });\n          } catch (ex) {\n            /* Do nothing */\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, sending ? __jsx(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }) : 'Apply')))));\n  }\n\n  function ApplicationConfirmationStep() {\n    return __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '50px 0px',\n        fontSize: '10pt',\n        color: '#808080'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"/images/success.png\",\n      width: \"100\",\n      height: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, \"Your application has been received and is being processed. We will contact you shortly.\"));\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539\n    },\n    __self: this\n  }, __jsx(Paper, {\n    style: {\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540\n    },\n    __self: this\n  }, __jsx(Hidden, {\n    smDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541\n    },\n    __self: this\n  }, __jsx(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542\n    },\n    __self: this\n  }, steps.map(s => __jsx(Step, {\n    key: s.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544\n    },\n    __self: this\n  }, __jsx(StepLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545\n    },\n    __self: this\n  }, s.caption))))), __jsx(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552\n    },\n    __self: this\n  }, step !== 'ApplicationConfirmation' ? __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554\n    },\n    __self: this\n  }, \"Step \", activeStep + 1, \" / \", steps.length) : __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555\n    },\n    __self: this\n  }, \"Done\")))), __jsx(\"div\", {\n    style: {\n      minHeight: 250\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561\n    },\n    __self: this\n  }, step === 'ConfirmAccount' && __jsx(ConfirmAccountStep, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562\n    },\n    __self: this\n  }), step === 'FillApplicationForm' && __jsx(FillApplicationFormStep, {\n    onSubmit: data => {\n      goToStep('ReviewProfileData');\n      client.writeQuery({\n        query: GET_APPLICATION_PROFILE_QUERY,\n        data: {\n          applicationProfile: _objectSpread({\n            __typename: 'ProfileData'\n          }, data)\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565\n    },\n    __self: this\n  }), step === 'ReviewProfileData' && __jsx(ReviewProfileDataStep, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582\n    },\n    __self: this\n  }), step === 'ReviewTrainingSession' && __jsx(ReviewTrainingSessionStep, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583\n    },\n    __self: this\n  }), step === 'ApplicationConfirmation' && __jsx(ApplicationConfirmationStep, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587\n    },\n    __self: this\n  }, step !== 'ApplicationConfirmation' && __jsx(\"div\", {\n    className: classes.btnBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.btnLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591\n    },\n    __self: this\n  }, \"Back\")), __jsx(\"div\", {\n    className: classes.btnRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    onClick: () => {\n      resetApplicationData(client);\n      props.handleCancel();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595\n    },\n    __self: this\n  }, \"Cancel\")))), __jsx(Alert, {\n    level: alertOptions.level,\n    message: alertOptions.message,\n    open: alertOptions.open,\n    onClose: () => setAlertOptions({\n      open: false,\n      level: alertOptions.level,\n      message: alertOptions.message\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/data/apps/opensource/SchoolMan/web-client/components/ApplicationStepper.tsx"],"names":["React","useState","makeStyles","createStyles","Stepper","Step","StepLabel","Button","Paper","Hidden","Typography","Table","TableHead","TableBody","TableRow","TableCell","CircularProgress","Container","useAuth","ProfileForm","ProfileView","Link","gql","useApolloClient","ApplierForm","Alert","sendMail","currency","applicationReceiver","GET_APPLICATION_PROFILE_QUERY","GET_APPLIER_QUERY","resetApplicationData","client","writeQuery","query","data","applier","__typename","name","email","applicationProfile","birthDate","birthPlace","residence","phoneNumber","nationality","otherDetails","ApplicationStepper","props","classes","theme","root","width","btnBar","display","padding","borderTop","btnLeft","flexGrow","justifyContent","btnRight","alertOptions","setAlertOptions","open","level","message","sending","setSending","currentUser","readQuery","steps","getSteps","step","setStep","activeStep","filter","s","id","idBody","sessionBody","departmentTitle","programTitle","planTitle","trainingTitle","session","title","startDate","Date","toLocaleDateString","planDuration","profileBody","profile","goToStep","nextStep","handleBack","loggedIn","index","push","caption","ConfirmAccountStep","marginBottom","paddingTop","paddingBottom","textAlign","hasAccount","noAccount","fullName","fontSize","color","fontWeight","pathname","backTo","FillApplicationFormStep","onSubmit","ReviewProfileDataStep","margin","ReviewTrainingSessionStep","border","fees","length","backgroundColor","map","f","description","optional","feeType","promotionalAmount","textDecoration","amount","marginTop","messageBody","subject","body","to","ex","errorMessage","response","err","ApplicationConfirmationStep","minHeight","handleCancel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { \n  Stepper, \n  Step, \n  StepLabel, \n  Button, \n  Paper, \n  Hidden, \n  Typography,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  CircularProgress\n} from '@material-ui/core'\nimport ITrainingSession from '../server/src/models/catalog/TrainingSession'\nimport IAccountProfileFields from '../server/src/models/accounts/AccountProfile'\nimport Container from './Container'\nimport { useAuth } from '../components/AuthContext'\nimport ProfileForm from '../components/ProfileForm'\nimport ProfileView from './ProfileView'\nimport Link from 'next/link'\nimport { IProfileData } from '../server/src/models/accounts/AccountProfile'\nimport { gql } from 'apollo-boost'\nimport { useApolloClient } from '@apollo/react-hooks'\nimport ApplierForm from './ApplierForm'\nimport Alert, { AlertOptions } from '../components/Alert'\nimport sendMail from '../lib/send-mail'\nimport { currency } from '../lib/utilities'\nimport { applicationReceiver } from '../app.config'\n\nexport type StepItem = 'ConfirmAccount' \n  | 'FillApplicationForm' \n  | 'ReviewProfileData' \n  | 'ReviewTrainingSession' \n  | 'ApplicationConfirmation'\n\n\nconst GET_APPLICATION_PROFILE_QUERY = gql`\n  query getApplicationProfile {\n    applicationProfile @client {\n      birthDate\n      birthPlace\n      residence\n      phoneNumber\n      nationality\n      otherDetails\n    }\n  }\n`\n\nconst GET_APPLIER_QUERY = gql`\n  query getApplier {\n    applier @client {\n      name\n      email\n    }\n  }\n`\n\nconst resetApplicationData = (client: any) => {\n  client.writeQuery({\n    query: GET_APPLIER_QUERY,\n    data: { applier: { __typename: 'Applier', name: '', email: '' } }\n  })\n\n  client.writeQuery({\n    query: GET_APPLICATION_PROFILE_QUERY,\n    data: {\n      applicationProfile: {\n        __typename: 'ProfileData',\n        birthDate: null,\n        birthPlace: '',\n        residence: '',\n        phoneNumber: '',\n        nationality: '',\n        otherDetails: null\n      }\n    }\n  })\n}\n\nexport default function ApplicationStepper(\n  props: { \n    handleCancel: Function,\n    trainingTitle: string,\n    departmentTitle: string,\n    programTitle: string,\n    planTitle: string,\n    planDuration: string,\n    session: ITrainingSession,\n    profile: IAccountProfileFields\n  }\n) {\n  const classes = makeStyles((theme: Theme) => createStyles({\n    root: { width: '100%' },\n    btnBar: {\n      display: 'flex',\n      padding: '10px 0px',\n      borderTop: '1px solid #DFDFDF'\n    },\n    btnLeft: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'flex-start'\n    },\n    btnRight: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n  }))()\n\n  const [alertOptions, setAlertOptions] = useState<AlertOptions>({ open: false, level: 'info', message: '' })\n  const [sending, setSending] = useState<boolean>(false)\n  const { currentUser } = useAuth()\n  const client = useApolloClient()\n  const { applicationProfile }: any = client.readQuery({ query: GET_APPLICATION_PROFILE_QUERY })\n  const { applier }: any = client.readQuery({ query: GET_APPLIER_QUERY })\n  const steps = getSteps(!!currentUser)\n  const [step, setStep] = useState<StepItem>('ConfirmAccount')\n  const activeStep = step === 'ApplicationConfirmation' ? \n    (currentUser ? 3 : 4) : \n    steps.filter(s => s.step === step)[0].id\n\n\n  const idBody = (data: { name: string, email: string }) => {\n    return `\n      <div>\n        <p>Dear ${data.name}, your application is being processed; you will have a response as soon as possible. See details below:</p>\n\n        <h3>Name and Email</h3>\n        <p><strong>Name</strong><br/>${data.name}</p>\n        <p><strong>Email</strong><br/>${data.email}</p>\n        <br />\n        <br />\n      </div>\n    `\n  }\n\n  const sessionBody = () => {\n    return `\n      <div>\n        <h3>Session details</h3>\n        <p><strong>Department</strong><br/>${props.departmentTitle}</p>\n        <p><strong>Program</strong><br/>${props.programTitle}</p>\n        <p><strong>Plan</strong><br/>${props.planTitle}</p>\n        <p><strong>Training</strong><br/>${props.trainingTitle}</p>\n        <p><strong>Session</strong><br/>${props.session.title}</p>\n        <p><strong>Start date</strong><br/>${props.session.startDate && new Date(props.session.startDate).toLocaleDateString()}</p>\n        <p><strong>Duration</strong><br/>${props.planDuration}</p>\n        <br />\n        <br />\n      </div>\n    `\n  }\n\n  const profileBody = (profile: IProfileData) => {\n    return `\n      <div>\n        <h3>Profile details</h3>\n        <p><strong>Birthdate</strong><br/>${new Date(profile.birthDate).toLocaleDateString()}</p>\n        <p><strong>Birth place</strong><br/>${profile.birthPlace}</p>\n        <p><strong>Residence</strong><br/>${profile.residence}</p>\n        <p><strong>Phone number</strong><br/>${profile.phoneNumber}</p>\n        <p><strong>Nationality</strong><br/>${profile.nationality}</p>\n        <p><strong>Other details</strong><br/>${profile.otherDetails || '(missing)'}</p>\n        <br />\n        <br />\n      </div>\n    `\n  }\n\n  const goToStep = (nextStep: StepItem) => setStep(nextStep)\n  \n  const handleBack = () => {\n    switch (step) {\n      case 'ConfirmAccount':\n        return\n      case 'FillApplicationForm':\n        return goToStep('ConfirmAccount')\n\n      case 'ReviewProfileData':\n        if (currentUser) return goToStep('ConfirmAccount')\n        else return goToStep('FillApplicationForm')\n\n      case 'ReviewTrainingSession':\n        return goToStep('ReviewProfileData')\n    }\n  }\n  \n  function getSteps(loggedIn: boolean) {\n    const steps = []; let index = 0\n\n    steps.push({ step: 'ConfirmAccount', caption: 'Confirm your account', id: index }); index += 1\n    if (!loggedIn) {steps.push({ step: 'FillApplicationForm', caption: 'Fill application form', id: index }); index += 1 }\n    steps.push({ step: 'ReviewProfileData', caption: 'Review your profile', id: index });  index += 1\n    steps.push({ step: 'ReviewTrainingSession', caption: 'Review training session', id: index })\n\n    return steps\n  }\n\n  function ConfirmAccountStep() {\n    const classes = makeStyles((theme: Theme) => createStyles({\n      root: {\n        marginBottom: 40,\n        paddingTop: 30,\n        paddingBottom: 15,\n        textAlign: 'center'\n      },\n      hasAccount: {},\n      noAccount: {\n        marginBottom: 30\n      }\n    }))()\n  \n    return (\n      <Container maxWidth={500}>\n        <div style={{padding: 10, textAlign: 'center'}}>\n          <Typography variant=\"h5\">Confirm your account</Typography>\n        </div>\n  \n        <div className={classes.root}>\n          {currentUser ?\n            <div>\n              <div>You are applying as</div>\n              <div><Typography variant=\"h4\" color=\"secondary\">{currentUser.fullName}</Typography></div>\n              <div style={{ fontSize: '10pt', color: '#808080', marginBottom: 10 }}>({currentUser.email})</div>\n              <div>\n                <Button \n                  size=\"large\" \n                  variant=\"contained\" \n                  color=\"secondary\"\n                  onClick={() => goToStep('ReviewProfileData')}\n                >\n                  Review your profile\n                </Button>\n              </div>\n  \n              <Container maxWidth={300}>\n                <div style={{ fontSize: '9pt', color: '#808080', textAlign: 'center', paddingTop: 10 }}>\n                  If you want to use a different account, sign out first, then sign in with the right account.\n                </div>\n              </Container>\n            </div> :\n  \n            <div>\n              <div className={classes.noAccount}>\n                <div style={{ fontWeight: 'bold', marginBottom: 15 }}>Don't have an account yet ?</div>\n                <div>\n                  <ApplierForm\n                    data={applier}\n                    onSubmit={(data: any) => {\n                      client.writeQuery({\n                        query: GET_APPLIER_QUERY,\n                        data: {\n                          applier: {\n                            __typename: 'Applier',\n                            ...data\n                          }\n                        }\n                      })\n\n                      goToStep('FillApplicationForm')\n                    }}\n                  />\n                </div>\n  \n                <Container maxWidth={300}>\n                  <div style={{ fontSize: '9pt', color: '#808080', textAlign: 'center', paddingTop: 10 }}>\n                    If your application is successfull, those information will be used to create your account.\n                  </div>\n                </Container>\n              </div>\n  \n              <div className={classes.hasAccount}>\n                Already have an account ? &nbsp;\n                <Link \n                  href={{ \n                    pathname: '/signIn', \n                    query: { backTo: `/application?tsId=${props.session.id}` }\n                  }}\n                >\n                  <a>Sign in</a>\n                </Link>\n              </div>\n            </div>\n          }\n        </div>\n      </Container>\n    )\n  }\n  \n  function FillApplicationFormStep(props: { onSubmit: (data: IProfileData) => void }) {\n    return (\n      <div>\n        <div style={{textAlign: 'center'}}>\n          <div style={{padding: 10, textAlign: 'center'}}>\n            <Typography variant=\"h5\">Application form</Typography>\n          </div>\n  \n          <Container maxWidth={600}>\n            <ProfileForm \n              profile={applicationProfile}\n              submitText=\"Save and Review your data\"\n              onSubmit={(data) => props.onSubmit(data)}\n            />\n          </Container>\n  \n          <br />\n        </div>\n      </div>\n    )\n  }\n  \n  function ReviewProfileDataStep() {\n    if (currentUser && !props.profile) \n      return (\n        <div style={{ textAlign: 'center', padding: 50 }}>\n          You don't have a profile yet. Please <Link href=\"/myProfile\"><a>create your profile</a></Link> and retry to apply.\n        </div>\n      )\n  \n    return (\n      <div style={{textAlign: 'center'}}>\n        <div style={{padding: 10, textAlign: 'center'}}>\n          <Typography variant=\"h5\">Review your Profile</Typography>\n        </div>\n  \n        {currentUser ?\n          <div>\n            <div style={{ fontSize: '9pt', color: '#808080', margin: '10px 0px' }}>\n              If your profile is not up to date, please update it first then try to apply again.\n            </div>\n  \n            <ProfileView profile={currentUser.profile} />\n          </div> :\n  \n          <div>\n            <ProfileView profile={applicationProfile} />\n          </div>\n        }\n  \n        <br />\n  \n        <div>\n          {((currentUser && currentUser.profile) || (!currentUser)) && \n            <Button \n              size=\"large\" \n              variant=\"contained\" \n              color=\"secondary\"\n              onClick={() => goToStep('ReviewTrainingSession')}\n            >\n              Review Training Session Details\n            </Button>\n          }\n        </div>\n  \n        <br />\n      </div>\n    )\n  }\n  \n  function ReviewTrainingSessionStep() {\n    const classes = makeStyles((theme: Theme) => createStyles({\n      root: {\n        marginBottom: 40,\n        textAlign: 'center'\n      }\n    }))()\n  \n    if (currentUser && !props.profile) \n      return (\n        <div style={{ textAlign: 'center', padding: 50 }}>\n          You don't have a profile yet. Please <Link href=\"/myProfile\"><a>create your profile</a></Link> and retry to apply.\n        </div>\n      )\n  \n    return (\n      <Container maxWidth={600}>\n        <div style={{padding: 10, textAlign: 'center'}}>\n          <Typography variant=\"h5\">Review Training Session Details</Typography>\n        </div>\n  \n        <div className={classes.root}>\n          <div>\n            <Paper>  \n              <div style={{ padding: 10 }}>\n                <Table size=\"small\" style={{ border: '1px solid #DFDFDF' }}>\n                  <TableBody>\n                    <TableRow key=\"dep\">\n                      <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Department</TableCell>\n                      <TableCell align=\"right\">{props.departmentTitle}</TableCell>\n                    </TableRow>\n  \n                    <TableRow key=\"program\">\n                      <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Program</TableCell>\n                      <TableCell align=\"right\">{props.programTitle}</TableCell>\n                    </TableRow>\n  \n                    <TableRow key=\"plan\">\n                      <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Plan</TableCell>\n                      <TableCell align=\"right\">{props.planTitle}</TableCell>\n                    </TableRow>\n\n                    <TableRow key=\"training\">\n                      <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Training</TableCell>\n                      <TableCell align=\"right\">{props.trainingTitle}</TableCell>\n                    </TableRow>\n  \n                    <TableRow key=\"session\">\n                      <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Session</TableCell>\n                      <TableCell align=\"right\">{props.session.title}</TableCell>\n                    </TableRow>\n  \n                    <TableRow key=\"sdate\">\n                      <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Start date</TableCell>\n                      <TableCell align=\"right\">{props.session.startDate}</TableCell>\n                    </TableRow>\n  \n                    <TableRow key=\"duration\">\n                      <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Duration</TableCell>\n                      <TableCell align=\"right\">{props.planDuration}</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </div>\n  \n              {props.session.fees.length > 0 ?\n                <div style={{ padding: 10 }}>\n                  <div style={{ marginBottom: 5, color: '#808080' }}>Fees</div>\n  \n                  <Table size=\"small\" style={{ border: '1px solid #DFDFDF' }}>\n                    <TableHead>\n                      <TableRow style={{ backgroundColor: '#DFDFDF' }}>\n                        <TableCell>Description</TableCell>\n                        <TableCell>Type</TableCell>\n                        <TableCell align=\"right\">Amount</TableCell>\n                      </TableRow>\n                    </TableHead>\n  \n                    <TableBody>\n                      {props.session.fees.map(f => (\n                        <TableRow key={f.id}>\n                          <TableCell>{f.description} {f.optional && <span style={{color: '#808080'}}>(Optional)</span>}</TableCell>\n                          <TableCell>{f.feeType}</TableCell>\n                          <TableCell align=\"right\">\n                            {f.promotionalAmount > 0 ?\n                              <div>\n                                <span style={{textDecoration: 'line-through'}}>{currency(f.amount)}</span> &nbsp;\n                                <span style={{color: 'orange'}}>{currency(f.promotionalAmount)}</span>\n                              </div> :\n                              <span>{currency(f.amount)}</span>\n                            }\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n  \n                  <Container maxWidth={400}>\n                    <div style={{ fontSize: '9pt', color: '#808080', textAlign: 'center', paddingTop: 10 }}>\n                      <strong>Note: </strong> These fees are the training fees at the time the session was created, they might\n                      be different from the current training fees.\n                    </div>\n                  </Container>\n                </div> :\n                <div style={{ padding: 20 }}>No fees</div>\n              }\n            </Paper>\n  \n            <div>\n              <Button \n                size=\"large\" \n                variant=\"contained\" \n                color=\"secondary\"\n                style={{ marginTop: 15 }}\n                disabled={sending}\n                onClick={async () => {\n                  let messageBody = currentUser ? idBody({ name: currentUser.fullName, email: currentUser.email }) : idBody(applier)\n                  messageBody += sessionBody()\n                  if (currentUser) messageBody += '<p><h3>Profile details</h3> (Existing user)</p>'\n                  else messageBody += profileBody(applicationProfile)\n\n                  try {\n                    setSending(true)\n                    await sendMail({ \n                      subject: `Application form (${currentUser ? currentUser.fullName : applier.name})`, \n                      body: messageBody, \n                      to: applicationReceiver\n                    })\n                    goToStep('ApplicationConfirmation')\n                    resetApplicationData(client)\n                  } catch (ex) {\n                    let errorMessage = ex.message\n                    if (ex.response) errorMessage = JSON.stringify(ex.response.data.err)\n                    \n                    setAlertOptions({ \n                      open: true, \n                      level: 'error', \n                      message: `Could not send email: ${errorMessage}` })\n                  } finally {\n                    setSending(false)\n                    try {\n                      // send an email to the applier. If an error occured, do nothing.\n                      await sendMail({ \n                        subject: `Application form received (${currentUser ? currentUser.fullName : applier.name})`, \n                        body: messageBody, \n                        to: applier.email\n                      })\n                    } catch(ex) {/* Do nothing */}\n                  }\n                }}\n              >\n                {sending ? <CircularProgress /> : 'Apply'}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Container>\n    )\n  }\n  \n  function ApplicationConfirmationStep() {\n    return (\n      <div style={{ textAlign: 'center', margin: '50px 0px', fontSize: '10pt', color: '#808080' }}>\n        <img src=\"/images/success.png\" width=\"100\" height=\"100\" />\n        <br /><br />\n        <div>\n          Your application has been received and is being processed. We will contact you shortly.\n        </div>\n      </div>\n    )\n  }\n  \n  return (\n    <div className={classes.root}>\n      <Paper style={{ padding: 5 }}>\n        <Hidden smDown>\n          <Stepper activeStep={activeStep} alternativeLabel>\n            {steps.map(s =>\n              <Step key={s.id}>\n                <StepLabel>{s.caption}</StepLabel>\n              </Step>\n            )}\n          </Stepper>\n        </Hidden>\n\n        <Hidden mdUp>\n          <div style={{ textAlign: 'center' }}>\n            {step !== 'ApplicationConfirmation' ?\n              <span>Step {activeStep + 1} / {steps.length}</span> :\n              <span>Done</span>\n            }\n          </div>\n        </Hidden>\n      </Paper>\n\n      <div style={{ minHeight: 250 }}>\n        {step === 'ConfirmAccount' && <ConfirmAccountStep />}\n\n        {step === 'FillApplicationForm' &&\n          <FillApplicationFormStep\n            onSubmit={(data: IProfileData) => {\n              goToStep('ReviewProfileData')\n\n              client.writeQuery({\n                query: GET_APPLICATION_PROFILE_QUERY,\n                data: {\n                  applicationProfile: {\n                    __typename: 'ProfileData',\n                    ...data\n                  }\n                }\n              })\n            }}\n          /> \n        }\n\n        {step === 'ReviewProfileData' && <ReviewProfileDataStep />}\n        {step === 'ReviewTrainingSession' && <ReviewTrainingSessionStep />}\n        {step === 'ApplicationConfirmation' &&  <ApplicationConfirmationStep />}\n      </div>\n\n      <div>\n        {step !== 'ApplicationConfirmation' &&\n          <div className={classes.btnBar}>\n            <div className={classes.btnLeft}>\n              <Button variant=\"contained\" color=\"default\" disabled={activeStep === 0} onClick={handleBack}>Back</Button>\n            </div>\n\n            <div className={classes.btnRight}>\n              <Button \n                variant=\"contained\" \n                color=\"default\" \n                onClick={() => { resetApplicationData(client); props.handleCancel()}}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        }\n      </div>\n\n\n      <Alert \n        level={alertOptions.level}\n        message={alertOptions.message}\n        open={alertOptions.open}\n        onClose={() => setAlertOptions({ open: false, level: alertOptions.level, message: alertOptions.message })}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}