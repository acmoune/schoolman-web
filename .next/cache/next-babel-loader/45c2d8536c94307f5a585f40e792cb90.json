{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { gql } from 'apollo-boost';\nimport { apiServer } from '../app.config';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\nimport s3 from '../lib/s3';\nimport { currency } from '../lib/utilities';\nimport { Paper, Typography, Grid, Table, TableHead, TableBody, TableRow, TableCell, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Button } from '@material-ui/core';\nimport Container from '../components/Container';\nimport MainLayout from '../layouts/MainLayout';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { ProgramMini } from '../components/catalog/DepList';\n\nfunction Units(props) {\n  const classes = makeStyles(theme => createStyles({\n    root: {\n      marginTop: 20\n    },\n    heading: {\n      flexGrow: 1\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n  }))();\n  const [currPanelId, setCurrPanelId] = React.useState(-1);\n\n  const handleChange = id => event => {\n    if (id === currPanelId) setCurrPanelId(-1);else setCurrPanelId(id);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    style: {\n      color: '#248857',\n      marginBottom: 10\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, \"Units\")), props.units.length > 0 ? props.units.map(u => __jsx(ExpansionPanel, {\n    expanded: currPanelId === u.id,\n    onChange: handleChange(u.id),\n    key: u.id\n  }, __jsx(ExpansionPanelSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": `panel${u.id}`,\n    id: `panel${u.id}`\n  }, __jsx(Typography, {\n    className: classes.heading,\n    variant: \"inherit\"\n  }, u.title), __jsx(Typography, {\n    className: classes.secondaryHeading\n  }, u.optional ? 'Optional' : 'Required')), __jsx(ExpansionPanelDetails, null, __jsx(\"div\", {\n    style: {\n      flexGrow: 1\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: u.syllabus\n    }\n  }))))) : __jsx(\"span\", null, \"No Units\"));\n}\n\nfunction Plan(props) {\n  const router = useRouter();\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      paddingLeft: 15,\n      borderLeft: '1px solid #DFDFDF'\n    }\n  }, __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"h5\"\n  }, props.plan.title)), __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"caption\",\n    style: {\n      color: '#808080'\n    }\n  }, props.plan.description)), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Table, {\n    size: \"small\",\n    style: {\n      border: '1px solid #DFDFDF'\n    }\n  }, __jsx(TableBody, null, __jsx(TableRow, {\n    key: \"duration\"\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    style: {\n      color: '#808080'\n    }\n  }, \"Duration\"), __jsx(TableCell, {\n    align: \"right\"\n  }, props.plan.duration))))), __jsx(\"div\", {\n    style: {\n      color: '#808080',\n      marginTop: 15,\n      fontSize: '11pt'\n    }\n  }, \"Fees\"), props.plan.fees.length > 0 ? __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Table, {\n    size: \"small\",\n    style: {\n      border: '1px solid #DFDFDF'\n    }\n  }, __jsx(TableHead, {\n    style: {\n      backgroundColor: '#DFDFDF'\n    }\n  }, __jsx(TableRow, null, __jsx(TableCell, null, \"Description\"), __jsx(TableCell, null, \"Type\"), __jsx(TableCell, {\n    align: \"right\"\n  }, \"Amount\"))), __jsx(TableBody, null, props.plan.fees.map(f => __jsx(TableRow, {\n    key: f.id\n  }, __jsx(TableCell, null, f.description, \" \", f.optional && __jsx(\"span\", {\n    style: {\n      color: '#808080'\n    }\n  }, \"(Optional)\")), __jsx(TableCell, null, f.feeType), __jsx(TableCell, {\n    align: \"right\"\n  }, f.promotionalAmount > 0 ? __jsx(\"div\", null, __jsx(\"span\", {\n    style: {\n      textDecoration: 'line-through'\n    }\n  }, currency(f.amount)), \" \\xA0\", __jsx(\"span\", {\n    style: {\n      color: 'orange'\n    }\n  }, currency(f.promotionalAmount))) : __jsx(\"span\", null, currency(f.amount)))))))) : __jsx(\"span\", null, \"No fees\"), __jsx(\"div\", {\n    style: {\n      color: '#808080',\n      marginTop: 15,\n      fontSize: '11pt'\n    }\n  }, \"Current Sessions\"), props.plan.currentSessions.length > 0 ? __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Table, {\n    size: \"small\",\n    style: {\n      border: '1px solid #DFDFDF'\n    }\n  }, __jsx(TableHead, {\n    style: {\n      backgroundColor: '#DFDFDF'\n    }\n  }, __jsx(TableRow, null, __jsx(TableCell, null, \"Title\"), __jsx(TableCell, {\n    align: \"right\"\n  }, \"Start date\"), __jsx(TableCell, null, \"Status\"), __jsx(TableCell, null))), __jsx(TableBody, null, props.plan.currentSessions.map(s => __jsx(TableRow, {\n    key: s.id\n  }, __jsx(TableCell, null, s.title), __jsx(TableCell, {\n    align: \"right\"\n  }, s.startDate), __jsx(TableCell, null, s.status), __jsx(TableCell, {\n    align: \"right\"\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: () => router.push({\n      pathname: '/application',\n      query: {\n        tsId: s.id\n      }\n    })\n  }, \"Apply\"))))))) : __jsx(\"span\", null, \"There is no new session right now, we should schedule one shortly, please check again later\")));\n}\n\nfunction Plans(props) {\n  const classes = makeStyles(theme => createStyles({\n    root: {\n      marginTop: 20\n    },\n    planItem: {\n      fontSize: '11pt',\n      color: '#808080',\n      cursor: 'pointer',\n      padding: 5,\n      borderRadius: 3\n    },\n    selectedPlanItem: {\n      backgroundColor: '#DFDFDF'\n    }\n  }))();\n  const [currentPlanId, setCurrentPlanId] = React.useState(props.plans.length > 0 ? 0 : -1);\n\n  const handleClick = id => event => setCurrentPlanId(id);\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    style: {\n      color: '#248857',\n      marginBottom: 10\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, \"Plans\")), __jsx(Paper, {\n    style: {\n      padding: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, props.plans.map((p, i) => __jsx(\"div\", {\n    key: p.id,\n    className: `${classes.planItem} ${i === currentPlanId ? classes.selectedPlanItem : ''}`,\n    onClick: handleClick(i),\n    style: {\n      position: 'relative',\n      paddingRight: 22\n    }\n  }, p.title, p.currentSessions.length > 0 && __jsx(\"span\", {\n    style: {\n      fontSize: '8pt',\n      width: 16,\n      height: 16,\n      textAlign: 'center',\n      borderRadius: '50%',\n      backgroundColor: '#444444',\n      color: 'white',\n      position: 'absolute',\n      right: 5,\n      top: 7,\n      display: 'inline-block'\n    }\n  }, p.currentSessions.length)))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 8\n  }, currentPlanId !== -1 ? __jsx(Plan, {\n    plan: props.plans[currentPlanId]\n  }) : __jsx(\"span\", null, \"No plan selected\")))));\n}\n\nconst GET_ONE_TRAINING_QUERY = gql`\n  query getTrainingById($trainingId: ID!) {\n    training(trainingId: $trainingId) {\n      id\n      title\n      description\n      banner\n      link\n      requiredOptionalUnits\n      prerequisites\n      qualifications\n      units { id title syllabus optional }\n      plans {\n        id\n        title\n        description\n        duration\n        fees { id description feeType amount promotionalAmount optional }\n        currentSessions {\n          id\n          title\n          startDate\n          status\n          fees { id description feeType amount promotionalAmount optional }\n        }\n      }\n      program {id title logo }\n    }\n  }\n`;\n\nfunction TrainingPage(props) {\n  const t = props.training;\n  const banner = t.banner ? s3.getFileUrl(t.banner) : `${apiServer}/assets/images/trainings/no-banner.jpg`;\n  return __jsx(MainLayout, {\n    title: `${props.training.title} - Training -  IMIT`\n  }, __jsx(Container, null, __jsx(Paper, {\n    style: {\n      borderRadius: 0,\n      marginTop: 15\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/program\",\n      query: {\n        programId: t.program.id\n      }\n    },\n    passHref: true\n  }, __jsx(ProgramMini, {\n    program: t.program,\n    style: {\n      marginBottom: 0,\n      fontWeight: 'bold'\n    }\n  }))), __jsx(\"img\", {\n    src: banner,\n    alt: \"\",\n    style: {\n      width: '100%',\n      marginTop: 0\n    }\n  }), __jsx(Paper, {\n    style: {\n      padding: 15,\n      marginTop: 5\n    }\n  }, __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"h5\"\n  }, t.title)), __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"caption\",\n    style: {\n      color: '#808080'\n    }\n  }, t.description)), __jsx(\"div\", null, t.link ? __jsx(\"div\", null, __jsx(\"a\", {\n    href: t.link,\n    style: {\n      textDecoration: 'none',\n      fontSize: '8pt',\n      color: '#339967'\n    }\n  }, \"Official  vendor link\")) : null), __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    }\n  }, __jsx(Table, {\n    size: \"small\",\n    style: {\n      border: '1px solid #DFDFDF'\n    }\n  }, __jsx(TableBody, null, t.prerequisites && __jsx(TableRow, {\n    key: t.prerequisites\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    style: {\n      color: '#808080'\n    }\n  }, \"Prerequisites\"), __jsx(TableCell, {\n    align: \"right\"\n  }, t.prerequisites)), t.qualifications && __jsx(TableRow, {\n    key: t.qualifications\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    style: {\n      color: '#808080'\n    }\n  }, \"Qualifications\"), __jsx(TableCell, {\n    align: \"right\"\n  }, t.qualifications)), __jsx(TableRow, {\n    key: \"reqNum\"\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    style: {\n      color: '#808080'\n    }\n  }, \"Required number of optional units\"), __jsx(TableCell, {\n    align: \"right\"\n  }, t.requiredOptionalUnits || 0)))))), __jsx(Plans, {\n    plans: t.plans\n  }), __jsx(Units, {\n    units: t.units\n  })));\n}\n\nTrainingPage.getInitialProps = async ({\n  query,\n  apolloClient,\n  token\n}) => {\n  const {\n    data: {\n      training\n    }\n  } = await apolloClient.query({\n    query: GET_ONE_TRAINING_QUERY,\n    variables: {\n      trainingId: query.trainingId\n    },\n    context: {\n      headers: {\n        'schoolman_token': token\n      }\n    }\n  });\n  console.log(training.plans[0].fees);\n  return {\n    training,\n    authRequired: false\n  };\n};\n\nexport default withApollo(withAuth(TrainingPage));","map":{"version":3,"sources":["/data/apps/school-manager-client/pages/training.tsx"],"names":["React","Link","useRouter","gql","apiServer","withApollo","withAuth","s3","currency","Paper","Typography","Grid","Table","TableHead","TableBody","TableRow","TableCell","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Button","Container","MainLayout","ExpandMoreIcon","makeStyles","createStyles","ProgramMini","Units","props","classes","theme","root","marginTop","heading","flexGrow","secondaryHeading","fontSize","typography","pxToRem","color","palette","text","secondary","currPanelId","setCurrPanelId","useState","handleChange","id","event","marginBottom","units","length","map","u","title","optional","__html","syllabus","Plan","router","paddingLeft","borderLeft","plan","description","border","duration","fees","backgroundColor","f","feeType","promotionalAmount","textDecoration","amount","currentSessions","s","startDate","status","push","pathname","query","tsId","Plans","planItem","cursor","padding","borderRadius","selectedPlanItem","currentPlanId","setCurrentPlanId","plans","handleClick","p","i","position","paddingRight","width","height","textAlign","right","top","display","GET_ONE_TRAINING_QUERY","TrainingPage","t","training","banner","getFileUrl","programId","program","fontWeight","link","prerequisites","qualifications","requiredOptionalUnits","getInitialProps","apolloClient","token","data","variables","trainingId","context","headers","console","log","authRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport {useRouter} from 'next/router'\nimport { gql } from 'apollo-boost'\nimport { apiServer } from '../app.config'\nimport withApollo from '../lib/with-apollo'\nimport withAuth from '../lib/with-auth'\nimport s3 from '../lib/s3'\nimport { currency } from '../lib/utilities'\n\nimport {\n  Paper,\n  Typography,\n  Grid,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Button\n} from '@material-ui/core'\nimport Container from '../components/Container'\nimport MainLayout from '../layouts/MainLayout'\nimport ITraining from '../server/src/models/catalog/Training'\nimport ITrainingUnit from '../server/src/models/catalog/TrainingUnit'\nimport ITrainingPlan from '../server/src/models/catalog/TrainingPlan'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport {ProgramMini} from '../components/catalog/DepList'\n\nfunction Units(props: { units: ITrainingUnit[] }) {\n  const classes = makeStyles((theme: Theme) => createStyles({\n    root: { marginTop: 20 },\n    heading: {\n      flexGrow: 1\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n  }))()\n\n  const [currPanelId, setCurrPanelId] = React.useState<number>(-1)\n  const handleChange = (id: number) => (event: React.ChangeEvent<{}>) => {\n    if (id === currPanelId) setCurrPanelId(-1)\n    else setCurrPanelId(id)\n  }\n  \n  return (\n    <div className={classes.root}>\n      <div \n        style={{\n          color: '#248857', \n          marginBottom: 10\n        }}\n      >\n        <Typography variant=\"subtitle2\">Units</Typography>\n      </div>\n\n      {props.units.length > 0 ? \n        props.units.map(u =>\n          <ExpansionPanel expanded={currPanelId === u.id} onChange={handleChange(u.id)} key={u.id}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls={`panel${u.id}`} id={`panel${u.id}`}>\n              <Typography className={classes.heading} variant=\"inherit\">{u.title}</Typography>\n              <Typography className={classes.secondaryHeading}>{u.optional ? 'Optional' : 'Required'}</Typography>\n            </ExpansionPanelSummary>\n\n            <ExpansionPanelDetails>\n              <div style={{ flexGrow: 1 }}>\n                <div dangerouslySetInnerHTML={{ __html: u.syllabus }} />\n              </div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        ) :\n        <span>No Units</span>\n      }\n    </div>\n  )\n}\n\nfunction Plan(props: { plan: ITrainingPlan }) {\n  const router = useRouter()\n\n  return (\n    <div>\n      <div style={{ paddingLeft: 15, borderLeft: '1px solid #DFDFDF' }}>\n        <div><Typography variant=\"h5\">{props.plan.title}</Typography></div>\n        <div>\n          <Typography variant=\"caption\" style={{ color: '#808080' }}>{props.plan.description}</Typography>\n        </div>\n\n        <div style={{ marginTop: 10 }}>\n          <Table size=\"small\" style={{ border: '1px solid #DFDFDF' }}>\n            <TableBody>\n              <TableRow key=\"duration\">\n                <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Duration</TableCell>\n                <TableCell align=\"right\">{props.plan.duration}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </div>\n\n        <div style={{color: '#808080', marginTop: 15, fontSize: '11pt' }}>Fees</div>\n\n        {props.plan.fees.length > 0 ?\n          <div style={{ marginTop: 10 }}>\n            <Table size=\"small\" style={{ border: '1px solid #DFDFDF' }}>\n              <TableHead style={{ backgroundColor: '#DFDFDF' }}>\n                <TableRow>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Type</TableCell>\n                  <TableCell align=\"right\">Amount</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {props.plan.fees.map(f => (\n                  <TableRow key={f.id}>\n                    <TableCell>{f.description} {f.optional && <span style={{color: '#808080'}}>(Optional)</span>}</TableCell>\n                    <TableCell>{f.feeType}</TableCell>\n                    <TableCell align=\"right\">\n                      {f.promotionalAmount > 0 ?\n                        <div>\n                          <span style={{textDecoration: 'line-through'}}>{currency(f.amount)}</span> &nbsp;\n                          <span style={{color: 'orange'}}>{currency(f.promotionalAmount)}</span>\n                        </div> :\n                        <span>{currency(f.amount)}</span>\n                      }\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div> :\n          <span>No fees</span>\n        }\n\n        <div style={{color: '#808080', marginTop: 15, fontSize: '11pt'}}>Current Sessions</div>\n\n        {props.plan.currentSessions.length > 0 ?\n          <div style={{ marginTop: 10 }}>\n            <Table size=\"small\" style={{ border: '1px solid #DFDFDF' }}>\n              <TableHead style={{ backgroundColor: '#DFDFDF' }}>\n                <TableRow>\n                  <TableCell>Title</TableCell>\n                  <TableCell  align=\"right\">Start date</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell />\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {props.plan.currentSessions.map(s => (\n                  <TableRow key={s.id}>\n                    <TableCell>{s.title}</TableCell>\n                    <TableCell align=\"right\">{s.startDate}</TableCell>\n                    <TableCell>{s.status}</TableCell>\n                    <TableCell align=\"right\">\n                      <Button \n                        variant=\"contained\" \n                        color=\"secondary\" \n                        size=\"small\"\n                        onClick={() => router.push({ pathname: '/application', query: { tsId: s.id } })}\n                      >\n                        Apply\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div> :\n          <span>There is no new session right now, we should schedule one shortly, please check again later</span>\n        }\n      </div>\n    </div>\n  )\n}\n\nfunction Plans(props: { plans: ITrainingPlan[] }) {\n  const classes = makeStyles((theme: Theme) => createStyles({\n    root: { marginTop: 20 },\n    planItem: {\n      fontSize: '11pt',\n      color: '#808080',\n      cursor: 'pointer',\n      padding: 5,\n      borderRadius: 3\n    },\n    selectedPlanItem: {backgroundColor: '#DFDFDF'}\n  }))()\n\n  const [currentPlanId, setCurrentPlanId] = React.useState<number>(props.plans.length > 0 ? 0 : -1)\n  const handleClick = (id: number) => (event: React.ChangeEvent<{}>) =>\n    setCurrentPlanId(id)\n\n  return (\n    <div className={classes.root}>\n      <div style={{ color: '#248857', marginBottom: 10 }}>\n        <Typography variant=\"subtitle2\">Plans</Typography>\n      </div>\n      \n      <Paper style={{ padding: 15 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={4}>\n            {props.plans.map((p, i) => (\n              <div\n                key={p.id}\n                className={`${classes.planItem} ${i === currentPlanId ? classes.selectedPlanItem : ''}`}\n                onClick={handleClick(i)}\n                style={{position: 'relative', paddingRight: 22}}\n              >\n                {p.title}\n                \n                {p.currentSessions.length > 0  && (\n                  <span style={{fontSize: '8pt', width: 16, height: 16, textAlign: 'center', borderRadius: '50%', backgroundColor: '#444444', color: 'white', position: 'absolute', right: 5, top: 7, display: 'inline-block'}}>\n                    {p.currentSessions.length}\n                  </span>\n                )}\n              </div>\n            ))}\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            {(currentPlanId !== -1) ? \n              <Plan plan={props.plans[currentPlanId]} /> : \n              <span>No plan selected</span>\n            }\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  )\n}\n\nconst GET_ONE_TRAINING_QUERY = gql`\n  query getTrainingById($trainingId: ID!) {\n    training(trainingId: $trainingId) {\n      id\n      title\n      description\n      banner\n      link\n      requiredOptionalUnits\n      prerequisites\n      qualifications\n      units { id title syllabus optional }\n      plans {\n        id\n        title\n        description\n        duration\n        fees { id description feeType amount promotionalAmount optional }\n        currentSessions {\n          id\n          title\n          startDate\n          status\n          fees { id description feeType amount promotionalAmount optional }\n        }\n      }\n      program {id title logo }\n    }\n  }\n`\n\nfunction TrainingPage(props: { training: ITraining }) {\n\n  const t: ITraining = props.training\n  const banner = t.banner ? s3.getFileUrl(t.banner) : `${apiServer}/assets/images/trainings/no-banner.jpg`\n\n  return (\n    <MainLayout title={`${props.training.title} - Training -  IMIT`}>\n      <Container>\n        <Paper style={{borderRadius: 0, marginTop: 15}}>\n          <Link href={{ pathname: \"/program\", query: {programId: t.program.id} }} passHref>\n            <ProgramMini program={t.program} style={{ marginBottom: 0, fontWeight: 'bold' }} />\n          </Link>\n        </Paper>\n\n        <img src={banner} alt=\"\" style={{width: '100%', marginTop: 0}} />\n\n        <Paper style={{ padding: 15, marginTop: 5 }}>\n          <div><Typography variant=\"h5\">{t.title}</Typography></div>\n          <div>\n            <Typography variant=\"caption\" style={{ color: '#808080' }}>{t.description}</Typography>\n          </div>\n\n          <div>\n            {t.link ? \n              <div>\n                <a href={t.link} style={{textDecoration: 'none', fontSize: '8pt', color: '#339967'}}>\n                  Official  vendor link\n                </a>\n              </div> : \n              null\n            }\n          </div>\n\n          <div style={{ marginTop: 15 }}>\n            <Table size=\"small\" style={{ border: '1px solid #DFDFDF' }}>\n              <TableBody>\n                {t.prerequisites && (\n                  <TableRow key={t.prerequisites}>\n                    <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Prerequisites</TableCell>\n                    <TableCell align=\"right\">{t.prerequisites}</TableCell>\n                  </TableRow>\n                )}\n\n                {t.qualifications && (\n                  <TableRow key={t.qualifications}>\n                    <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Qualifications</TableCell>\n                    <TableCell align=\"right\">{t.qualifications}</TableCell>\n                  </TableRow>\n                )}\n\n                <TableRow key=\"reqNum\">\n                  <TableCell component=\"th\" scope=\"row\" style={{ color: '#808080' }}>Required number of optional units</TableCell>\n                  <TableCell align=\"right\">{t.requiredOptionalUnits || 0}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </div>\n        </Paper>\n\n        <Plans plans={t.plans} />\n        <Units units={t.units} />\n      </Container>\n    </MainLayout>\n  )\n}\n\nTrainingPage.getInitialProps = async ({ query, apolloClient, token }: any) => {\n  const { data: { training }} = await apolloClient.query({\n    query: GET_ONE_TRAINING_QUERY,\n    variables: { trainingId: query.trainingId },\n    context: { headers: { 'schoolman_token': token } }\n  })\n\n  console.log(training.plans[0].fees)\n\n  return ({ training, authRequired: false })\n}\n\nexport default withApollo(withAuth(TrainingPage))\n"]},"metadata":{},"sourceType":"module"}