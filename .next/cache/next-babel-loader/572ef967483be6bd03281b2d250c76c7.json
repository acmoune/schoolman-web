{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProfile($email: String!) {\\n    account(email: $email) {\\n      id\\n      email\\n      fullName\\n      profile {\\n        id birthDate birthPlace residence phoneNumber nationality\\n        nicNumber nicDateOfIssue nicPlaceOfIssue\\n        highestAcademicQualification yearOfIssue englishGradeInGCEOL mathematicsGradeInGCEOL\\n        professionalQualification employmentStatus jobTitle yearsOfExperience employerName employerAddress\\n        otherDetails\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getTrainingSession($trainingSessionId: ID!) {\\n    trainingSession(trainingSessionId: $trainingSessionId) {\\n      id\\n      title\\n      startDate\\n      status\\n      fees {id description amount feeType optional}\\n      plan {\\n        id\\n        title\\n        duration\\n        training {\\n          id\\n          title\\n          program {\\n            id\\n            title\\n            department { id title }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Container from '../components/Container';\nimport MainLayout from '../layouts/MainLayout';\nimport Router from 'next/router';\nimport ApplicationStepper from '../components/ApplicationStepper';\nimport { gql } from 'apollo-boost';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\nvar GET_SESSION_QUERY = gql(_templateObject());\n\nfunction ApplicationPage(_ref) {\n  var profile = _ref.profile,\n      tSession = _ref.tSession;\n\n  var handleCancel = function handleCancel() {\n    return Router.push({\n      pathname: '/training',\n      query: {\n        trainingId: tSession.plan.training.id\n      }\n    });\n  };\n\n  return __jsx(MainLayout, {\n    title: \"Applying for \".concat(tSession.plan.training.title, \" (\").concat(tSession.plan.title, \") - IMIT\")\n  }, __jsx(Container, null, __jsx(\"br\", null), __jsx(ApplicationStepper, {\n    handleCancel: handleCancel,\n    trainingTitle: tSession.plan.training.title,\n    programTitle: tSession.plan.training.program.title,\n    departmentTitle: tSession.plan.training.program.department.title,\n    planTitle: tSession.plan.title,\n    planDuration: tSession.plan.duration,\n    session: tSession,\n    profile: profile\n  })));\n}\n\nvar GET_PROFILE_QUERY = gql(_templateObject2());\n\nApplicationPage.getInitialProps = function _callee(_ref2) {\n  var query, apolloClient, token, currentUser, profile, _ref3, account, _ref4, trainingSession;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query, apolloClient = _ref2.apolloClient, token = _ref2.token, currentUser = _ref2.currentUser;\n          profile = null;\n\n          if (!currentUser) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_PROFILE_QUERY,\n            variables: {\n              email: currentUser.email\n            },\n            context: {\n              headers: {\n                'schoolman_token': token\n              }\n            }\n          }));\n\n        case 5:\n          _ref3 = _context.sent;\n          account = _ref3.data.account;\n          profile = account.profile;\n\n        case 8:\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_SESSION_QUERY,\n            variables: {\n              trainingSessionId: query.tsId\n            },\n            context: {\n              headers: {\n                'schoolman_token': token\n              }\n            }\n          }));\n\n        case 10:\n          _ref4 = _context.sent;\n          trainingSession = _ref4.data.trainingSession;\n          return _context.abrupt(\"return\", {\n            profile: profile,\n            tSession: trainingSession,\n            authReuired: true\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withApollo(withAuth(ApplicationPage));","map":null,"metadata":{},"sourceType":"module"}