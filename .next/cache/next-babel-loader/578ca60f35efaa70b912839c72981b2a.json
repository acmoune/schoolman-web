{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Alert from '../components/Alert';\nimport validator from 'validator';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Button } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Editor, EditorState, ContentState, convertToRaw, convertFromHTML, RichUtils } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\n\nfunction ProfileForm({\n  profile,\n  submitText,\n  onSubmit\n}) {\n  const classes = makeStyles(theme => createStyles({\n    fieldGroup: {\n      marginBottom: 25,\n      padding: 10\n    },\n    groupTitle: {\n      fontSize: '16pt',\n      color: '#808080',\n      paddingBottom: 5,\n      borderBottom: '1px solid #DFDFDF',\n      marginBottom: 15\n    },\n    field: {\n      marginBottom: 30\n    }\n  }))();\n  const {\n    0: inputErrors,\n    1: setInputErrors\n  } = useState({\n    birthDateErrors: [],\n    birthPlaceErrors: [],\n    residenceErrors: [],\n    phoneNumberErrors: [],\n    nationalityErrors: []\n  });\n  const {\n    0: alertOptions,\n    1: setAlertOptions\n  } = useState({\n    open: false,\n    level: 'info',\n    message: ''\n  });\n\n  function contentFrom(content) {\n    if (false) {\n      const {\n        contentBlocks,\n        entityMap\n      } = convertFromHTML(content);\n      return ContentState.createFromBlockArray(contentBlocks, entityMap);\n    }\n\n    return ContentState.createFromText(content);\n  } // Fields state variables\n\n\n  const {\n    0: birthDate,\n    1: setBirthDate\n  } = useState(profile && profile.birthDate ? new Date(profile.birthDate) : null);\n  const {\n    0: birthPlace,\n    1: setBirthPlace\n  } = useState(profile && profile.birthPlace ? profile.birthPlace : '');\n  const {\n    0: residence,\n    1: setResidence\n  } = useState(profile && profile.residence ? profile.residence : '');\n  const {\n    0: phoneNumber,\n    1: setPhoneNumber\n  } = useState(profile && profile.phoneNumber ? profile.phoneNumber : '');\n  const {\n    0: nationality,\n    1: setNationality\n  } = useState(profile && profile.nationality ? profile.nationality : '');\n  const {\n    0: nicNumber,\n    1: setNicNumber\n  } = useState(profile && profile.nicNumber ? profile.nicNumber : '');\n  const {\n    0: nicDateOfIssue,\n    1: setNicDateOfIssue\n  } = useState(profile && profile.nicDateOfIssue ? new Date(profile.nicDateOfIssue) : null);\n  const {\n    0: nicPlaceOfIssue,\n    1: setNicPlaceOfIssue\n  } = useState(profile && profile.nicPlaceOfIssue ? profile.nicPlaceOfIssue : '');\n  const {\n    0: highestAcademicQualification,\n    1: setHighestAcademicQualification\n  } = useState(profile && profile.highestAcademicQualification ? profile.highestAcademicQualification : '');\n  const {\n    0: yearOfIssue,\n    1: setYearOfIssue\n  } = useState(profile && profile.yearOfIssue ? profile.yearOfIssue : new Date().getFullYear());\n  const {\n    0: englishGradeInGCEOL,\n    1: setEnglishGradeInGCEOL\n  } = useState(profile && profile.englishGradeInGCEOL ? profile.englishGradeInGCEOL : '');\n  const {\n    0: mathematicsGradeInGCEOL,\n    1: setMathematicsGradeInGCEOL\n  } = useState(profile && profile.mathematicsGradeInGCEOL ? profile.mathematicsGradeInGCEOL : '');\n  const {\n    0: professionalQualification,\n    1: setProfessionalQualification\n  } = useState(profile && profile.professionalQualification ? profile.professionalQualification : '');\n  const {\n    0: employmentStatus,\n    1: setEmploymentStatus\n  } = useState(profile && profile.employmentStatus ? profile.employmentStatus : 'JobSeeker');\n  const {\n    0: jobTitle,\n    1: setJobTitle\n  } = useState(profile && profile.jobTitle ? profile.jobTitle : '');\n  const {\n    0: yearsOfExperience,\n    1: setYearsOfExperience\n  } = useState(profile && profile.yearsOfExperience ? profile.yearsOfExperience : 0);\n  const {\n    0: employerName,\n    1: setEmployerName\n  } = useState(profile && profile.employerName ? profile.employerName : '');\n  const {\n    0: employerAddress,\n    1: setEmployerAddress\n  } = useState(profile && profile.employerAddress ? profile.employerAddress : '');\n  const {\n    0: otherDetails,\n    1: setOtherDetails\n  } = useState(profile && profile.otherDetails ? EditorState.createWithContent(contentFrom(profile.otherDetails)) : EditorState.createEmpty());\n\n  const validateData = () => {\n    const birthDateErrors = [];\n    const birthPlaceErrors = [];\n    const residenceErrors = [];\n    const phoneNumberErrors = [];\n    const nationalityErrors = [];\n    if (!birthDate) birthDateErrors.push('Your birth day is required');\n    if (validator.isEmpty(birthPlace)) birthPlaceErrors.push('Your birth place is required');\n    if (validator.isEmpty(residence)) residenceErrors.push('Your residence is required');\n    if (validator.isEmpty(phoneNumber)) phoneNumberErrors.push('Your phone number is required');\n    if (validator.isEmpty(nationality)) nationalityErrors.push('Your nationality is required');\n    const isValid = birthDateErrors.length == 0 && birthPlaceErrors.length == 0 && residenceErrors.length == 0 && phoneNumberErrors.length == 0 && nationalityErrors.length == 0;\n    const errors = {\n      birthDateErrors,\n      birthPlaceErrors,\n      residenceErrors,\n      phoneNumberErrors,\n      nationalityErrors\n    };\n    return {\n      isValid,\n      errors\n    };\n  };\n\n  const submit = cb => {\n    const {\n      isValid,\n      errors\n    } = validateData();\n    setInputErrors(errors);\n    if (!isValid) return cb('Please enter valid inputs');\n    return cb('', {\n      birthDate: birthDate ? birthDate.toISOString() : null,\n      birthPlace,\n      residence,\n      phoneNumber,\n      nationality,\n      nicNumber,\n      nicDateOfIssue: nicDateOfIssue ? nicDateOfIssue.toISOString() : null,\n      nicPlaceOfIssue,\n      highestAcademicQualification,\n      yearOfIssue,\n      englishGradeInGCEOL,\n      mathematicsGradeInGCEOL,\n      professionalQualification,\n      employmentStatus,\n      jobTitle,\n      yearsOfExperience,\n      employerName,\n      employerAddress,\n      otherDetails: draftToHtml(convertToRaw(otherDetails.getCurrentContent()))\n    });\n  };\n\n  function onChange(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      setOtherDetails(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      textAlign: 'left'\n    }\n  }, __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Personal Information\"), __jsx(\"div\", null, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils\n  }, __jsx(DatePicker, {\n    className: classes.field,\n    autoOk: true,\n    fullWidth: true,\n    format: \"MM/dd/yyyy\",\n    variant: \"inline\",\n    id: \"birthDate\",\n    label: \"Birthdate\",\n    value: birthDate,\n    onChange: setBirthDate,\n    error: inputErrors.birthDateErrors.length > 0,\n    helperText: inputErrors.birthDateErrors.join(', ')\n  })), __jsx(TextField, {\n    className: classes.field,\n    id: \"birthPlace\",\n    name: \"birthPlace\",\n    label: \"Birth place\",\n    fullWidth: true,\n    value: birthPlace,\n    onChange: e => setBirthPlace(e.target.value),\n    error: inputErrors.birthPlaceErrors.length > 0,\n    helperText: inputErrors.birthPlaceErrors.join(', ')\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"residence\",\n    name: \"residence\",\n    label: \"Residence\",\n    fullWidth: true,\n    value: residence,\n    onChange: e => setResidence(e.target.value),\n    error: inputErrors.residenceErrors.length > 0,\n    helperText: inputErrors.residenceErrors.join(', ')\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"phoneNumber\",\n    name: \"phoneNumber\",\n    label: \"Phone number\",\n    fullWidth: true,\n    value: phoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    error: inputErrors.phoneNumberErrors.length > 0,\n    helperText: inputErrors.phoneNumberErrors.join(', ')\n  }), __jsx(TextField, {\n    id: \"nationality\",\n    name: \"nationality\",\n    label: \"Nationality\",\n    fullWidth: true,\n    value: nationality,\n    onChange: e => setNationality(e.target.value),\n    error: inputErrors.nationalityErrors.length > 0,\n    helperText: inputErrors.nationalityErrors.join(', ')\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Identification\"), __jsx(\"div\", null, __jsx(TextField, {\n    className: classes.field,\n    id: \"nicNumber\",\n    name: \"nicNumber\",\n    label: \"Id Card number\",\n    fullWidth: true,\n    value: nicNumber,\n    onChange: e => setNicNumber(e.target.value)\n  }), __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils\n  }, __jsx(DatePicker, {\n    className: classes.field,\n    autoOk: true,\n    clearable: true,\n    format: \"MM/dd/yyyy\",\n    color: \"secondary\",\n    variant: \"inline\",\n    fullWidth: true,\n    id: \"nicDateOfIssue\",\n    label: \"Date of issue\",\n    value: nicDateOfIssue,\n    onChange: setNicDateOfIssue\n  })), __jsx(TextField, {\n    id: \"nicPlaceOfIssue\",\n    name: \"nicPlaceOfIssue\",\n    label: \"Place of issue\",\n    fullWidth: true,\n    value: nicPlaceOfIssue,\n    onChange: e => setNicPlaceOfIssue(e.target.value)\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Academic Details\"), __jsx(\"div\", null, __jsx(TextField, {\n    className: classes.field,\n    id: \"highestAcademicQualification\",\n    name: \"highestAcademicQualification\",\n    label: \"Highest academic qualification\",\n    fullWidth: true,\n    value: highestAcademicQualification,\n    onChange: e => setHighestAcademicQualification(e.target.value)\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"yearOfIssue\",\n    name: \"yearOfIssue\",\n    label: \"Year of issue\",\n    type: \"number\",\n    fullWidth: true,\n    value: yearOfIssue,\n    onChange: e => setYearOfIssue(_parseInt(e.target.value, 10))\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"englishGradeInGCEOL\",\n    name: \"englishGradeInGCEOL\",\n    label: \"English grade in GCEOL\",\n    fullWidth: true,\n    value: englishGradeInGCEOL,\n    onChange: e => setEnglishGradeInGCEOL(e.target.value)\n  }), __jsx(TextField, {\n    id: \"mathematicsGradeInGCEOL\",\n    name: \"mathematicsGradeInGCEOL\",\n    label: \"Mathematics grade in GCEOL\",\n    fullWidth: true,\n    value: mathematicsGradeInGCEOL,\n    onChange: e => setMathematicsGradeInGCEOL(e.target.value)\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Professional Details\"), __jsx(\"div\", null, __jsx(TextField, {\n    className: classes.field,\n    id: \"professionalQualification\",\n    name: \"professionalQualification\",\n    label: \"Professional qualification\",\n    fullWidth: true,\n    value: professionalQualification,\n    onChange: e => setProfessionalQualification(e.target.value)\n  }), __jsx(FormControl, {\n    component: \"fieldset\",\n    style: {\n      margin: '20px 0px'\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    style: {\n      fontSize: '9pt',\n      marginBottom: 10\n    }\n  }, \"Employment status\"), __jsx(RadioGroup, {\n    \"aria-label\": \"gender\",\n    name: \"employmentStatus\",\n    value: employmentStatus,\n    onChange: e => setEmploymentStatus(e.target.value)\n  }, __jsx(FormControlLabel, {\n    value: \"Employee\",\n    control: __jsx(Radio, null),\n    label: \"Employee\",\n    style: {\n      marginLeft: 5\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"SelfEmployed\",\n    control: __jsx(Radio, null),\n    label: \"Self employed\",\n    style: {\n      marginLeft: 5\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"JobSeeker\",\n    control: __jsx(Radio, null),\n    label: \"Job seeker\",\n    style: {\n      marginLeft: 5\n    }\n  }))), __jsx(TextField, {\n    className: classes.field,\n    id: \"jobTitle\",\n    name: \"jobTitle\",\n    label: \"Job Title\",\n    fullWidth: true,\n    value: jobTitle,\n    onChange: e => setJobTitle(e.target.value)\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"yearsOfExperience\",\n    name: \"yearsOfExperience\",\n    label: \"Years of experience\",\n    type: \"number\",\n    fullWidth: true,\n    value: yearsOfExperience,\n    onChange: e => setYearsOfExperience(_parseInt(e.target.value, 10))\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"employerName\",\n    name: \"employerName\",\n    label: \"Employer\",\n    fullWidth: true,\n    value: employerName,\n    onChange: e => setEmployerName(e.target.value)\n  }), __jsx(TextField, {\n    id: \"employerAddress\",\n    name: \"employerAddress\",\n    label: \"Employer Address\",\n    fullWidth: true,\n    value: employerAddress,\n    onChange: e => setEmployerAddress(e.target.value)\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Other Details\"), __jsx(\"div\", {\n    style: {\n      fontSize: '9pt',\n      color: '#808080',\n      marginBottom: 10\n    }\n  }, \"Please provide additional details here, anything that is valuable for you. For example, if you already have records with Cisco, ACCA, CIPS, or whichever program you want to apply for, kindly provide references here.\"), __jsx(\"div\", {\n    style: {\n      border: '1px solid #DFDFDF',\n      padding: 5,\n      borderRadius: 5\n    }\n  }, false && __jsx(Editor, {\n    editorState: otherDetails,\n    onChange: editorState => setOtherDetails(editorState),\n    handleKeyCommand: onChange\n  }))), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => submit((errMessage, data) => {\n      if (errMessage) return setAlertOptions({\n        open: true,\n        level: 'error',\n        message: errMessage\n      });\n      if (data) return onSubmit(data);\n      return;\n    })\n  }, `${submitText || 'Save'}`)), __jsx(Alert, {\n    level: alertOptions.level,\n    message: alertOptions.message,\n    open: alertOptions.open,\n    onClose: () => setAlertOptions({\n      open: false,\n      level: alertOptions.level,\n      message: alertOptions.message\n    })\n  }));\n}\n\nexport default ProfileForm;","map":{"version":3,"sources":["/data/apps/school-manager-client/components/ProfileForm.tsx"],"names":["React","useState","Alert","validator","makeStyles","createStyles","Paper","TextField","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Button","DatePicker","MuiPickersUtilsProvider","DateFnsUtils","Editor","EditorState","ContentState","convertToRaw","convertFromHTML","RichUtils","draftToHtml","ProfileForm","profile","submitText","onSubmit","classes","theme","fieldGroup","marginBottom","padding","groupTitle","fontSize","color","paddingBottom","borderBottom","field","inputErrors","setInputErrors","birthDateErrors","birthPlaceErrors","residenceErrors","phoneNumberErrors","nationalityErrors","alertOptions","setAlertOptions","open","level","message","contentFrom","content","contentBlocks","entityMap","createFromBlockArray","createFromText","birthDate","setBirthDate","Date","birthPlace","setBirthPlace","residence","setResidence","phoneNumber","setPhoneNumber","nationality","setNationality","nicNumber","setNicNumber","nicDateOfIssue","setNicDateOfIssue","nicPlaceOfIssue","setNicPlaceOfIssue","highestAcademicQualification","setHighestAcademicQualification","yearOfIssue","setYearOfIssue","getFullYear","englishGradeInGCEOL","setEnglishGradeInGCEOL","mathematicsGradeInGCEOL","setMathematicsGradeInGCEOL","professionalQualification","setProfessionalQualification","employmentStatus","setEmploymentStatus","jobTitle","setJobTitle","yearsOfExperience","setYearsOfExperience","employerName","setEmployerName","employerAddress","setEmployerAddress","otherDetails","setOtherDetails","createWithContent","createEmpty","validateData","push","isEmpty","isValid","length","errors","submit","cb","toISOString","getCurrentContent","onChange","command","editorState","newState","handleKeyCommand","textAlign","join","e","target","value","margin","marginLeft","border","borderRadius","errMessage","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Alert, { AlertOptions } from '../components/Alert'\nimport { IProfileData } from '../server/src/models/accounts/AccountProfile'\nimport validator from 'validator'\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles'\nimport { Paper, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Button } from '@material-ui/core'\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\nimport { \n  Editor, \n  EditorState, \n  ContentState, \n  convertToRaw,\n  convertFromHTML,\n  RichUtils\n} from 'draft-js'\nimport draftToHtml from 'draftjs-to-html'\n\n\ntype InputErrors = {\n  birthDateErrors: string[],\n  birthPlaceErrors: string[],\n  residenceErrors: string[],\n  phoneNumberErrors: string[],\n  nationalityErrors: string[]\n}\n\ntype Props = {\n  profile?: IProfileData,\n  submitText?: string,\n  onSubmit: (data: IProfileData) => any\n}\n\nfunction ProfileForm({ profile, submitText, onSubmit }: Props) {\n  const classes = makeStyles((theme: Theme) => createStyles({\n    fieldGroup: {\n      marginBottom: 25,\n      padding: 10\n    },\n  \n    groupTitle: {\n      fontSize: '16pt',\n      color: '#808080',\n      paddingBottom: 5,\n      borderBottom: '1px solid #DFDFDF',\n      marginBottom: 15\n    },\n  \n    field: {\n      marginBottom: 30\n    }\n  }))()\n\n  const [inputErrors, setInputErrors] = useState<InputErrors>({\n    birthDateErrors: [],\n    birthPlaceErrors: [],\n    residenceErrors: [],\n    phoneNumberErrors: [],\n    nationalityErrors: []\n  })\n  const [alertOptions, setAlertOptions] = useState<AlertOptions>({ open: false, level: 'info', message: '' })\n\n  function contentFrom(content: string): ContentState {\n    if (typeof window !== 'undefined') {\n      const { contentBlocks, entityMap } = convertFromHTML(content)\n      return ContentState.createFromBlockArray(contentBlocks, entityMap)\n    }\n    return ContentState.createFromText(content)\n  }\n\n  // Fields state variables\n  const [birthDate, setBirthDate] = useState<Date | null>(profile && profile.birthDate ? new Date(profile.birthDate) :  null)\n  const [birthPlace, setBirthPlace] = useState<string>(profile && profile.birthPlace ? profile.birthPlace : '')\n  const [residence, setResidence] = useState<string>(profile && profile.residence ? profile.residence : '')\n  const [phoneNumber, setPhoneNumber] = useState<string>(profile && profile.phoneNumber ? profile.phoneNumber : '')\n  const [nationality, setNationality] = useState<string>(profile && profile.nationality ? profile.nationality : '')\n  const [nicNumber, setNicNumber] = useState<string>(profile && profile.nicNumber ? profile.nicNumber : '')\n  const [nicDateOfIssue, setNicDateOfIssue] = useState<Date | null>(profile && profile.nicDateOfIssue ? new Date(profile.nicDateOfIssue) : null)\n  const [nicPlaceOfIssue, setNicPlaceOfIssue] = useState<string>(profile && profile.nicPlaceOfIssue ? profile.nicPlaceOfIssue : '')\n  const [highestAcademicQualification, setHighestAcademicQualification] = useState<string>(profile && profile.highestAcademicQualification ? profile.highestAcademicQualification : '')\n  const [yearOfIssue, setYearOfIssue] = useState<number>(profile && profile.yearOfIssue ? profile.yearOfIssue : new Date().getFullYear())\n  const [englishGradeInGCEOL, setEnglishGradeInGCEOL] = useState<string>(profile && profile.englishGradeInGCEOL ? profile.englishGradeInGCEOL : '')\n  const [mathematicsGradeInGCEOL, setMathematicsGradeInGCEOL] = useState<string>(profile && profile.mathematicsGradeInGCEOL ? profile.mathematicsGradeInGCEOL : '')\n  const [professionalQualification, setProfessionalQualification] = useState<string>(profile && profile.professionalQualification ? profile.professionalQualification : '')\n  const [employmentStatus, setEmploymentStatus] = useState<string>(profile && profile.employmentStatus ? profile.employmentStatus : 'JobSeeker')\n  const [jobTitle, setJobTitle] = useState<string>(profile && profile.jobTitle ? profile.jobTitle : '')\n  const [yearsOfExperience, setYearsOfExperience] = useState<number>(profile && profile.yearsOfExperience ? profile.yearsOfExperience : 0)\n  const [employerName, setEmployerName] = useState<string>(profile && profile.employerName ? profile.employerName : '')\n  const [employerAddress, setEmployerAddress] = useState<string>(profile && profile.employerAddress ? profile.employerAddress : '')\n  const [otherDetails, setOtherDetails] = useState<EditorState>(profile && profile.otherDetails ? EditorState.createWithContent(contentFrom(profile.otherDetails)) : EditorState.createEmpty())\n\n  const validateData = (): { isValid: boolean, errors: InputErrors } => {\n    const birthDateErrors: string[] = []\n    const birthPlaceErrors: string[] = []\n    const residenceErrors: string[] = []\n    const phoneNumberErrors: string[] = []\n    const nationalityErrors: string[] = []\n\n    if (!birthDate) birthDateErrors.push('Your birth day is required')\n    if (validator.isEmpty(birthPlace)) birthPlaceErrors.push('Your birth place is required')\n    if (validator.isEmpty(residence)) residenceErrors.push('Your residence is required')\n    if (validator.isEmpty(phoneNumber)) phoneNumberErrors.push('Your phone number is required')\n    if (validator.isEmpty(nationality)) nationalityErrors.push('Your nationality is required')\n\n    const isValid = \n      birthDateErrors.length == 0 && \n      birthPlaceErrors.length == 0 && \n      residenceErrors.length == 0 &&\n      phoneNumberErrors.length == 0 &&\n      nationalityErrors.length == 0\n    \n    const errors = { birthDateErrors, birthPlaceErrors, residenceErrors, phoneNumberErrors, nationalityErrors }\n    \n    return ({ isValid, errors })\n  }\n\n  const submit = (cb: (errMessage: string, data?: any) => any) => {\n    const { isValid, errors } = validateData()\n    setInputErrors(errors)\n\n    if (!isValid) return cb('Please enter valid inputs')\n\n    return cb('', {\n      birthDate: birthDate ? birthDate.toISOString() : null,  \n      birthPlace, \n      residence, \n      phoneNumber, \n      nationality,\n      nicNumber, \n      nicDateOfIssue: nicDateOfIssue ? nicDateOfIssue.toISOString() : null, \n      nicPlaceOfIssue,\n      highestAcademicQualification,\n      yearOfIssue,\n      englishGradeInGCEOL,\n      mathematicsGradeInGCEOL,\n      professionalQualification,\n      employmentStatus,\n      jobTitle,\n      yearsOfExperience,\n      employerName,\n      employerAddress,\n      otherDetails: draftToHtml(convertToRaw(otherDetails.getCurrentContent()))\n    })\n  }\n\n  function onChange(command: any, editorState: EditorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command)\n    if (newState) {\n      setOtherDetails(newState)\n      return 'handled'\n    }\n    return 'not-handled'\n  }\n\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Personal Information</div>\n        <div>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              className={classes.field}\n              autoOk\n              fullWidth\n              format=\"MM/dd/yyyy\"\n              variant=\"inline\"\n              id=\"birthDate\"\n              label=\"Birthdate\"\n              value={birthDate}\n              onChange={setBirthDate}\n              error={inputErrors.birthDateErrors.length > 0}\n              helperText={inputErrors.birthDateErrors.join(', ')}\n            />\n          </MuiPickersUtilsProvider>\n\n          <TextField\n            className={classes.field}\n            id=\"birthPlace\"\n            name=\"birthPlace\"\n            label=\"Birth place\"\n            fullWidth\n            value={birthPlace}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setBirthPlace(e.target.value)}\n            error={inputErrors.birthPlaceErrors.length > 0}\n            helperText={inputErrors.birthPlaceErrors.join(', ')}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"residence\"\n            name=\"residence\"\n            label=\"Residence\"\n            fullWidth\n            value={residence}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setResidence(e.target.value)}\n            error={inputErrors.residenceErrors.length > 0}\n            helperText={inputErrors.residenceErrors.join(', ')}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            label=\"Phone number\"\n            fullWidth\n            value={phoneNumber}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPhoneNumber(e.target.value)}\n            error={inputErrors.phoneNumberErrors.length > 0}\n            helperText={inputErrors.phoneNumberErrors.join(', ')}\n          />\n\n          <TextField\n            id=\"nationality\"\n            name=\"nationality\"\n            label=\"Nationality\"\n            fullWidth\n            value={nationality}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNationality(e.target.value)}\n            error={inputErrors.nationalityErrors.length > 0}\n            helperText={inputErrors.nationalityErrors.join(', ')}\n          />\n        </div>\n      </Paper>\n\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Identification</div>\n        <div>\n          <TextField\n            className={classes.field}\n            id=\"nicNumber\"\n            name=\"nicNumber\"\n            label=\"Id Card number\"\n            fullWidth\n            value={nicNumber}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNicNumber(e.target.value)}\n          />\n\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              className={classes.field}\n              autoOk\n              clearable\n              format=\"MM/dd/yyyy\"\n              color=\"secondary\"\n              variant=\"inline\"\n              fullWidth\n              id=\"nicDateOfIssue\"\n              label=\"Date of issue\"\n              value={nicDateOfIssue}\n              onChange={setNicDateOfIssue}\n            />\n          </MuiPickersUtilsProvider>\n\n          <TextField\n            id=\"nicPlaceOfIssue\"\n            name=\"nicPlaceOfIssue\"\n            label=\"Place of issue\"\n            fullWidth\n            value={nicPlaceOfIssue}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNicPlaceOfIssue(e.target.value)}\n          />\n        </div>\n      </Paper>\n    \n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Academic Details</div>\n        <div>\n          <TextField\n            className={classes.field}\n            id=\"highestAcademicQualification\"\n            name=\"highestAcademicQualification\"\n            label=\"Highest academic qualification\"\n            fullWidth\n            value={highestAcademicQualification}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setHighestAcademicQualification(e.target.value)}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"yearOfIssue\"\n            name=\"yearOfIssue\"\n            label=\"Year of issue\"\n            type=\"number\"\n            fullWidth\n            value={yearOfIssue}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setYearOfIssue(parseInt(e.target.value, 10))}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"englishGradeInGCEOL\"\n            name=\"englishGradeInGCEOL\"\n            label=\"English grade in GCEOL\"\n            fullWidth\n            value={englishGradeInGCEOL}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEnglishGradeInGCEOL(e.target.value)}\n          />\n\n          <TextField\n            id=\"mathematicsGradeInGCEOL\"\n            name=\"mathematicsGradeInGCEOL\"\n            label=\"Mathematics grade in GCEOL\"\n            fullWidth\n            value={mathematicsGradeInGCEOL}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setMathematicsGradeInGCEOL(e.target.value)}\n          />\n        </div>\n      </Paper>\n\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Professional Details</div>\n        <div>\n          <TextField\n            className={classes.field}\n            id=\"professionalQualification\"\n            name=\"professionalQualification\"\n            label=\"Professional qualification\"\n            fullWidth\n            value={professionalQualification}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setProfessionalQualification(e.target.value)}\n          />\n\n          <FormControl component=\"fieldset\" style={{ margin: '20px 0px'}}>\n            <FormLabel component=\"legend\" style={{ fontSize: '9pt', marginBottom: 10 }}>Employment status</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\" \n              name=\"employmentStatus\" \n              value={employmentStatus} \n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmploymentStatus(e.target.value)}\n            >\n              <FormControlLabel value=\"Employee\" control={<Radio />} label=\"Employee\" style={{ marginLeft: 5 }} />\n              <FormControlLabel value=\"SelfEmployed\" control={<Radio />} label=\"Self employed\" style={{ marginLeft: 5 }} />\n              <FormControlLabel value=\"JobSeeker\" control={<Radio />} label=\"Job seeker\" style={{ marginLeft: 5 }} />\n            </RadioGroup>\n          </FormControl>\n\n          <TextField\n            className={classes.field}\n            id=\"jobTitle\"\n            name=\"jobTitle\"\n            label=\"Job Title\"\n            fullWidth\n            value={jobTitle}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setJobTitle(e.target.value)}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"yearsOfExperience\"\n            name=\"yearsOfExperience\"\n            label=\"Years of experience\"\n            type=\"number\"\n            fullWidth\n            value={yearsOfExperience}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setYearsOfExperience(parseInt(e.target.value, 10))}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"employerName\"\n            name=\"employerName\"\n            label=\"Employer\"\n            fullWidth\n            value={employerName}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmployerName(e.target.value)}\n          />\n\n          <TextField\n            id=\"employerAddress\"\n            name=\"employerAddress\"\n            label=\"Employer Address\"\n            fullWidth\n            value={employerAddress}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmployerAddress(e.target.value)}\n          />\n        </div>\n      </Paper>\n\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Other Details</div>\n        <div style={{ fontSize: '9pt', color: '#808080', marginBottom: 10 }}>\n          Please provide additional details here, anything that is valuable for you. For example, if \n          you already have records with Cisco, ACCA, CIPS, or whichever program you want to apply for, \n          kindly provide references here.\n        </div>\n\n        <div style={{ border: '1px solid #DFDFDF', padding: 5, borderRadius: 5 }}>\n          {(typeof window !== 'undefined') &&\n            <Editor\n              editorState={otherDetails}\n              onChange={(editorState: EditorState) => setOtherDetails(editorState)}\n              handleKeyCommand={onChange}\n            />\n          }\n        </div>\n      </Paper>\n    \n      <div style={{ textAlign: 'center' }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => submit((errMessage, data) => {\n            if (errMessage) return setAlertOptions({ open: true, level: 'error', message: errMessage })\n            if (data) return onSubmit(data)\n            return;\n          })}\n        >\n          {`${submitText || 'Save'}`}\n        </Button>\n      </div>\n\n      <Alert \n        level={alertOptions.level}\n        message={alertOptions.message}\n        open={alertOptions.open}\n        onClose={() => setAlertOptions({ open: false, level: alertOptions.level, message: alertOptions.message })}\n      />\n    </div>\n  )\n}\n\nexport default ProfileForm\n"]},"metadata":{},"sourceType":"module"}