{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Alert from '../components/Alert';\nimport validator from 'validator';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Button } from '@material-ui/core';\n\nfunction ApplierForm(_ref) {\n  var data = _ref.data,\n      onSubmit = _ref.onSubmit;\n  var classes = makeStyles(function (theme) {\n    return createStyles({\n      fieldGroup: {\n        marginBottom: 25,\n        padding: 10\n      },\n      groupTitle: {\n        fontSize: '12pt',\n        color: '#808080',\n        paddingBottom: 5,\n        borderBottom: '1px solid #DFDFDF',\n        fontWeight: 'bold',\n        marginBottom: 15\n      },\n      field: {\n        marginBottom: 30\n      }\n    });\n  })();\n\n  var _useState = useState({\n    nameErrors: [],\n    emailErrors: []\n  }),\n      inputErrors = _useState[0],\n      setInputErrors = _useState[1];\n\n  var _useState2 = useState({\n    open: false,\n    level: 'info',\n    message: ''\n  }),\n      alertOptions = _useState2[0],\n      setAlertOptions = _useState2[1]; // Fields state variables\n\n\n  var _useState3 = useState(data.name),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var _useState4 = useState(data.email),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var validateData = function validateData() {\n    var nameErrors = [];\n    var emailErrors = [];\n    if (validator.isEmpty(name)) nameErrors.push('Your name is required');\n    if (validator.isEmpty(email)) emailErrors.push('Your email is required');\n    var isValid = nameErrors.length == 0 && emailErrors.length == 0;\n    var errors = {\n      nameErrors: nameErrors,\n      emailErrors: emailErrors\n    };\n    return {\n      isValid: isValid,\n      errors: errors\n    };\n  };\n\n  var submit = function submit(cb) {\n    var _validateData = validateData(),\n        isValid = _validateData.isValid,\n        errors = _validateData.errors;\n\n    setInputErrors(errors);\n    if (!isValid) return cb('Please enter valid inputs');\n    return cb('', {\n      name: name,\n      email: email\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      textAlign: 'left'\n    }\n  }, __jsx(Paper, {\n    className: classes.fieldGroup\n  }, __jsx(\"div\", {\n    className: classes.groupTitle\n  }, \"Provide your name and email\"), __jsx(\"div\", null, __jsx(TextField, {\n    className: classes.field,\n    id: \"name\",\n    name: \"name\",\n    label: \"Full Name\",\n    fullWidth: true,\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    error: inputErrors.nameErrors.length > 0,\n    helperText: inputErrors.nameErrors.join(', ')\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    fullWidth: true,\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    error: inputErrors.emailErrors.length > 0,\n    helperText: inputErrors.emailErrors.join(', ')\n  }))), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      return submit(function (errMessage, data) {\n        if (errMessage) return setAlertOptions({\n          open: true,\n          level: 'error',\n          message: errMessage\n        });\n        if (data) return onSubmit(data);\n        return;\n      });\n    }\n  }, \"Save and Fill application form\")), __jsx(Alert, {\n    level: alertOptions.level,\n    message: alertOptions.message,\n    open: alertOptions.open,\n    onClose: function onClose() {\n      return setAlertOptions({\n        open: false,\n        level: alertOptions.level,\n        message: alertOptions.message\n      });\n    }\n  }));\n}\n\nexport default ApplierForm;","map":null,"metadata":{},"sourceType":"module"}