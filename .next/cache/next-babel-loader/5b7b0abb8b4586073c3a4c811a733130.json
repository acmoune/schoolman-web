{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/data/apps/opensource/SchoolMan/web-client/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getDepartments {\\n    departments {\\n      id\\n      title\\n      programs {\\n        id \\n        title \\n        description \\n        logo \\n        link \\n        trainings { id title description banner link }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport Container from '../components/Container';\nimport MainLayout from '../layouts/MainLayout';\nimport DepartmentList from '../components/catalog/DepartmentList';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\nimport { gql } from 'apollo-boost';\nimport { Typography } from '@material-ui/core';\nvar GET_DEPARTMENTS_QUERY = gql(_templateObject());\n\nfunction IndexPage(_ref) {\n  var departments = _ref.departments;\n  return __jsx(MainLayout, {\n    title: \"Institute of Management and Information Technology - IMIT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"/images/banner.jpg\",\n    alt: \"\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    color: \"primary\",\n    style: {\n      textAlign: 'center',\n      marginTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"All Training Programs\"), __jsx(DepartmentList, {\n    departments: departments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n}\n\nIndexPage.getInitialProps = function _callee(_ref2) {\n  var apolloClient, token, _ref3, departments;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          apolloClient = _ref2.apolloClient, token = _ref2.token;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_DEPARTMENTS_QUERY,\n            context: {\n              headers: {\n                'schoolman_token': token\n              }\n            }\n          }));\n\n        case 3:\n          _ref3 = _context.sent;\n          departments = _ref3.data.departments;\n          return _context.abrupt(\"return\", {\n            departments: departments,\n            authRequired: false\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withApollo(withAuth(IndexPage));","map":{"version":3,"sources":["/data/apps/opensource/SchoolMan/web-client/pages/index.tsx"],"names":["React","Container","MainLayout","DepartmentList","withApollo","withAuth","gql","Typography","GET_DEPARTMENTS_QUERY","IndexPage","departments","width","textAlign","marginTop","getInitialProps","apolloClient","token","query","context","headers","data","authRequired"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,IAAMC,qBAAqB,GAAGF,GAAH,mBAA3B;;AAiBA,SAASG,SAAT,OAAoE;AAAA,MAA/CC,WAA+C,QAA/CA,WAA+C;AAClE,SACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,2DAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,oBAAT;AAA8B,IAAA,GAAG,EAAC,EAAlC;AAAqC,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,SAAS,EAAE;AAAlC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAGE,MAAC,cAAD;AAAgB,IAAA,WAAW,EAAEH,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHF,CADF;AAWD;;AAEDD,SAAS,CAACK,eAAV,GAA4B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,YAAT,SAASA,YAAT,EAAuBC,KAAvB,SAAuBA,KAAvB;AAAA;AAAA,2CACaD,YAAY,CAACE,KAAb,CAAmB;AACxDA,YAAAA,KAAK,EAAET,qBADiD;AAExDU,YAAAA,OAAO,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAE,mCAAmBH;AAArB;AAAX;AAF+C,WAAnB,CADb;;AAAA;AAAA;AACVN,UAAAA,WADU,SAClBU,IADkB,CACVV,WADU;AAAA,2CAMlB;AAAEA,YAAAA,WAAW,EAAXA,WAAF;AAAeW,YAAAA,YAAY,EAAE;AAA7B,WANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AASA,eAAejB,UAAU,CAACC,QAAQ,CAACI,SAAD,CAAT,CAAzB","sourcesContent":["import * as React from 'react'\nimport Container from '../components/Container'\nimport MainLayout from '../layouts/MainLayout'\nimport DepartmentList from '../components/catalog/DepartmentList'\nimport withApollo from '../lib/with-apollo'\nimport withAuth from '../lib/with-auth'\nimport { gql } from 'apollo-boost'\nimport IDepartment from '../server/src/models/catalog/Department'\nimport { Typography } from '@material-ui/core'\n\nconst GET_DEPARTMENTS_QUERY = gql`\n  query getDepartments {\n    departments {\n      id\n      title\n      programs {\n        id \n        title \n        description \n        logo \n        link \n        trainings { id title description banner link }\n      }\n    }\n  }\n`\n\nfunction IndexPage({ departments }: { departments: IDepartment[] }) {\n  return (\n    <MainLayout title=\"Institute of Management and Information Technology - IMIT\">\n      <img src=\"/images/banner.jpg\" alt=\"\" style={{width: '100%'}} />\n\n      <Container>\n        <Typography variant=\"h4\" color=\"primary\" style={{ textAlign: 'center', marginTop: 30 }}>All Training Programs</Typography>\n\n        <DepartmentList departments={departments} />\n      </Container>\n    </MainLayout>\n  )\n}\n\nIndexPage.getInitialProps = async ({ apolloClient, token }: any) => {\n  const { data: { departments }} = await apolloClient.query({\n    query: GET_DEPARTMENTS_QUERY,\n    context: { headers: { 'schoolman_token': token } }\n  })\n\n  return ({ departments, authRequired: false })\n}\n\nexport default withApollo(withAuth(IndexPage))\n"]},"metadata":{},"sourceType":"module"}