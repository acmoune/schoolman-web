{"ast":null,"code":"var _jsxFileName = \"/data/apps/opensource/SchoolMan/web-client/components/ProfileForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Alert from '../components/Alert';\nimport validator from 'validator';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Button } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Editor, EditorState, ContentState, convertToRaw, convertFromHTML, RichUtils } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\n\nfunction ProfileForm(_ref) {\n  var profile = _ref.profile,\n      submitText = _ref.submitText,\n      onSubmit = _ref.onSubmit;\n  var classes = makeStyles(function (theme) {\n    return createStyles({\n      fieldGroup: {\n        marginBottom: 25,\n        padding: 10\n      },\n      groupTitle: {\n        fontSize: '16pt',\n        color: '#808080',\n        paddingBottom: 5,\n        borderBottom: '1px solid #DFDFDF',\n        marginBottom: 15\n      },\n      field: {\n        marginBottom: 30\n      }\n    });\n  })();\n\n  var _useState = useState({\n    birthDateErrors: [],\n    birthPlaceErrors: [],\n    residenceErrors: [],\n    phoneNumberErrors: [],\n    nationalityErrors: []\n  }),\n      inputErrors = _useState[0],\n      setInputErrors = _useState[1];\n\n  var _useState2 = useState({\n    open: false,\n    level: 'info',\n    message: ''\n  }),\n      alertOptions = _useState2[0],\n      setAlertOptions = _useState2[1];\n\n  function contentFrom(content) {\n    if (true) {\n      var _convertFromHTML = convertFromHTML(content),\n          contentBlocks = _convertFromHTML.contentBlocks,\n          entityMap = _convertFromHTML.entityMap;\n\n      return ContentState.createFromBlockArray(contentBlocks, entityMap);\n    }\n\n    return ContentState.createFromText(content);\n  } // Fields state variables\n\n\n  var _useState3 = useState(profile && profile.birthDate ? new Date(profile.birthDate) : null),\n      birthDate = _useState3[0],\n      setBirthDate = _useState3[1];\n\n  var _useState4 = useState(profile && profile.birthPlace ? profile.birthPlace : ''),\n      birthPlace = _useState4[0],\n      setBirthPlace = _useState4[1];\n\n  var _useState5 = useState(profile && profile.residence ? profile.residence : ''),\n      residence = _useState5[0],\n      setResidence = _useState5[1];\n\n  var _useState6 = useState(profile && profile.phoneNumber ? profile.phoneNumber : ''),\n      phoneNumber = _useState6[0],\n      setPhoneNumber = _useState6[1];\n\n  var _useState7 = useState(profile && profile.nationality ? profile.nationality : ''),\n      nationality = _useState7[0],\n      setNationality = _useState7[1];\n\n  var _useState8 = useState(profile && profile.otherDetails ? EditorState.createWithContent(contentFrom(profile.otherDetails)) : EditorState.createEmpty()),\n      otherDetails = _useState8[0],\n      setOtherDetails = _useState8[1];\n\n  var validateData = function validateData() {\n    var birthDateErrors = [];\n    var birthPlaceErrors = [];\n    var residenceErrors = [];\n    var phoneNumberErrors = [];\n    var nationalityErrors = [];\n    if (!birthDate) birthDateErrors.push('Your birth day is required');\n    if (validator.isEmpty(birthPlace)) birthPlaceErrors.push('Your birth place is required');\n    if (validator.isEmpty(residence)) residenceErrors.push('Your residence is required');\n    if (validator.isEmpty(phoneNumber)) phoneNumberErrors.push('Your phone number is required');\n    if (validator.isEmpty(nationality)) nationalityErrors.push('Your nationality is required');\n    var isValid = birthDateErrors.length == 0 && birthPlaceErrors.length == 0 && residenceErrors.length == 0 && phoneNumberErrors.length == 0 && nationalityErrors.length == 0;\n    var errors = {\n      birthDateErrors: birthDateErrors,\n      birthPlaceErrors: birthPlaceErrors,\n      residenceErrors: residenceErrors,\n      phoneNumberErrors: phoneNumberErrors,\n      nationalityErrors: nationalityErrors\n    };\n    return {\n      isValid: isValid,\n      errors: errors\n    };\n  };\n\n  var submit = function submit(cb) {\n    var _validateData = validateData(),\n        isValid = _validateData.isValid,\n        errors = _validateData.errors;\n\n    setInputErrors(errors);\n    if (!isValid) return cb('Please enter valid inputs');\n    return cb('', {\n      birthDate: birthDate ? birthDate.toISOString() : null,\n      birthPlace: birthPlace,\n      residence: residence,\n      phoneNumber: phoneNumber,\n      nationality: nationality,\n      otherDetails: draftToHtml(convertToRaw(otherDetails.getCurrentContent()))\n    });\n  };\n\n  function onChange(command, editorState) {\n    var newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      setOtherDetails(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.fieldGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.groupTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Personal Information\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(DatePicker, {\n    className: classes.field,\n    autoOk: true,\n    fullWidth: true,\n    format: \"MM/dd/yyyy\",\n    variant: \"inline\",\n    id: \"birthDate\",\n    label: \"Birthdate\",\n    value: birthDate,\n    onChange: setBirthDate,\n    error: inputErrors.birthDateErrors.length > 0,\n    helperText: inputErrors.birthDateErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), __jsx(TextField, {\n    className: classes.field,\n    id: \"birthPlace\",\n    name: \"birthPlace\",\n    label: \"Birth place\",\n    fullWidth: true,\n    value: birthPlace,\n    onChange: function onChange(e) {\n      return setBirthPlace(e.target.value);\n    },\n    error: inputErrors.birthPlaceErrors.length > 0,\n    helperText: inputErrors.birthPlaceErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"residence\",\n    name: \"residence\",\n    label: \"Residence\",\n    fullWidth: true,\n    value: residence,\n    onChange: function onChange(e) {\n      return setResidence(e.target.value);\n    },\n    error: inputErrors.residenceErrors.length > 0,\n    helperText: inputErrors.residenceErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.field,\n    id: \"phoneNumber\",\n    name: \"phoneNumber\",\n    label: \"Phone number\",\n    fullWidth: true,\n    value: phoneNumber,\n    onChange: function onChange(e) {\n      return setPhoneNumber(e.target.value);\n    },\n    error: inputErrors.phoneNumberErrors.length > 0,\n    helperText: inputErrors.phoneNumberErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"nationality\",\n    name: \"nationality\",\n    label: \"Nationality\",\n    fullWidth: true,\n    value: nationality,\n    onChange: function onChange(e) {\n      return setNationality(e.target.value);\n    },\n    error: inputErrors.nationalityErrors.length > 0,\n    helperText: inputErrors.nationalityErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }))), __jsx(Paper, {\n    className: classes.fieldGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.groupTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Other Details\"), __jsx(\"div\", {\n    style: {\n      fontSize: '9pt',\n      color: '#808080',\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Please provide additional details here, anything that is valuable for you. For example, if you already have records with Cisco, ACCA, CIPS, or whichever program you want to apply for, kindly provide references here.\"), __jsx(\"div\", {\n    style: {\n      border: '1px solid #DFDFDF',\n      padding: 5,\n      borderRadius: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, true && __jsx(Editor, {\n    editorState: otherDetails,\n    onChange: function onChange(editorState) {\n      return setOtherDetails(editorState);\n    },\n    handleKeyCommand: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      return submit(function (errMessage, data) {\n        if (errMessage) return setAlertOptions({\n          open: true,\n          level: 'error',\n          message: errMessage\n        });\n        if (data) return onSubmit(data);\n        return;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"\".concat(submitText || 'Save'))), __jsx(Alert, {\n    level: alertOptions.level,\n    message: alertOptions.message,\n    open: alertOptions.open,\n    onClose: function onClose() {\n      return setAlertOptions({\n        open: false,\n        level: alertOptions.level,\n        message: alertOptions.message\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }));\n}\n\nexport default ProfileForm;","map":{"version":3,"sources":["/data/apps/opensource/SchoolMan/web-client/components/ProfileForm.tsx"],"names":["React","useState","Alert","validator","makeStyles","createStyles","Paper","TextField","Button","DatePicker","MuiPickersUtilsProvider","DateFnsUtils","Editor","EditorState","ContentState","convertToRaw","convertFromHTML","RichUtils","draftToHtml","ProfileForm","profile","submitText","onSubmit","classes","theme","fieldGroup","marginBottom","padding","groupTitle","fontSize","color","paddingBottom","borderBottom","field","birthDateErrors","birthPlaceErrors","residenceErrors","phoneNumberErrors","nationalityErrors","inputErrors","setInputErrors","open","level","message","alertOptions","setAlertOptions","contentFrom","content","contentBlocks","entityMap","createFromBlockArray","createFromText","birthDate","Date","setBirthDate","birthPlace","setBirthPlace","residence","setResidence","phoneNumber","setPhoneNumber","nationality","setNationality","otherDetails","createWithContent","createEmpty","setOtherDetails","validateData","push","isEmpty","isValid","length","errors","submit","cb","toISOString","getCurrentContent","onChange","command","editorState","newState","handleKeyCommand","textAlign","join","e","target","value","border","borderRadius","errMessage","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Alert, { AlertOptions } from '../components/Alert'\nimport { IProfileData } from '../server/src/models/accounts/AccountProfile'\nimport validator from 'validator'\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles'\nimport { Paper, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Button } from '@material-ui/core'\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\nimport { \n  Editor, \n  EditorState, \n  ContentState, \n  convertToRaw,\n  convertFromHTML,\n  RichUtils\n} from 'draft-js'\nimport draftToHtml from 'draftjs-to-html'\n\n\ntype InputErrors = {\n  birthDateErrors: string[],\n  birthPlaceErrors: string[],\n  residenceErrors: string[],\n  phoneNumberErrors: string[],\n  nationalityErrors: string[]\n}\n\ntype Props = {\n  profile?: IProfileData,\n  submitText?: string,\n  onSubmit: (data: IProfileData) => any\n}\n\nfunction ProfileForm({ profile, submitText, onSubmit }: Props) {\n  const classes = makeStyles((theme: Theme) => createStyles({\n    fieldGroup: {\n      marginBottom: 25,\n      padding: 10\n    },\n  \n    groupTitle: {\n      fontSize: '16pt',\n      color: '#808080',\n      paddingBottom: 5,\n      borderBottom: '1px solid #DFDFDF',\n      marginBottom: 15\n    },\n  \n    field: {\n      marginBottom: 30\n    }\n  }))()\n\n  const [inputErrors, setInputErrors] = useState<InputErrors>({\n    birthDateErrors: [],\n    birthPlaceErrors: [],\n    residenceErrors: [],\n    phoneNumberErrors: [],\n    nationalityErrors: []\n  })\n  const [alertOptions, setAlertOptions] = useState<AlertOptions>({ open: false, level: 'info', message: '' })\n\n  function contentFrom(content: string): ContentState {\n    if (typeof window !== 'undefined') {\n      const { contentBlocks, entityMap } = convertFromHTML(content)\n      return ContentState.createFromBlockArray(contentBlocks, entityMap)\n    }\n    return ContentState.createFromText(content)\n  }\n\n  // Fields state variables\n  const [birthDate, setBirthDate] = useState<Date | null>(profile && profile.birthDate ? new Date(profile.birthDate) :  null)\n  const [birthPlace, setBirthPlace] = useState<string>(profile && profile.birthPlace ? profile.birthPlace : '')\n  const [residence, setResidence] = useState<string>(profile && profile.residence ? profile.residence : '')\n  const [phoneNumber, setPhoneNumber] = useState<string>(profile && profile.phoneNumber ? profile.phoneNumber : '')\n  const [nationality, setNationality] = useState<string>(profile && profile.nationality ? profile.nationality : '')\n  const [otherDetails, setOtherDetails] = useState<EditorState>(profile && profile.otherDetails ? EditorState.createWithContent(contentFrom(profile.otherDetails)) : EditorState.createEmpty())\n\n  const validateData = (): { isValid: boolean, errors: InputErrors } => {\n    const birthDateErrors: string[] = []\n    const birthPlaceErrors: string[] = []\n    const residenceErrors: string[] = []\n    const phoneNumberErrors: string[] = []\n    const nationalityErrors: string[] = []\n\n    if (!birthDate) birthDateErrors.push('Your birth day is required')\n    if (validator.isEmpty(birthPlace)) birthPlaceErrors.push('Your birth place is required')\n    if (validator.isEmpty(residence)) residenceErrors.push('Your residence is required')\n    if (validator.isEmpty(phoneNumber)) phoneNumberErrors.push('Your phone number is required')\n    if (validator.isEmpty(nationality)) nationalityErrors.push('Your nationality is required')\n\n    const isValid = \n      birthDateErrors.length == 0 && \n      birthPlaceErrors.length == 0 && \n      residenceErrors.length == 0 &&\n      phoneNumberErrors.length == 0 &&\n      nationalityErrors.length == 0\n    \n    const errors = { birthDateErrors, birthPlaceErrors, residenceErrors, phoneNumberErrors, nationalityErrors }\n    \n    return ({ isValid, errors })\n  }\n\n  const submit = (cb: (errMessage: string, data?: any) => any) => {\n    const { isValid, errors } = validateData()\n    setInputErrors(errors)\n\n    if (!isValid) return cb('Please enter valid inputs')\n\n    return cb('', {\n      birthDate: birthDate ? birthDate.toISOString() : null,  \n      birthPlace, \n      residence, \n      phoneNumber, \n      nationality,\n      otherDetails: draftToHtml(convertToRaw(otherDetails.getCurrentContent()))\n    })\n  }\n\n  function onChange(command: any, editorState: EditorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command)\n    if (newState) {\n      setOtherDetails(newState)\n      return 'handled'\n    }\n    return 'not-handled'\n  }\n\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Personal Information</div>\n        <div>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              className={classes.field}\n              autoOk\n              fullWidth\n              format=\"MM/dd/yyyy\"\n              variant=\"inline\"\n              id=\"birthDate\"\n              label=\"Birthdate\"\n              value={birthDate}\n              onChange={setBirthDate}\n              error={inputErrors.birthDateErrors.length > 0}\n              helperText={inputErrors.birthDateErrors.join(', ')}\n            />\n          </MuiPickersUtilsProvider>\n\n          <TextField\n            className={classes.field}\n            id=\"birthPlace\"\n            name=\"birthPlace\"\n            label=\"Birth place\"\n            fullWidth\n            value={birthPlace}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setBirthPlace(e.target.value)}\n            error={inputErrors.birthPlaceErrors.length > 0}\n            helperText={inputErrors.birthPlaceErrors.join(', ')}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"residence\"\n            name=\"residence\"\n            label=\"Residence\"\n            fullWidth\n            value={residence}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setResidence(e.target.value)}\n            error={inputErrors.residenceErrors.length > 0}\n            helperText={inputErrors.residenceErrors.join(', ')}\n          />\n\n          <TextField\n            className={classes.field}\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            label=\"Phone number\"\n            fullWidth\n            value={phoneNumber}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPhoneNumber(e.target.value)}\n            error={inputErrors.phoneNumberErrors.length > 0}\n            helperText={inputErrors.phoneNumberErrors.join(', ')}\n          />\n\n          <TextField\n            id=\"nationality\"\n            name=\"nationality\"\n            label=\"Nationality\"\n            fullWidth\n            value={nationality}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNationality(e.target.value)}\n            error={inputErrors.nationalityErrors.length > 0}\n            helperText={inputErrors.nationalityErrors.join(', ')}\n          />\n        </div>\n      </Paper>\n\n      <Paper className={classes.fieldGroup}>\n        <div className={classes.groupTitle}>Other Details</div>\n        <div style={{ fontSize: '9pt', color: '#808080', marginBottom: 10 }}>\n          Please provide additional details here, anything that is valuable for you. For example, if \n          you already have records with Cisco, ACCA, CIPS, or whichever program you want to apply for, \n          kindly provide references here.\n        </div>\n\n        <div style={{ border: '1px solid #DFDFDF', padding: 5, borderRadius: 5 }}>\n          {(typeof window !== 'undefined') &&\n            <Editor\n              editorState={otherDetails}\n              onChange={(editorState: EditorState) => setOtherDetails(editorState)}\n              handleKeyCommand={onChange}\n            />\n          }\n        </div>\n      </Paper>\n    \n      <div style={{ textAlign: 'center' }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => submit((errMessage, data) => {\n            if (errMessage) return setAlertOptions({ open: true, level: 'error', message: errMessage })\n            if (data) return onSubmit(data)\n            return;\n          })}\n        >\n          {`${submitText || 'Save'}`}\n        </Button>\n      </div>\n\n      <Alert \n        level={alertOptions.level}\n        message={alertOptions.message}\n        open={alertOptions.open}\n        onClose={() => setAlertOptions({ open: false, level: alertOptions.level, message: alertOptions.message })}\n      />\n    </div>\n  )\n}\n\nexport default ProfileForm\n"]},"metadata":{},"sourceType":"module"}