{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProfile($email: String!) {\\n    account(email: $email) {\\n      id\\n      email\\n      fullName\\n      profile {\\n        id birthDate birthPlace residence phoneNumber nationality\\n        nicNumber nicDateOfIssue nicPlaceOfIssue\\n        highestAcademicQualification yearOfIssue englishGradeInGCEOL mathematicsGradeInGCEOL\\n        professionalQualification employmentStatus jobTitle yearsOfExperience employerName employerAddress\\n        otherDetails\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { AuthProvider } from '../components/AuthContext';\nimport jwtDecode from 'jwt-decode';\nimport { gql } from 'apollo-boost';\nimport axios from 'axios';\nimport { getCookieFromBrowser, getCookieFromServer } from '../lib/cookie';\nimport { authCookieName, apiBaseUrl } from '../app.config';\nimport Router from 'next/router';\nvar GET_PROFILE_QUERY = gql(_templateObject());\nexport default function withAuth(PageComponent) {\n  var getToken = function getToken(req) {\n    return false ? getCookieFromServer(authCookieName, req) : getCookieFromBrowser(authCookieName);\n  };\n\n  var WithAuth = function WithAuth(_ref) {\n    var currentUser = _ref.currentUser,\n        pageProps = _objectWithoutProperties(_ref, [\"currentUser\"]);\n\n    return __jsx(AuthProvider, {\n      currentUser: currentUser\n    }, __jsx(PageComponent, pageProps));\n  };\n\n  WithAuth.getInitialProps = function _callee(ctx) {\n    var token, currentUser, isValid, _ref2, account, pageProps, _pageProps, authRequired;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = getToken(ctx.req);\n            currentUser = undefined;\n\n            if (!token) {\n              _context.next = 18;\n              break;\n            }\n\n            isValid = false;\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(\"\".concat(apiBaseUrl, \"/validateToken\"), {\n              token: token\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 7:\n            isValid = true;\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](4);\n\n          case 12:\n            if (!isValid) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(ctx.apolloClient.query({\n              query: GET_PROFILE_QUERY,\n              variables: {\n                email: jwtDecode(token).ema\n              },\n              context: {\n                headers: {\n                  'schoolman_token': token\n                }\n              }\n            }));\n\n          case 15:\n            _ref2 = _context.sent;\n            account = _ref2.data.account;\n            currentUser = account;\n\n          case 18:\n            // add token and currentUser to context, so they can be used in PageComponent.getInitialProps\n            ctx.token = token;\n            ctx.currentUser = currentUser;\n            pageProps = {};\n\n            if (!PageComponent.getInitialProps) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 24;\n            return _regeneratorRuntime.awrap(PageComponent.getInitialProps(ctx));\n\n          case 24:\n            pageProps = _context.sent;\n\n          case 25:\n            _pageProps = pageProps, authRequired = _pageProps.authRequired;\n\n            if (authRequired && !currentUser) {\n              if (false) ctx.res.redirect('/signIn');else Router.push('/signIn');\n            }\n\n            return _context.abrupt(\"return\", _objectSpread({\n              currentUser: currentUser\n            }, pageProps));\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 10]]);\n  };\n\n  return WithAuth;\n}","map":{"version":3,"sources":["/data/apps/school-manager-client/lib/with-auth.jsx"],"names":["React","AuthProvider","jwtDecode","gql","axios","getCookieFromBrowser","getCookieFromServer","authCookieName","apiBaseUrl","Router","GET_PROFILE_QUERY","withAuth","PageComponent","getToken","req","WithAuth","currentUser","pageProps","getInitialProps","ctx","token","undefined","isValid","post","headers","apolloClient","query","variables","email","ema","context","account","data","authRequired","res","redirect","push"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { AuthProvider } from '../components/AuthContext'\nimport jwtDecode from 'jwt-decode'\nimport { gql } from 'apollo-boost'\nimport axios from 'axios'\nimport { getCookieFromBrowser, getCookieFromServer } from '../lib/cookie'\nimport { authCookieName, apiBaseUrl } from '../app.config'\nimport Router from 'next/router'\n\nconst GET_PROFILE_QUERY = gql`\n  query getProfile($email: String!) {\n    account(email: $email) {\n      id\n      email\n      fullName\n      profile {\n        id birthDate birthPlace residence phoneNumber nationality\n        nicNumber nicDateOfIssue nicPlaceOfIssue\n        highestAcademicQualification yearOfIssue englishGradeInGCEOL mathematicsGradeInGCEOL\n        professionalQualification employmentStatus jobTitle yearsOfExperience employerName employerAddress\n        otherDetails\n      }\n    }\n  }\n`\n\nexport default function withAuth(PageComponent) {\n\n  const getToken = (req) => \n    typeof window === 'undefined' ? getCookieFromServer(authCookieName, req) : getCookieFromBrowser(authCookieName)\n\n  const WithAuth = ({ currentUser, ...pageProps }) => {\n    return (\n      <AuthProvider currentUser={currentUser}>\n        <PageComponent {...pageProps} />\n      </AuthProvider>\n    )\n  }\n\n  WithAuth.getInitialProps = async ctx => {\n    const token = getToken(ctx.req)\n    let currentUser = undefined\n\n    if (token) {\n      let isValid = false\n\n      try {\n        await axios.post(`${apiBaseUrl}/validateToken`, { token }, { headers: { 'Content-Type': 'application/json' } })\n        isValid = true\n      } catch (ex) {}\n\n      if (isValid) {\n        const { data: { account }} = await ctx.apolloClient.query({\n          query: GET_PROFILE_QUERY,\n          variables: { email: jwtDecode(token).ema },\n          context: { headers: { 'schoolman_token': token } }\n        })\n        currentUser = account\n      }\n    }\n\n    // add token and currentUser to context, so they can be used in PageComponent.getInitialProps\n    ctx.token = token\n    ctx.currentUser = currentUser\n\n    let pageProps = {}\n    if (PageComponent.getInitialProps) pageProps = await PageComponent.getInitialProps(ctx)\n\n    const { authRequired } = pageProps\n\n    if (authRequired && !currentUser) {\n      if (typeof window === 'undefined') ctx.res.redirect('/signIn')\n      else Router.push('/signIn')\n    }\n\n    return { currentUser, ...pageProps }\n  }\n\n  return WithAuth\n}\n"]},"metadata":{},"sourceType":"module"}