{"ast":null,"code":"var _jsxFileName = \"/data/apps/opensource/SchoolMan/web-client/components/Alert.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { amber, green, lightBlue } from '@material-ui/core/colors';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction Alert({\n  level,\n  message,\n  open,\n  onClose\n}) {\n  const classes = makeStyles(theme => ({\n    success: {\n      backgroundColor: green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: lightBlue[700]\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    icon: {\n      fontSize: 20\n    }\n  }))();\n  return __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: open,\n    onClose: () => onClose(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(SnackbarContent, {\n    className: classes[level],\n    \"aria-describedby\": \"client-snackbar\",\n    message: __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, message),\n    action: [__jsx(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: () => onClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n}\n\nexport default Alert;","map":{"version":3,"sources":["/data/apps/opensource/SchoolMan/web-client/components/Alert.tsx"],"names":["React","Snackbar","SnackbarContent","IconButton","makeStyles","amber","green","lightBlue","CloseIcon","Alert","level","message","open","onClose","classes","theme","success","backgroundColor","error","palette","dark","info","warning","icon","fontSize","vertical","horizontal"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,UAApC,QAAsD,mBAAtD;AACA,SAASC,UAAT,QAAkC,0BAAlC;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,SAAvB,QAAwC,0BAAxC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAKA,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,IAAlB;AAAwBC,EAAAA;AAAxB,CAAf,EAAuH;AACrH,QAAMC,OAAO,GAAGV,UAAU,CAAEW,KAAD,KAAmB;AAC5CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAEX,KAAK,CAAC,GAAD;AADf,KADmC;AAI5CY,IAAAA,KAAK,EAAE;AACLD,MAAAA,eAAe,EAAEF,KAAK,CAACI,OAAN,CAAcD,KAAd,CAAoBE;AADhC,KAJqC;AAO5CC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,eAAe,EAAEV,SAAS,CAAC,GAAD;AADtB,KAPsC;AAU5Ce,IAAAA,OAAO,EAAE;AACPL,MAAAA,eAAe,EAAEZ,KAAK,CAAC,GAAD;AADf,KAVmC;AAa5CkB,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN;AAbsC,GAAnB,CAAD,CAAV,EAAhB;AAmBA,SACE,MAAC,QAAD;AACE,IAAA,YAAY,EAAE;AAAEC,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KADhB;AAEE,IAAA,IAAI,EAAEd,IAFR;AAGE,IAAA,OAAO,EAAE,MAAMC,OAAO,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,eAAD;AACE,IAAA,SAAS,EAAEC,OAAO,CAACJ,KAAD,CADpB;AAEE,wBAAiB,iBAFnB;AAGE,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,OAAP,CAHX;AAIE,IAAA,MAAM,EAAE,CACN,MAAC,UAAD;AAAY,MAAA,GAAG,EAAC,OAAhB;AAAwB,oBAAW,OAAnC;AAA2C,MAAA,KAAK,EAAC,SAAjD;AAA2D,MAAA,OAAO,EAAE,MAAME,OAAO,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,SAAS,EAAEC,OAAO,CAACS,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADM,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAkBD;;AAED,eAAed,KAAf","sourcesContent":["import * as React from 'react'\nimport { Snackbar, SnackbarContent, IconButton } from '@material-ui/core'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { amber, green, lightBlue } from '@material-ui/core/colors'\nimport CloseIcon from '@material-ui/icons/Close'\n\nexport type Level = 'success' | 'error' | 'info' | 'warning'\nexport type AlertOptions = { open: boolean, level: Level, message: string }\n\nfunction Alert({ level, message, open, onClose }: { level: Level, message: string, open: boolean, onClose: Function }) {\n  const classes = makeStyles((theme: Theme) => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: lightBlue[700],\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 20,\n    }\n  }))()\n\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      open={open}\n      onClose={() => onClose()}\n    >\n      <SnackbarContent\n        className={classes[level]}\n        aria-describedby=\"client-snackbar\"\n        message={<span>{message}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={() => onClose()}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>\n        ]}\n      />\n    </Snackbar>\n  )\n}\n\nexport default Alert\n"]},"metadata":{},"sourceType":"module"}