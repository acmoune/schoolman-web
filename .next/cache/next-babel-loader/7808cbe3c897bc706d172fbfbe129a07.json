{"ast":null,"code":"var _jsxFileName = \"/data/apps/school-manager-client/pages/editProfile.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport MainLayout from '../layouts/MainLayout';\nimport ProfileForm from '../components/ProfileForm';\nimport { useAuth } from '../components/AuthContext';\nimport Container from '../components/Container';\nimport { Typography } from '@material-ui/core';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Router from 'next/router';\nimport Alert from '../components/Alert';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\nconst UPDATE_PROFILE_MUTATION = gql`\n  mutation updateProfile($accountId: ID!, $profileId: ID!, $data: ProfileDataInput!) {\n    updateProfile(accountId: $accountId, profileId: $profileId, data: $data) {\n      id birthDate birthPlace residence phoneNumber nationality\n      nicNumber nicDateOfIssue nicPlaceOfIssue\n      highestAcademicQualification yearOfIssue englishGradeInGCEOL mathematicsGradeInGCEOL\n      professionalQualification employmentStatus jobTitle yearsOfExperience employerName employerAddress\n      otherDetails\n    }\n  }\n`;\n\nfunction EditProfile() {\n  const {\n    currentUser\n  } = useAuth();\n  const [updateProfile, _] = useMutation(UPDATE_PROFILE_MUTATION);\n  const {\n    0: alertOptions,\n    1: setAlertOptions\n  } = useState({\n    open: false,\n    level: 'info',\n    message: ''\n  });\n  return __jsx(MainLayout, {\n    title: \"Edit Profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, currentUser && __jsx(Container, {\n    maxWidth: 600,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"textSecondary\",\n    style: {\n      textAlign: 'center',\n      paddingBottom: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Edit Profile\"), __jsx(ProfileForm, {\n    profile: currentUser.profile,\n    onSubmit: data => {\n      console.log(data);\n      updateProfile({\n        variables: {\n          accountId: currentUser.id,\n          profileId: currentUser.profile.id,\n          data\n        }\n      }).then(() => Router.push('/myProfile')).catch(err => setAlertOptions({\n        open: true,\n        level: 'error',\n        message: err.message\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(Alert, {\n    level: alertOptions.level,\n    message: alertOptions.message,\n    open: alertOptions.open,\n    onClose: () => setAlertOptions({\n      open: false,\n      level: alertOptions.level,\n      message: alertOptions.message\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n}\n\nEditProfile.getInitialProps = () => ({\n  authRequired: true\n});\n\nexport default withApollo(withAuth(EditProfile));","map":{"version":3,"sources":["/data/apps/school-manager-client/pages/editProfile.tsx"],"names":["React","useState","MainLayout","ProfileForm","useAuth","Container","Typography","useMutation","gql","Router","Alert","withApollo","withAuth","UPDATE_PROFILE_MUTATION","EditProfile","currentUser","updateProfile","_","alertOptions","setAlertOptions","open","level","message","marginTop","textAlign","paddingBottom","profile","data","console","log","variables","accountId","id","profileId","then","push","catch","err","getInitialProps","authRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAoC,qBAApC;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,MAAMC,uBAAuB,GAAGL,GAAI;;;;;;;;;;CAApC;;AAYA,SAASM,WAAT,GAAuB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAkBX,OAAO,EAA/B;AACA,QAAM,CAACY,aAAD,EAAgBC,CAAhB,IAAqBV,WAAW,CAACM,uBAAD,CAAtC;AACA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeC;AAAf,MAAkClB,QAAQ,CAAe;AAAEmB,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE,MAAtB;AAA8BC,IAAAA,OAAO,EAAE;AAAvC,GAAf,CAAhD;AAGA,SACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,WAAW,IACV,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAE,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,eAA/B;AAA+C,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,aAAa,EAAE;AAAtC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAKE,MAAC,WAAD;AACE,IAAA,OAAO,EAAEV,WAAW,CAACW,OADvB;AAEE,IAAA,QAAQ,EAAGC,IAAD,IAAU;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAX,MAAAA,aAAa,CAAC;AACZc,QAAAA,SAAS,EAAE;AACTC,UAAAA,SAAS,EAAEhB,WAAW,CAACiB,EADd;AAETC,UAAAA,SAAS,EAAElB,WAAW,CAACW,OAAZ,CAAoBM,EAFtB;AAGTL,UAAAA;AAHS;AADC,OAAD,CAAb,CAOGO,IAPH,CAOQ,MAAMzB,MAAM,CAAC0B,IAAP,CAAY,YAAZ,CAPd,EAQGC,KARH,CAQSC,GAAG,IAAIlB,eAAe,CAAC;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAAE,OAArB;AAA8BC,QAAAA,OAAO,EAAEe,GAAG,CAACf;AAA3C,OAAD,CAR/B;AASD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAqBE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEJ,YAAY,CAACG,KADtB;AAEE,IAAA,OAAO,EAAEH,YAAY,CAACI,OAFxB;AAGE,IAAA,IAAI,EAAEJ,YAAY,CAACE,IAHrB;AAIE,IAAA,OAAO,EAAE,MAAMD,eAAe,CAAC;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,KAAK,EAAEH,YAAY,CAACG,KAAnC;AAA0CC,MAAAA,OAAO,EAAEJ,YAAY,CAACI;AAAhE,KAAD,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF,CAFJ,CADF;AAoCD;;AAEDR,WAAW,CAACwB,eAAZ,GAA8B,OAAO;AAAEC,EAAAA,YAAY,EAAE;AAAhB,CAAP,CAA9B;;AAEA,eAAe5B,UAAU,CAACC,QAAQ,CAACE,WAAD,CAAT,CAAzB","sourcesContent":["import React, { useState } from 'react'\nimport MainLayout from '../layouts/MainLayout'\nimport ProfileForm from '../components/ProfileForm'\nimport { useAuth } from '../components/AuthContext'\nimport Container from '../components/Container'\nimport { Typography } from '@material-ui/core'\nimport { useMutation } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport Router from 'next/router'\nimport Alert, { AlertOptions } from '../components/Alert'\nimport withApollo from '../lib/with-apollo'\nimport withAuth from '../lib/with-auth'\n\nconst UPDATE_PROFILE_MUTATION = gql`\n  mutation updateProfile($accountId: ID!, $profileId: ID!, $data: ProfileDataInput!) {\n    updateProfile(accountId: $accountId, profileId: $profileId, data: $data) {\n      id birthDate birthPlace residence phoneNumber nationality\n      nicNumber nicDateOfIssue nicPlaceOfIssue\n      highestAcademicQualification yearOfIssue englishGradeInGCEOL mathematicsGradeInGCEOL\n      professionalQualification employmentStatus jobTitle yearsOfExperience employerName employerAddress\n      otherDetails\n    }\n  }\n`\n\nfunction EditProfile() {\n  const { currentUser } = useAuth()\n  const [updateProfile, _] = useMutation(UPDATE_PROFILE_MUTATION)\n  const [alertOptions, setAlertOptions] = useState<AlertOptions>({ open: false, level: 'info', message: '' })\n\n  \n  return (\n    <MainLayout title=\"Edit Profile\">\n      {currentUser &&\n        <Container maxWidth={600}>\n          <div style={{ marginTop: 15 }}>\n            <Typography variant=\"h5\" color=\"textSecondary\" style={{ textAlign: 'center', paddingBottom: 15}}>\n              Edit Profile\n            </Typography>\n\n            <ProfileForm \n              profile={currentUser.profile}\n              onSubmit={(data) => {\n                console.log(data)\n                updateProfile({\n                  variables: { \n                    accountId: currentUser.id, \n                    profileId: currentUser.profile.id,\n                    data\n                  }\n                })\n                  .then(() => Router.push('/myProfile'))\n                  .catch(err => setAlertOptions({ open: true, level: 'error', message: err.message }))\n              }}\n            />\n\n            <Alert \n              level={alertOptions.level}\n              message={alertOptions.message}\n              open={alertOptions.open}\n              onClose={() => setAlertOptions({ open: false, level: alertOptions.level, message: alertOptions.message })}\n            />\n          </div>\n        </Container>\n      }\n    </MainLayout>\n  )\n}\n\nEditProfile.getInitialProps = () => ({ authRequired: true })\n\nexport default withApollo(withAuth(EditProfile))\n"]},"metadata":{},"sourceType":"module"}