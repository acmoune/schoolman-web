{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport MainLayout from '../layouts/MainLayout';\nimport { gql } from 'apollo-boost';\nimport Container from '../components/Container';\nimport EnrollmentItem from '../components/EnrollmentItem';\nimport { Typography, Button } from '@material-ui/core';\nimport Enrollment from '../components/Enrollment';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\nconst GET_MY_TRAININGS_QUERY = gql`\n  query getMyTrainings($accountId: ID!) {\n    enrollments(accountId: $accountId) {\n      enrollmentId\n      sessionTitle\n      trainingTitle\n      planTitle\n      programTitle\n      departmentTitle\n      startDate\n      duration\n      sessionStatus\n      bills {\n        billId\n        feeType\n        description\n        amount\n        payments { paymentId amount date }\n      }\n    }\n  }\n`;\n\nfunction ListView({\n  enrollments,\n  onSelect\n}) {\n  return __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"textSecondary\",\n    style: {\n      marginBottom: 10\n    }\n  }, \"My Training courses\"), enrollments.map(e => __jsx(EnrollmentItem, {\n    enrollment: e,\n    onSelect: () => onSelect(e)\n  })));\n}\n\nfunction ItemView({\n  enrollment,\n  onBack\n}) {\n  const totalBills = enrollment.bills.map(b => b.amount).reduce((s, i) => s + i, 0);\n  const totalPayments = enrollment.bills.flatMap(b => b.payments.map(p => p.amount)).reduce((s, i) => s + i, 0);\n  const isOwingMoney = totalPayments < totalBills;\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      marginTop: 15,\n      marginBottom: 10,\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(\"div\", null, __jsx(Button, {\n    onClick: () => onBack(),\n    size: \"small\",\n    variant: \"text\"\n  }, \"Back to list\"))), __jsx(Enrollment, {\n    enrollment: enrollment\n  }));\n}\n\nfunction MyTrainingsPage({\n  enrollments\n}) {\n  const {\n    0: selectedEnrollment,\n    1: selectEnrollment\n  } = useState(null);\n  return __jsx(MainLayout, {\n    title: \"My Training courses\"\n  }, __jsx(Container, null, selectedEnrollment ? __jsx(ItemView, {\n    enrollment: selectedEnrollment,\n    onBack: () => selectEnrollment(null)\n  }) : __jsx(ListView, {\n    enrollments: enrollments,\n    onSelect: item => selectEnrollment(item)\n  })));\n}\n\nMyTrainingsPage.getInitialProps = async ({\n  apolloClient,\n  token,\n  currentUser\n}) => {\n  const {\n    data: {\n      enrollments\n    }\n  } = await apolloClient.query({\n    query: GET_MY_TRAININGS_QUERY,\n    variables: {\n      accountId: currentUser.id\n    },\n    context: {\n      headers: {\n        'schoolman_token': token\n      }\n    }\n  });\n  return {\n    enrollments,\n    authRequired: true\n  };\n};\n\nexport default withApollo(withAuth(MyTrainingsPage));","map":null,"metadata":{},"sourceType":"module"}