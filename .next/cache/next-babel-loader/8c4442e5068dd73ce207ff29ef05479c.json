{"ast":null,"code":"var _jsxFileName = \"/data/apps/opensource/SchoolMan/web-client/pages/myTrainings.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport MainLayout from '../layouts/MainLayout';\nimport { gql } from 'apollo-boost';\nimport Container from '../components/Container';\nimport EnrollmentItem from '../components/EnrollmentItem';\nimport { Typography, Button } from '@material-ui/core';\nimport Enrollment from '../components/Enrollment';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\nconst GET_MY_TRAININGS_QUERY = gql`\n  query getMyTrainings($accountId: ID!) {\n    enrollments(accountId: $accountId) {\n      enrollmentId\n      sessionTitle\n      trainingTitle\n      planTitle\n      programTitle\n      departmentTitle\n      startDate\n      duration\n      sessionStatus\n      bills {\n        billId\n        feeType\n        description\n        amount\n        payments { paymentId amount date }\n      }\n    }\n  }\n`;\n\nfunction ListView({\n  enrollments,\n  onSelect\n}) {\n  return __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"textSecondary\",\n    style: {\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"My Training courses\"), enrollments.map(e => __jsx(EnrollmentItem, {\n    enrollment: e,\n    onSelect: () => onSelect(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n}\n\nfunction ItemView({\n  enrollment,\n  onBack\n}) {\n  const totalBills = enrollment.bills.map(b => b.amount).reduce((s, i) => s + i, 0);\n  const totalPayments = enrollment.bills.flatMap(b => b.payments.map(p => p.amount)).reduce((s, i) => s + i, 0);\n  const isOwingMoney = totalPayments < totalBills;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 15,\n      marginBottom: 10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: () => onBack(),\n    size: \"small\",\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Back to list\"))), __jsx(Enrollment, {\n    enrollment: enrollment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n}\n\nfunction MyTrainingsPage({\n  enrollments\n}) {\n  const {\n    0: selectedEnrollment,\n    1: selectEnrollment\n  } = useState(null);\n  return __jsx(MainLayout, {\n    title: \"My Training courses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, selectedEnrollment ? __jsx(ItemView, {\n    enrollment: selectedEnrollment,\n    onBack: () => selectEnrollment(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }) : __jsx(ListView, {\n    enrollments: enrollments,\n    onSelect: item => selectEnrollment(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n}\n\nMyTrainingsPage.getInitialProps = async ({\n  apolloClient,\n  token,\n  currentUser\n}) => {\n  const {\n    data: {\n      enrollments\n    }\n  } = await apolloClient.query({\n    query: GET_MY_TRAININGS_QUERY,\n    variables: {\n      accountId: currentUser.id\n    },\n    context: {\n      headers: {\n        'schoolman_token': token\n      }\n    }\n  });\n  return {\n    enrollments,\n    authRequired: true\n  };\n};\n\nexport default withApollo(withAuth(MyTrainingsPage));","map":{"version":3,"sources":["/data/apps/opensource/SchoolMan/web-client/pages/myTrainings.tsx"],"names":["React","useState","MainLayout","gql","Container","EnrollmentItem","Typography","Button","Enrollment","withApollo","withAuth","GET_MY_TRAININGS_QUERY","ListView","enrollments","onSelect","marginTop","marginBottom","map","e","ItemView","enrollment","onBack","totalBills","bills","b","amount","reduce","s","i","totalPayments","flatMap","payments","p","isOwingMoney","display","alignItems","MyTrainingsPage","selectedEnrollment","selectEnrollment","item","getInitialProps","apolloClient","token","currentUser","data","query","variables","accountId","id","context","headers","authRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,MAAMC,sBAAsB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;CAAnC;;AAuBA,SAASS,QAAT,CAAkB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,EAAoH;AAClH,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,eAA/B;AAA+C,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAGGH,WAAW,CAACI,GAAZ,CAAgBC,CAAC,IAAI,MAAC,cAAD;AAAgB,IAAA,UAAU,EAAEA,CAA5B;AAA+B,IAAA,QAAQ,EAAE,MAAMJ,QAAQ,CAACI,CAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CAHH,CADF;AAOD;;AAED,SAASC,QAAT,CAAkB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,EAA2F;AACzF,QAAMC,UAAU,GAAGF,UAAU,CAACG,KAAX,CAAiBN,GAAjB,CAAqBO,CAAC,IAAIA,CAAC,CAACC,MAA5B,EAAoCC,MAApC,CAA2C,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAzD,EAA4D,CAA5D,CAAnB;AACA,QAAMC,aAAa,GAAGT,UAAU,CAACG,KAAX,CAAiBO,OAAjB,CAAyBN,CAAC,IAAIA,CAAC,CAACO,QAAF,CAAWd,GAAX,CAAee,CAAC,IAAIA,CAAC,CAACP,MAAtB,CAA9B,EAA6DC,MAA7D,CAAoE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAlF,EAAqF,CAArF,CAAtB;AACA,QAAMK,YAAY,GAAGJ,aAAa,GAAGP,UAArC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEP,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,YAAY,EAAE,EAA/B;AAAmCkB,MAAAA,OAAO,EAAE,MAA5C;AAAoDC,MAAAA,UAAU,EAAE;AAAhE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMd,MAAM,EAA7B;AAAiC,IAAA,IAAI,EAAC,OAAtC;AAA8C,IAAA,OAAO,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADF,EAOE,MAAC,UAAD;AAAY,IAAA,UAAU,EAAED,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD;;AAED,SAASgB,eAAT,CAAyB;AAAEvB,EAAAA;AAAF,CAAzB,EAA0E;AACxE,QAAM;AAAA,OAACwB,kBAAD;AAAA,OAAqBC;AAArB,MAAyCrC,QAAQ,CAAqB,IAArB,CAAvD;AAEA,SACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGoC,kBAAkB,GACjB,MAAC,QAAD;AAAU,IAAA,UAAU,EAAEA,kBAAtB;AAA0C,IAAA,MAAM,EAAE,MAAMC,gBAAgB,CAAC,IAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,GAEjB,MAAC,QAAD;AAAU,IAAA,WAAW,EAAEzB,WAAvB;AAAoC,IAAA,QAAQ,EAAG0B,IAAD,IAAuBD,gBAAgB,CAACC,IAAD,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF,CADF;AAUD;;AAEDH,eAAe,CAACI,eAAhB,GAAkC,OAAO;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA;AAAvB,CAAP,KAAqD;AACrF,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAE/B,MAAAA;AAAF;AAAR,MAA2B,MAAM4B,YAAY,CAACI,KAAb,CAAmB;AACxDA,IAAAA,KAAK,EAAElC,sBADiD;AAExDmC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAEJ,WAAW,CAACK;AAAzB,KAF6C;AAGxDC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAE,2BAAmBR;AAArB;AAAX;AAH+C,GAAnB,CAAvC;AAMA,SAAQ;AAAE7B,IAAAA,WAAF;AAAesC,IAAAA,YAAY,EAAE;AAA7B,GAAR;AACD,CARD;;AAUA,eAAe1C,UAAU,CAACC,QAAQ,CAAC0B,eAAD,CAAT,CAAzB","sourcesContent":["import React, { useState } from 'react'\nimport MainLayout from '../layouts/MainLayout'\nimport { gql } from 'apollo-boost'\nimport IEnrollment from '../server/src/models/accounts/Enrollment'\nimport Container from '../components/Container'\nimport EnrollmentItem from '../components/EnrollmentItem'\nimport { Typography, Button } from '@material-ui/core'\nimport Enrollment from '../components/Enrollment'\nimport withApollo from '../lib/with-apollo'\nimport withAuth from '../lib/with-auth'\n\nconst GET_MY_TRAININGS_QUERY = gql`\n  query getMyTrainings($accountId: ID!) {\n    enrollments(accountId: $accountId) {\n      enrollmentId\n      sessionTitle\n      trainingTitle\n      planTitle\n      programTitle\n      departmentTitle\n      startDate\n      duration\n      sessionStatus\n      bills {\n        billId\n        feeType\n        description\n        amount\n        payments { paymentId amount date }\n      }\n    }\n  }\n`\n\nfunction ListView({ enrollments, onSelect }: { enrollments: IEnrollment[], onSelect: (item: IEnrollment) => void }) {\n  return (\n    <div style={{ marginTop: 15 }}>\n      <Typography variant=\"h5\" color=\"textSecondary\" style={{ marginBottom: 10 }}>My Training courses</Typography>\n\n      {enrollments.map(e => <EnrollmentItem enrollment={e} onSelect={() => onSelect(e)} />)}\n    </div>\n  )\n}\n\nfunction ItemView({ enrollment, onBack }: { enrollment: IEnrollment, onBack: () => void }) {\n  const totalBills = enrollment.bills.map(b => b.amount).reduce((s, i) => s + i, 0)\n  const totalPayments = enrollment.bills.flatMap(b => b.payments.map(p => p.amount)).reduce((s, i) => s + i, 0)\n  const isOwingMoney = totalPayments < totalBills\n\n  return (\n    <div>\n      <div style={{ marginTop: 15, marginBottom: 10, display: 'flex', alignItems: 'center' }}>\n        <div>\n          <Button onClick={() => onBack()} size=\"small\" variant=\"text\">Back to list</Button>\n        </div>\n      </div>\n\n      <Enrollment enrollment={enrollment} />\n    </div>\n  )\n}\n\nfunction MyTrainingsPage({ enrollments }: { enrollments: IEnrollment[] }) {\n  const [selectedEnrollment, selectEnrollment] = useState<IEnrollment | null>(null)\n\n  return (\n    <MainLayout title=\"My Training courses\">\n      <Container>\n        {selectedEnrollment ? \n          <ItemView enrollment={selectedEnrollment} onBack={() => selectEnrollment(null)} /> : \n          <ListView enrollments={enrollments} onSelect={(item: IEnrollment) => selectEnrollment(item)} />\n        }\n      </Container>\n    </MainLayout>\n  )\n}\n\nMyTrainingsPage.getInitialProps = async ({ apolloClient, token, currentUser }: any) => {\n  const { data: { enrollments }} = await apolloClient.query({\n    query: GET_MY_TRAININGS_QUERY,\n    variables: { accountId: currentUser.id },\n    context: { headers: { 'schoolman_token': token } }\n  })\n\n  return ({ enrollments, authRequired: true })\n}\n\nexport default withApollo(withAuth(MyTrainingsPage))\n"]},"metadata":{},"sourceType":"module"}