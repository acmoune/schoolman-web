{"ast":null,"code":"var _jsxFileName = \"/data/apps/opensource/SchoolMan/web-client/pages/myProfile.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport MainLayout from '../layouts/MainLayout';\nimport { useAuth } from '../components/AuthContext';\nimport Container from '../components/Container';\nimport { gql } from 'apollo-boost';\nimport { Paper, Typography, Button } from '@material-ui/core';\nimport Router from 'next/router';\nimport ProfileView from '../components/ProfileView';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\nimport Link from 'next/link';\nconst GET_PROFILE_QUERY = gql`\n  query getProfile($email: String!) {\n    account(email: $email) {\n      id\n      email\n      fullName\n      profile {\n        id birthDate birthPlace residence phoneNumber nationality otherDetails\n      }\n    }\n  }\n`;\n\nfunction MyProfile({\n  profile\n}) {\n  const {\n    currentUser\n  } = useAuth();\n  return __jsx(MainLayout, {\n    title: `${currentUser ? currentUser.fullName : 'My Profile'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, currentUser && __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Paper, {\n    style: {\n      padding: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, currentUser.fullName), __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, currentUser.email), __jsx(\"div\", {\n    style: {\n      color: '#808080',\n      fontSize: '8pt',\n      marginTop: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"If there is a mistake in your name or if you want to update your email, please contact an administrator\")), profile ? __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      marginBottom: 15,\n      paddingBottom: 10,\n      borderBottom: '1px solid #DFDFDF'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    style: {\n      flexGrow: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"My Profile\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: () => Router.push('/editProfile'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Edit\")), __jsx(ProfileView, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })) : __jsx(\"div\", {\n    style: {\n      padding: 40,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"You do not have a profile yet. \\xA0\", __jsx(Link, {\n    href: \"/createProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Create Profile\"))))));\n}\n\nMyProfile.getInitialProps = async ({\n  apolloClient,\n  token,\n  currentUser\n}) => {\n  var profile = null;\n\n  if (currentUser) {\n    const {\n      data: {\n        account\n      }\n    } = await apolloClient.query({\n      query: GET_PROFILE_QUERY,\n      variables: {\n        email: currentUser.email\n      },\n      context: {\n        headers: {\n          'schoolman_token': token\n        }\n      }\n    });\n    profile = account.profile;\n  }\n\n  return {\n    profile,\n    authRequired: true\n  };\n};\n\nexport default withApollo(withAuth(MyProfile));","map":{"version":3,"sources":["/data/apps/opensource/SchoolMan/web-client/pages/myProfile.tsx"],"names":["React","MainLayout","useAuth","Container","gql","Paper","Typography","Button","Router","ProfileView","withApollo","withAuth","Link","GET_PROFILE_QUERY","MyProfile","profile","currentUser","fullName","marginTop","padding","email","color","fontSize","display","marginBottom","paddingBottom","borderBottom","flexGrow","push","textAlign","textDecoration","getInitialProps","apolloClient","token","data","account","query","variables","context","headers","authRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MainLayout from '../layouts/MainLayout'\nimport { useAuth } from '../components/AuthContext'\nimport Container from '../components/Container'\nimport { gql } from 'apollo-boost'\nimport {\n  Paper, \n  Typography, \n  Button\n} from '@material-ui/core'\nimport Router from 'next/router'\nimport ProfileView from '../components/ProfileView'\nimport withApollo from '../lib/with-apollo'\nimport withAuth from '../lib/with-auth'\nimport Link from 'next/link'\nimport IAccountProfileFields from '../server/src/models/accounts/AccountProfile'\n\nconst GET_PROFILE_QUERY = gql`\n  query getProfile($email: String!) {\n    account(email: $email) {\n      id\n      email\n      fullName\n      profile {\n        id birthDate birthPlace residence phoneNumber nationality otherDetails\n      }\n    }\n  }\n`\n\nfunction MyProfile({ profile } : { profile: IAccountProfileFields }) {\n  const { currentUser } = useAuth()\n\n  return (\n    <MainLayout title={`${currentUser ? currentUser.fullName : 'My Profile'}`}>\n      <Container>\n        {currentUser &&\n          <div style={{ marginTop: 15 }}>\n            <Paper style={{ padding: 15 }}>\n              <Typography variant=\"h5\" color=\"secondary\">{currentUser.fullName}</Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\">{currentUser.email}</Typography>\n              <div style={{ color: '#808080', fontSize: '8pt', marginTop: 5 }}>\n                If there is a mistake in your name or if you want to update your email, please contact an administrator\n              </div>\n            </Paper>\n\n            {profile ?\n              <div style={{ marginTop: 15 }}>\n                <div style={{ display: 'flex', marginBottom: 15, paddingBottom: 10, borderBottom: '1px solid #DFDFDF' }}>\n                  <Typography variant=\"h6\" color=\"textSecondary\" style={{ flexGrow: 1 }}>My Profile</Typography>\n\n                  <Button \n                    variant=\"contained\" \n                    color=\"secondary\" \n                    size=\"small\" \n                    onClick={() => Router.push('/editProfile')}\n                  >\n                    Edit\n                  </Button>\n                </div>\n \n                <ProfileView profile={profile} />\n              </div> :\n\n              <div style={{ padding: 40, textAlign: 'center' }}>\n                You do not have a profile yet. &nbsp;\n                <Link href=\"/createProfile\"><a style={{ textDecoration: 'none' }}>Create Profile</a></Link>\n              </div>\n            }\n          </div>\n        }\n      </Container>\n    </MainLayout>\n  )\n}\n\nMyProfile.getInitialProps = async ({ apolloClient, token, currentUser }: any) => {\n  var profile = null\n  \n  if (currentUser) {\n    const { data: { account }} = await apolloClient.query({\n      query: GET_PROFILE_QUERY,\n      variables: { email: currentUser.email },\n      context: { headers: { 'schoolman_token': token } }\n    })\n\n    profile = account.profile\n  }\n\n  return ({ profile, authRequired: true })\n}\n\nexport default withApollo(withAuth(MyProfile))\n"]},"metadata":{},"sourceType":"module"}