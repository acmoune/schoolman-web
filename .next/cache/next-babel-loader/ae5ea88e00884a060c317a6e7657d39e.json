{"ast":null,"code":"var _jsxFileName = \"/data/apps/opensource/SchoolMan/web-client/pages/signIn.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport MainLayout from '../layouts/MainLayout';\nimport Container from '../components/Container';\nimport { Typography, Paper, TextField, Button } from '@material-ui/core';\nimport axios from 'axios';\nimport validator from 'validator';\nimport { apiBaseUrl, authCookieName } from '../app.config';\nimport { setCookie } from '../lib/cookie';\nimport Router from 'next/router';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\n\nfunction SignInPage({\n  backTo\n}) {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [inputErrors, setInputErrors] = React.useState({\n    emailErrors: [],\n    passwordErrors: []\n  });\n  const [serverError, setServerError] = React.useState([]);\n\n  const validateData = () => {\n    const emailErrors = [];\n    const passwordErrors = [];\n    if (validator.isEmpty(email)) emailErrors.push('Your email is required');\n    if (!validator.isEmail(email)) emailErrors.push('Enter a valid email address');\n    if (validator.isEmpty(password)) passwordErrors.push('Your password is required');\n    const isValid = emailErrors.length == 0 && passwordErrors.length == 0;\n    const errors = {\n      emailErrors,\n      passwordErrors\n    };\n    return {\n      isValid,\n      errors\n    };\n  };\n\n  const submit = cb => {\n    const {\n      isValid,\n      errors\n    } = validateData();\n    setInputErrors(errors);\n\n    if (!isValid && errors) {\n      return cb('Please enter valid inputs', '');\n    }\n\n    return axios.post(`${apiBaseUrl}/auth/authenticate`, {\n      email,\n      password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => cb('', res.data.token)).catch(err => cb(err.response.data.message, ''));\n  };\n\n  return __jsx(MainLayout, {\n    title: \"Sign In\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: 400,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 50,\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"textSecondary\",\n    style: {\n      textAlign: 'center',\n      paddingBottom: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Sign In\"), __jsx(Paper, {\n    style: {\n      padding: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, serverError.length > 0 && __jsx(\"div\", {\n    style: {\n      marginBottom: 15,\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, serverError.join(', ')), __jsx(TextField, {\n    id: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    fullWidth: true,\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    error: inputErrors.emailErrors.length > 0,\n    helperText: inputErrors.emailErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    fullWidth: true,\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    error: inputErrors.passwordErrors.length > 0,\n    helperText: inputErrors.passwordErrors.join(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(Button, {\n    color: \"secondary\",\n    size: \"large\",\n    fullWidth: true,\n    variant: \"contained\",\n    onClick: () => submit((errMessage, token) => {\n      if (errMessage) return setServerError([errMessage]);\n      setCookie(authCookieName, token);\n      return Router.push(backTo || '/');\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Sign In\"))), __jsx(\"div\", {\n    style: {\n      color: '#808080',\n      fontSize: '9pt',\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Forgot your email or password ? Please contact Administration.\")));\n}\n\nSignInPage.getInitialProps = ({\n  query\n}) => ({\n  backTo: query.backTo,\n  authRequired: false\n});\n\nexport default withApollo(withAuth(SignInPage));","map":{"version":3,"sources":["/data/apps/opensource/SchoolMan/web-client/pages/signIn.tsx"],"names":["React","MainLayout","Container","Typography","Paper","TextField","Button","axios","validator","apiBaseUrl","authCookieName","setCookie","Router","withApollo","withAuth","SignInPage","backTo","email","setEmail","useState","password","setPassword","inputErrors","setInputErrors","emailErrors","passwordErrors","serverError","setServerError","validateData","isEmpty","push","isEmail","isValid","length","errors","submit","cb","post","headers","then","res","data","token","catch","err","response","message","marginTop","marginBottom","textAlign","paddingBottom","padding","color","join","e","target","value","errMessage","fontSize","getInitialProps","query","authRequired"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport MainLayout from '../layouts/MainLayout'\nimport Container from '../components/Container'\nimport { Typography, Paper, TextField, Button } from '@material-ui/core'\nimport axios from 'axios'\nimport validator from 'validator'\nimport { apiBaseUrl, authCookieName } from '../app.config'\nimport { setCookie } from '../lib/cookie'\nimport Router from 'next/router'\nimport withApollo from '../lib/with-apollo'\nimport withAuth from '../lib/with-auth'\n\ntype InputErrors = { emailErrors: string[], passwordErrors: string[] }\n\nfunction SignInPage({ backTo }: { backTo: string }) {\n  const [email, setEmail] = React.useState<string>('')\n  const [password, setPassword] = React.useState<string>('')\n  const [inputErrors, setInputErrors] = React.useState<InputErrors>({ emailErrors: [], passwordErrors: []})\n  const [serverError, setServerError] = React.useState<string[]>([])\n\n  const validateData = (): { isValid: boolean, errors: InputErrors } => {\n    const emailErrors: string[] = []\n    const passwordErrors: string[] = []\n\n    if (validator.isEmpty(email)) emailErrors.push('Your email is required')\n    if (!validator.isEmail(email)) emailErrors.push('Enter a valid email address')\n\n    if (validator.isEmpty(password)) passwordErrors.push('Your password is required')\n\n    const isValid = emailErrors.length == 0 && passwordErrors.length == 0\n    const errors = { emailErrors, passwordErrors }\n    return ({ isValid, errors })\n  }\n\n  const submit = (cb: (errMessage: string, token: string) => any) => {\n    const { isValid, errors } = validateData()\n    setInputErrors(errors)\n\n    if (!isValid && errors) {\n      return cb('Please enter valid inputs', '')\n    }\n\n    return axios.post(`${apiBaseUrl}/auth/authenticate`, { email, password }, {\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(res => cb('', res.data.token))\n      .catch(err => cb(err.response.data.message, ''))\n  }\n\n  return (\n    <MainLayout title=\"Sign In\">\n      <Container maxWidth={400}>\n        <div style={{ marginTop: 50, marginBottom: 20 }}>\n          <Typography variant=\"h5\" color=\"textSecondary\" style={{ textAlign: 'center', paddingBottom: 15 }}>Sign In</Typography>\n\n          <Paper style={{ padding: 15 }}>\n            {serverError.length > 0 && <div style={{ marginBottom: 15, color: 'red' }}>{serverError.join(', ')}</div>}\n\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              fullWidth\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\n              error={inputErrors.emailErrors.length > 0}\n              helperText={inputErrors.emailErrors.join(', ')}\n            />\n\n            <br />\n            <br />\n\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              fullWidth\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}\n              error={inputErrors.passwordErrors.length > 0}\n              helperText={inputErrors.passwordErrors.join(', ')}\n            />\n\n            <br />\n            <br />\n            <br />\n\n            <Button\n              color=\"secondary\"\n              size=\"large\"\n              fullWidth\n              variant=\"contained\"\n              onClick={() => submit((errMessage, token) => {\n                if (errMessage) return setServerError([errMessage])\n                setCookie(authCookieName, token)\n                return Router.push(backTo || '/')\n              })}\n            >\n              Sign In\n            </Button>\n          </Paper>\n        </div>\n\n        <div style={{ color: '#808080', fontSize: '9pt', padding: 10 }}>\n          Forgot your email or password ? Please contact Administration.\n        </div>\n      </Container>\n    </MainLayout>\n  )\n}\n\nSignInPage.getInitialProps = ({ query }: any) => ({ backTo: query.backTo, authRequired: false })\n\nexport default withApollo(withAuth(SignInPage))\n"]},"metadata":{},"sourceType":"module"}