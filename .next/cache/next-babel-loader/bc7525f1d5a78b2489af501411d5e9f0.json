{"ast":null,"code":"var _jsxFileName = \"/data/apps/opensource/SchoolMan/web-client/components/catalog/TrainingSummary.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { apiServer } from '../../app.config';\nimport s3 from '../../lib/s3';\nexport default function TrainingSummary(_ref) {\n  var training = _ref.training,\n      displayLink = _ref.displayLink,\n      href = _ref.href;\n  var classes = makeStyles(function (theme) {\n    return createStyles({\n      root: {\n        marginBottom: 15,\n        '&:hover': {\n          opacity: 0.8,\n          cursor: 'pointer'\n        }\n      },\n      imgBox: {},\n      contentBox: {\n        padding: 0\n      },\n      title: {\n        fontSize: '12pt',\n        textDecoration: 'none',\n        fontWeight: 'bold'\n      },\n      link: {\n        textDecoration: 'none',\n        fontSize: '8pt',\n        display: 'inline-block',\n        color: '#FABD03',\n        marginTop: 5\n      }\n    });\n  })();\n  var router = useRouter();\n  var banner = training.banner ? s3.getFileUrl(training.banner) : \"\".concat(apiServer, \"/assets/images/trainings/no-banner.jpg\");\n  return __jsx(\"div\", {\n    className: classes.root,\n    onClick: function onClick() {\n      return href && router.push(href);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.imgBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: banner,\n    alt: \"\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: classes.contentBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, training.title)), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"caption\",\n    style: {\n      color: '#808080'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, training.description)), displayLink && training.link ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: classes.link,\n    href: training.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Official  vendor link\")) : null));\n}\nTrainingSummary.defaultProps = {\n  displayLink: false,\n  href: null\n};","map":{"version":3,"sources":["/data/apps/opensource/SchoolMan/web-client/components/catalog/TrainingSummary.tsx"],"names":["React","makeStyles","createStyles","Typography","useRouter","apiServer","s3","TrainingSummary","training","displayLink","href","classes","theme","root","marginBottom","opacity","cursor","imgBox","contentBox","padding","title","fontSize","textDecoration","fontWeight","link","display","color","marginTop","router","banner","getFileUrl","push","width","description","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport { useRouter } from 'next/router'\nimport ITrainingSummary from '../../server/src/models/catalog/TrainingSummary'\nimport { apiServer } from '../../app.config'\nimport s3 from '../../lib/s3'\n\ntype Props = { training: ITrainingSummary, displayLink: boolean, href: any }\n\nexport default function TrainingSummary({ training, displayLink, href }: Props) {\n  const classes = makeStyles((theme: Theme) => createStyles({\n    root: {\n      marginBottom: 15,\n      \n      '&:hover': {\n        opacity: 0.8,\n        cursor: 'pointer'\n      }\n    },\n    imgBox: {\n    },\n    contentBox: {\n      padding: 0,\n    },\n    title: {\n      fontSize: '12pt',\n      textDecoration: 'none',\n      fontWeight: 'bold'\n    },\n    link: {\n      textDecoration: 'none',\n      fontSize: '8pt',\n      display: 'inline-block',\n      color: '#FABD03',\n      marginTop: 5\n    }\n  }))()\n\n  const router = useRouter()\n  const banner = training.banner ? s3.getFileUrl(training.banner) : `${apiServer}/assets/images/trainings/no-banner.jpg`\n\n  return (\n    <div className={classes.root} onClick={() => href && router.push(href)}>\n      <div className={classes.imgBox}>\n        <img src={banner} alt=\"\" style={{width: '100%'}} />\n      </div>\n\n      <div className={classes.contentBox}>\n        <div className={classes.title}>\n          <Typography variant=\"body1\" color=\"primary\">{training.title}</Typography>\n        </div>\n\n        <div>\n          <Typography variant=\"caption\" style={{color: '#808080'}}>{training.description}</Typography>\n        </div>\n\n        {displayLink && training.link ? <div><a className={classes.link} href={training.link}>Official  vendor link</a></div> : null}\n      </div>\n    </div>\n  )\n}\n\nTrainingSummary.defaultProps = {\n  displayLink: false,\n  href: null\n} as Props\n"]},"metadata":{},"sourceType":"module"}