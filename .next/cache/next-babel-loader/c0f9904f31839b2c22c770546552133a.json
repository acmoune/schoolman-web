{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport MainLayout from '../layouts/MainLayout';\nimport Container from '../components/Container';\nimport { Typography, Paper, TextField, Button } from '@material-ui/core';\nimport axios from 'axios';\nimport validator from 'validator';\nimport { apiBaseUrl, authCookieName } from '../app.config';\nimport { setCookie } from '../lib/cookie';\nimport Router from 'next/router';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\n\nfunction SignInPage(_ref) {\n  var backTo = _ref.backTo;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    emailErrors: [],\n    passwordErrors: []\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inputErrors = _React$useState6[0],\n      setInputErrors = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      serverError = _React$useState8[0],\n      setServerError = _React$useState8[1];\n\n  var validateData = function validateData() {\n    var emailErrors = [];\n    var passwordErrors = [];\n    if (validator.isEmpty(email)) emailErrors.push('Your email is required');\n    if (!validator.isEmail(email)) emailErrors.push('Enter a valid email address');\n    if (validator.isEmpty(password)) passwordErrors.push('Your password is required');\n    var isValid = emailErrors.length == 0 && passwordErrors.length == 0;\n    var errors = {\n      emailErrors: emailErrors,\n      passwordErrors: passwordErrors\n    };\n    return {\n      isValid: isValid,\n      errors: errors\n    };\n  };\n\n  var submit = function submit(cb) {\n    var _validateData = validateData(),\n        isValid = _validateData.isValid,\n        errors = _validateData.errors;\n\n    setInputErrors(errors);\n\n    if (!isValid && errors) {\n      return cb('Please enter valid inputs', '');\n    }\n\n    return axios.post(\"\".concat(apiBaseUrl, \"/auth/authenticate\"), {\n      email: email,\n      password: password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return cb('', res.data.token);\n    })[\"catch\"](function (err) {\n      return cb(err.response.data.message, '');\n    });\n  };\n\n  return __jsx(MainLayout, {\n    title: \"Sign In\"\n  }, __jsx(Container, {\n    maxWidth: 400\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 50,\n      marginBottom: 20\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"textSecondary\",\n    style: {\n      textAlign: 'center',\n      paddingBottom: 15\n    }\n  }, \"Sign In\"), __jsx(Paper, {\n    style: {\n      padding: 15\n    }\n  }, serverError.length > 0 && __jsx(\"div\", {\n    style: {\n      marginBottom: 15,\n      color: 'red'\n    }\n  }, serverError.join(', ')), __jsx(TextField, {\n    id: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    fullWidth: true,\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    error: inputErrors.emailErrors.length > 0,\n    helperText: inputErrors.emailErrors.join(', ')\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(TextField, {\n    id: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    fullWidth: true,\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    error: inputErrors.passwordErrors.length > 0,\n    helperText: inputErrors.passwordErrors.join(', ')\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Button, {\n    color: \"secondary\",\n    size: \"large\",\n    fullWidth: true,\n    variant: \"contained\",\n    onClick: function onClick() {\n      return submit(function (errMessage, token) {\n        if (errMessage) return setServerError([errMessage]);\n        setCookie(authCookieName, token);\n        return Router.push(backTo || '/');\n      });\n    }\n  }, \"Sign In\"))), __jsx(\"div\", {\n    style: {\n      color: '#808080',\n      fontSize: '9pt',\n      padding: 10\n    }\n  }, \"Forgot your email or password ? Please contact Administration.\")));\n}\n\nSignInPage.getInitialProps = function (_ref2) {\n  var query = _ref2.query;\n  return {\n    backTo: query.backTo,\n    authRequired: false\n  };\n};\n\nexport default withApollo(withAuth(SignInPage));","map":null,"metadata":{},"sourceType":"module"}