{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getDepartments {\\n    departments {\\n      id\\n      title\\n      programs {\\n        id \\n        title \\n        description \\n        logo \\n        link \\n        trainings { id title description banner link }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport Container from '../components/Container';\nimport MainLayout from '../layouts/MainLayout';\nimport DepartmentList from '../components/catalog/DepartmentList';\nimport withApollo from '../lib/with-apollo';\nimport withAuth from '../lib/with-auth';\nimport { gql } from 'apollo-boost';\nimport { Typography } from '@material-ui/core';\nvar GET_DEPARTMENTS_QUERY = gql(_templateObject());\n\nfunction IndexPage(_ref) {\n  var departments = _ref.departments;\n  return __jsx(MainLayout, {\n    title: \"SchoolMan - Your light Opensource School Manager\"\n  }, __jsx(\"img\", {\n    src: \"/images/banner.jpg\",\n    alt: \"\",\n    style: {\n      width: '100%'\n    }\n  }), __jsx(Container, null, __jsx(Typography, {\n    variant: \"h4\",\n    color: \"primary\",\n    style: {\n      textAlign: 'center',\n      marginTop: 30\n    }\n  }, \"All Training Programs\"), __jsx(DepartmentList, {\n    departments: departments\n  })));\n}\n\nIndexPage.getInitialProps = function _callee(_ref2) {\n  var apolloClient, token, _ref3, departments;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          apolloClient = _ref2.apolloClient, token = _ref2.token;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_DEPARTMENTS_QUERY,\n            context: {\n              headers: {\n                'schoolman_token': token\n              }\n            }\n          }));\n\n        case 3:\n          _ref3 = _context.sent;\n          departments = _ref3.data.departments;\n          return _context.abrupt(\"return\", {\n            departments: departments,\n            authRequired: false\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withApollo(withAuth(IndexPage));","map":null,"metadata":{},"sourceType":"module"}