{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, Menu, MenuItem, Divider, Drawer, Hidden } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Router, { useRouter } from 'next/router';\nimport { removeCookie } from '../lib/cookie';\nimport { useAuth } from './AuthContext';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { authCookieName } from '../app.config';\nimport Link from 'next/link';\n\nfunction ProfileMenu(_ref) {\n  var currentUser = _ref.currentUser,\n      onSignout = _ref.onSignout;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var handleClick = function handleClick(event) {\n    return setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    return setAnchorEl(null);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginLeft: 15\n    }\n  }, __jsx(IconButton, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    style: {\n      color: 'white'\n    }\n  }, __jsx(AccountCircleIcon, null)), __jsx(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, __jsx(Typography, {\n    style: {\n      padding: '5px 15px',\n      color: '#808080'\n    }\n  }, currentUser.fullName), __jsx(Divider, null), __jsx(MenuItem, {\n    onClick: function onClick() {\n      handleClose();\n      Router.push('/myProfile');\n    }\n  }, \"My profile\"), __jsx(MenuItem, {\n    onClick: function onClick() {\n      handleClose();\n      Router.push('/resetPassword');\n    }\n  }, \"Reset my password\"), __jsx(Divider, null), __jsx(MenuItem, {\n    onClick: function onClick() {\n      handleClose();\n      onSignout();\n    }\n  }, \"Sign Out\")));\n}\n\nfunction MobileMenu(props) {\n  var classes = makeStyles({\n    list: {\n      width: 250\n    },\n    fullList: {\n      width: 'auto'\n    },\n    menuItem: {\n      display: 'block',\n      padding: 10,\n      marginBottom: 5\n    }\n  })();\n  var router = useRouter();\n  return __jsx(Drawer, {\n    anchor: \"right\",\n    open: props.drawerOpen,\n    onClose: props.closeDrawer()\n  }, __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: props.closeDrawer(),\n    onKeyDown: props.closeDrawer()\n  }, __jsx(\"div\", null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: classes.menuItem\n  }, \"Home\")), props.currentUser && __jsx(Link, {\n    href: \"/myTrainings\"\n  }, __jsx(\"a\", {\n    className: classes.menuItem\n  }, \"My Training courses\"))), __jsx(Divider, null), props.currentUser ? __jsx(\"div\", null, __jsx(Typography, {\n    style: {\n      padding: 10,\n      color: '#808080'\n    }\n  }, props.currentUser.fullName), __jsx(Link, {\n    href: \"/myProfile\"\n  }, __jsx(\"a\", {\n    className: classes.menuItem\n  }, \"My Profile\")), __jsx(Link, {\n    href: \"/resetPassword\"\n  }, __jsx(\"a\", {\n    className: classes.menuItem\n  }, \"Reset password\")), __jsx(\"a\", {\n    href: \"#\",\n    onClick: function onClick() {\n      return props.onSignout();\n    },\n    className: classes.menuItem\n  }, \"Sign Out\")) : __jsx(\"div\", null, __jsx(Link, {\n    href: \"/signIn\"\n  }, __jsx(\"a\", {\n    className: classes.menuItem\n  }, \"Sign In\")))));\n}\n\nfunction MainNavbar() {\n  var classes = makeStyles(function (theme) {\n    return createStyles({\n      root: {\n        flexGrow: 1\n      },\n      menuButton: {\n        marginLeft: theme.spacing(2)\n      },\n      title: {\n        flexGrow: 1,\n        height: 54,\n        display: 'flex',\n        alignItems: 'center'\n      },\n      appBar: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'row'\n      },\n      toolBar: {\n        width: '100%',\n        maxWidth: 1024\n      },\n      menuItem: {\n        display: 'inline-block',\n        marginLeft: 15,\n        color: 'white',\n        fontWeight: 'bold'\n      }\n    });\n  })();\n  var router = useRouter();\n  var client = useApolloClient();\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser;\n\n  var _React$useState3 = React.useState({\n    drawerOpen: false\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var closeDrawer = function closeDrawer() {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\n      return setState(_objectSpread({}, state, {\n        drawerOpen: false\n      }));\n    };\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar\n  }, __jsx(Toolbar, {\n    variant: \"dense\",\n    className: classes.toolBar\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: \"/images/logo.png\",\n    alt: \"\"\n  })))), __jsx(Hidden, {\n    xsDown: true\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: classes.menuItem\n  }, \"Home\"))), currentUser ? __jsx(Hidden, {\n    xsDown: true\n  }, __jsx(Link, {\n    href: \"/myTrainings\"\n  }, __jsx(\"a\", {\n    className: classes.menuItem\n  }, \"My Training courses\")), __jsx(ProfileMenu, {\n    currentUser: currentUser,\n    onSignout: function onSignout() {\n      client.resetStore();\n      router.push('/');\n      removeCookie(authCookieName);\n    }\n  })) : __jsx(Hidden, {\n    xsDown: true\n  }, __jsx(Link, {\n    href: \"/signIn\"\n  }, __jsx(\"a\", {\n    className: classes.menuItem\n  }, \"Sign In\"))), __jsx(Hidden, {\n    smUp: true\n  }, __jsx(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: function onClick() {\n      return setState({\n        drawerOpen: !state.drawerOpen\n      });\n    }\n  }, __jsx(MenuIcon, null))))), __jsx(Hidden, {\n    smUp: true\n  }, __jsx(MobileMenu, {\n    drawerOpen: state.drawerOpen,\n    closeDrawer: closeDrawer,\n    currentUser: currentUser,\n    onSignout: function onSignout() {\n      client.resetStore();\n      router.push('/');\n      removeCookie(authCookieName);\n    }\n  })));\n}\n\nexport default MainNavbar;","map":null,"metadata":{},"sourceType":"module"}