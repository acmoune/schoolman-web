{"version":3,"file":"static/webpack/static/development/pages/index.js.3d113b3e6747ff17bf33.hot-update.js","sources":["webpack:///./components/MainNavbar.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  AppBar, \n  Toolbar, \n  IconButton, \n  Typography, \n  Button, \n  Menu, \n  MenuItem, \n  Divider, \n  Drawer, \n  ListItem, \n  ListItemText, \n  List, \n  ListSubheader,\n  Hidden\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport Router, { useRouter } from 'next/router'\nimport IAccountFields from '../server/src/models/accounts/Account'\nimport { removeCookie } from '../lib/cookie'\nimport { useAuth } from './AuthContext'\nimport { useApolloClient } from '@apollo/react-hooks'\nimport { authCookieName } from '../app.config'\nimport Link from 'next/link'\n\nfunction ProfileMenu({ currentUser, onSignout }: { currentUser: IAccountFields, onSignout: Function }) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget)\n  const handleClose = () => setAnchorEl(null)\n\n  return (\n    <div>\n      <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" color=\"inherit\" onClick={handleClick}>\n        <AccountCircleIcon />\n      </IconButton>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Typography style={{ padding: '5px 15px', color: '#808080' }}>{currentUser.fullName}</Typography>\n        <Divider />\n        <MenuItem>\n          <Link href=\"/myProfile\"><a>My Profile</a></Link>\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleClose()\n            Router.push('/resetPassword')\n          }}\n        >\n          Reset my password\n        </MenuItem>\n\n        <Divider />\n\n        <MenuItem\n          onClick={() => {\n            handleClose()\n            onSignout()\n          }}\n        >\n          Sign Out\n        </MenuItem>\n      </Menu>\n    </div>\n  )\n}\n\nfunction MobileMenu(props: { drawerOpen: boolean, closeDrawer: Function, currentUser?: IAccountFields, onSignout: Function }) {\n  const classes = makeStyles({\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n  })()\n\n  const router = useRouter()\n\n  return (\n    <Drawer anchor=\"right\" open={props.drawerOpen} onClose={props.closeDrawer()}>\n      <div\n        className={classes.list}\n        role=\"presentation\"\n        onClick={props.closeDrawer()}\n        onKeyDown={props.closeDrawer()}\n      >\n        <div>\n          <Link href=\"/\"><a>Home</a></Link>\n        \n          {props.currentUser &&\n            <Link href=\"/myTrainings\"><a>My Training courses</a></Link>\n          }\n        </div>\n\n        <Divider />\n      \n        {props.currentUser ?\n          <div>\n            <Typography>{props.currentUser.fullName}</Typography>\n\n            <Link href=\"/myProfile\"><a>My Profile</a></Link>\n            <Link href=\"/resetPassword\"><a>Reset password</a></Link>\n            <a onClick={() => props.onSignout()}>Sign Out</a>\n          </div> :\n\n          <div>\n            <Link href=\"/signIn\"><a>Sign In</a></Link>\n          </div>\n        }\n      </div>\n    </Drawer>\n  )\n}\n\nfunction MainNavbar() {\n  const classes = makeStyles((theme: Theme) => createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginLeft: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      height: 54,\n      display: 'flex',\n      alignItems: 'center',\n    },\n    appBar: {\n      display: 'flex', \n      justifyContent: 'center', \n      flexDirection: 'row'\n    },\n    toolBar: {\n      width: '100%',\n      maxWidth: 1024\n    }\n  }))()\n\n  const router = useRouter()\n  const client = useApolloClient()\n  const { currentUser } = useAuth()\n\n  const [state, setState] = React.useState({ drawerOpen: false })\n  const closeDrawer = () => (event: React.KeyboardEvent | React.MouseEvent) => {\n    if (event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) \n      return\n    \n    return setState({ ...state, drawerOpen: false })\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar variant=\"dense\" className={classes.toolBar}>\n          <div className={classes.title}>\n            <Link href=\"/\"><a><img src=\"/images/logo.png\" alt=\"\" /></a></Link>\n          </div>\n\n          <Hidden xsDown>\n            <Link href=\"/\"><a>Home</a></Link>\n          </Hidden>\n          \n          {currentUser ? \n            <Hidden xsDown>\n              <Link href=\"/myTrainings\"><a>My Training courses</a></Link>\n              <ProfileMenu\n                currentUser={currentUser}\n                onSignout={() => {\n                  client.resetStore()\n                  router.push('/')\n                  removeCookie(authCookieName)\n                }}\n              />\n            </Hidden> :\n          \n            <Hidden xsDown>\n              <Link href=\"/signIn\"><a>Sign In</a></Link>\n            </Hidden>\n          }\n\n          <Hidden smUp>\n            <IconButton \n              edge=\"start\" \n              className={classes.menuButton} \n              color=\"inherit\" \n              aria-label=\"menu\"\n              onClick={() => setState({ drawerOpen: !state.drawerOpen })}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n        </Toolbar>\n      </AppBar>\n\n      <Hidden smUp>\n        <MobileMenu \n          drawerOpen={state.drawerOpen} \n          closeDrawer={closeDrawer} \n          currentUser={currentUser} \n          onSignout={() => {\n            client.resetStore()\n            router.push('/')\n            removeCookie(authCookieName)\n          }}\n        />\n      </Hidden>\n    </div>\n  )\n}\n\nexport default MainNavbar\n"],"mappings":"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","sourceRoot":""}